{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js","views/apps/user/modal/index.js","views/apps/roles-permissions/store/role.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason","withReactContent","Swal","ModalAddEdit","show","setShow","useState","unitOptionsSelected","setUnitOptionsSelected","idRole","setIdRole","employeeOptionsSelected","setEmployeeOptionsSelected","setFormEdited","t","useTranslation","useParams","useDispatch","store","useSelector","storeUnit","units","storeRole","roles","colors","useContext","ThemeColors","setSelectedUser","useForm","defaultValues","username","phone","reset","control","setError","handleSubmit","formState","Loader","className","useEffect","getUnits","id_employee","filter","el","FirstName","LastName","id_role","isOpen","toggle","blocking","loader","onSubmit","unitOptionsSelect","member_of","formEdited","countChanges","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","render","placeholder","invalid","disabled","email","theme","selectThemeColors","onChange","options","classnames","classNamePrefix","isClearable","e","Array","isArray","x","closeMenuOnSelect","isMulti","outline","onClick","addRole","role","updateRole","deleteRole","rolesSlice","selected","selectRole","actions"],"mappings":"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","file":"static/js/1.abc87172.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Role\" ////\nexport const storeName = \"apps_role\" ////\nexport const endpointName = \"api/role\" ////\n\nexport const serverSideGrid = false ////\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id ?? getState()[storeName].selectedData.id\n    data[\"name\"] = getState()[storeName].selectedData.name\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const resetData = createAsyncThunk(\n  `${endpointName}/resetData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          state.selectedData = {\n            value: action.payload.data[0].id,\n            label: `${action.payload.data[0].name}`\n          }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      ///RESET\n      .addCase(resetData.rejected, (state) => {\n        state.data = []\n        state.dataSummary = []\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataRole } from \"../../role/store\"\n\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\n//   // console.log(getState().users.status)\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\n//   // console.log(response.data.data)\n//   return response.data.data\n// })\nexport const getSummaryData = createAsyncThunk(\n  \"appUsers/getSummaryData\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\n  Object.keys(params).forEach((key) => {\n    if (params[key] === null || params[key] === \"\") {\n      delete params[key]\n    }\n  })\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\n    params\n  })\n  return {\n    params,\n    data: response.data.data,\n    totalPages: response.data.total\n  }\n})\n\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\n  // console.log(response)\n  return response.data.data\n})\n\nexport const addUser = createAsyncThunk(\n  \"appUsers/addUser\",\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\n      await dispatch(getData(getState().users.params))\n      dispatch(resetDataRole({}))\n      // return response.data\n      return user\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateUser = createAsyncThunk(\n  \"appUsers/updateUser\",\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id\n    delete data.id\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.put(\n        `/api/user/${id}`,\n        data\n      )\n      dispatch(getUser(id))\n      dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data.errors)\n    }\n  }\n)\n\nexport const deleteUser = createAsyncThunk(\n  \"appUsers/deleteUser\",\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.delete(\n        `/api/user/${id}`\n      )\n      await dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const getDataEmployee = createAsyncThunk(\n  \"appUsers/getDataEmployee\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      totalPages: response.data.total\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const appUsersSlice = createSlice({\n  name: \"appUsers\",\n  initialState: {\n    crudTitle: \"User\",\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n    params: {},\n\n    // EMPLOYEE\n    status_employee: fetchStatus,\n    isLoading_employee: false,\n    error_employee: \"\" | null,\n    data_employee: [],\n    total_employee: 1,\n    params_employee: {},\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n    selectedUser: null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getData.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n      })\n      .addCase(getData.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataEmployee.pending, (state) => {\n        state.status_employee = \"loading\"\n        state.isLoading_employee = true\n      })\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status_employee = \"succeeded\"\n        state.isLoading_employee = false\n        state.data_employee = action.payload.data\n        state.params_employee = action.payload.params\n        state.total_employee = action.payload.totalPages\n      })\n      .addCase(getDataEmployee.rejected, (state, action) => {\n        state.status_employee = \"failed\"\n        state.isLoading_employee = false\n        state.error_employee = action.error.message\n      })\n\n      ///EDIT\n      .addCase(updateUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(updateUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        if (typeof action.payload === \"object\") {\n          state.errorAddEdit = JSON.stringify(action.payload)\n        } else {\n          state.errorAddEdit = action.payload.message\n        }\n      })\n\n      ///ADD\n      .addCase(addUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(addUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(addUser.rejected, (state, action) => {\n        console.log(action)\n\n        if (action.payload.errors) {\n          state.errorAddEdit = Object.values(action.payload.errors)\n        } else if (action.payload.error_reason) {\n          state.errorAddEdit = action.payload.message\n        }\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n      })\n\n      ///DELETE\n      .addCase(deleteUser.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteUser.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        // console.log(action)\n        state.errorDelete = action.payload.message\n      })\n\n      ///DETAIL\n      .addCase(getUser.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n        state.selectedUser = null\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedUser = action.payload\n      })\n      .addCase(getUser.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedUser = null\n        state.errorDetail = action.error.message\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n","import { useState, Fragment, useContext, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  CardBody,\n  Button,\n  Badge,\n  Modal,\n  Input,\n  Label,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport Moment from \"moment\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\n\nimport Swal from \"sweetalert2\"\nimport Select from \"react-select\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { updateUser, getUser, getDataEmployee } from \"../store\"\nimport { getUnits } from \"../../unit/store\"\nimport { getData } from \"../../roles-permissions/store/role\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst MySwal = withReactContent(Swal)\n\nconst ModalAddEdit = ({ show, setShow, detailPage }) => {\n  const [unitOptions, setUnitOptions] = useState([])\n  const [unitOptionsSelected, setUnitOptionsSelected] = useState([])\n  const [idRole, setIdRole] = useState(null)\n  const [employeeOptionsSelected, setEmployeeOptionsSelected] = useState([])\n  const [formEdited, setFormEdited] = useState(false)\n  const { t } = useTranslation()\n  // const [id, setId] = useState(null)\n  let { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.users)\n  const storeUnit = useSelector((state) => state.units)\n  const storeRole = useSelector((state) => state.roles)\n  const { colors } = useContext(ThemeColors)\n  const [selectedUser, setSelectedUser] = useState(store.selectedUser)\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      username: selectedUser?.username,\n      name: selectedUser?.name,\n      phone: selectedUser?.phone ?? \"\"\n    }\n  })\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1 text-white\">\n          {t(\"Please Wait\")}...\n        </CardText>\n      </Fragment>\n    )\n  }\n\n  const handleChangeUnit = (e) => {\n    // console.log(e)\n    setUnitOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\n    // console.log(unitOptionsSelected)\n  }\n\n  const handleChangeEmployee = (e) => {\n    // console.log(e)\n    setEmployeeOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\n    // console.log(unitOptionsSelected)\n  }\n\n  const countChanges = (data) => {\n    // console.log(data)\n\n    const unitOptionsSelect =\n      selectedUser.member_of !== null\n        ? selectedUser?.member_of.map((item) => ({\n            value: item.id,\n            label: item.name\n          }))\n        : []\n\n    // console.log(unitOptionsSelect)\n    // console.log(unitOptionsSelected)\n    const formEdited =\n      selectedUser.name !== data.name ||\n      selectedUser.username !== data.username ||\n      (selectedUser.phone ?? \"\") !== data.phone ||\n      JSON.stringify(unitOptionsSelect) !==\n        JSON.stringify(unitOptionsSelected) ||\n      idRole !== selectedUser.id_role\n    setFormEdited(true)\n    return formEdited\n  }\n\n  const onSubmit = (data) => {\n    if (countChanges(data)) {\n      // console.log(countChanges(data))\n      if (\n        Object.values(data).every((field) => {\n          return field.length > 0 || field === \"\"\n        })\n      ) {\n        if (data.phone === \"\") {\n          delete data.phone\n        }\n\n        data[\"id\"] = id ?? selectedUser.id\n        data[\"id_role\"] = idRole\n        data[\"id_employee\"] = employeeOptionsSelected?.id\n        data[\"member_of\"] = unitOptionsSelected\n        dispatch(updateUser(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated Data\")}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getUser(id))\n            }\n\n            // setUnitOptionsSelected(\n            //   selectedUser.member_of.map((item) => ({\n            //     value: item.id,\n            //     label: item.name\n            //   }))\n            // )\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(JSON.stringify(res.payload), {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const handleReset = () => {\n    reset({\n      username: selectedUser?.username,\n      name: selectedUser?.name\n    })\n  }\n\n  // ** Get data on mount\n  useEffect(() => {\n    // const { id } = useParams()\n    // console.log(this.props.match.params.id)\n    // if (!id) {\n    //   id = idRow\n    // }\n    setSelectedUser(store.selectedUser)\n    if (storeUnit.data.length === 0 && !storeUnit.isLoading) {\n      dispatch(getUnits())\n      setSelectedUser(store.selectedUser)\n    }\n\n    if (storeRole?.data.length === 0 && !storeRole.isLoading) {\n      dispatch(getData())\n    }\n\n    if (store?.data_employee.length === 0 && !store.isLoading_employee) {\n      dispatch(\n        getDataEmployee({\n          length: 200\n        })\n      )\n      if (store.data_employee && selectedUser?.id_employee) {\n        setEmployeeOptionsSelected(\n          store.data_employee\n            .filter((el) => el.id === selectedUser?.id_employee)\n            .map((item) => ({\n              value: item.id,\n              label: `${item.FirstName} ${item?.LastName ?? \"\"}`\n            }))\n        )\n      }\n    }\n\n    // console.log(storeUnit.data)\n    // console.log(unitOptions)\n    // console.log(unitOptionsSelected)\n\n    setIdRole(selectedUser?.id_role)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => setShow(!show)}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={\n          (store.isLoadingAddEdit || store.isLoadingDetail) &&\n          !store.selectedUser\n        }\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => setShow(!show)}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h1 className=\"mb-1\">\n              {t(\"Edit\")} {t(\"User Information\")}\n            </h1>\n            <p>{t(\"Updating user details will receive a privacy audit.\")}</p>\n          </div>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"name\">\n                  {t(\"Full Name\")}\n                </Label>\n                <Controller\n                  defaultValue=\"\"\n                  control={control}\n                  id=\"name\"\n                  name=\"name\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      id=\"name\"\n                      placeholder=\"John\"\n                      invalid={errors.name && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"username\">\n                  {t(\"Username\")}:\n                </Label>\n                <Controller\n                  defaultValue=\"\"\n                  control={control}\n                  id=\"username\"\n                  name=\"username\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      id=\"username\"\n                      placeholder=\"john.doe.007\"\n                      invalid={errors.username && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"email\">\n                  {t(\"Email\")}:\n                </Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  disabled\n                  defaultValue={selectedUser?.email}\n                  placeholder=\"example@domain.com\"\n                />\n              </Col>\n\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"phone\">\n                  {t(\"Contact\")}\n                </Label>\n                <Controller\n                  defaultValue=\"\"\n                  control={control}\n                  id=\"phone\"\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      value={selectedUser?.phone || \"\"}\n                      id=\"phone\"\n                      placeholder=\"+62 813 940 10XX X\"\n                    />\n                  )}\n                />\n              </Col>\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"id_role\">\n                  {t(\"Role\")}\n                </Label>\n                <Select\n                  id=\"id_role\"\n                  theme={selectThemeColors}\n                  defaultValue={storeRole.data\n                    .filter((el) => el.id === selectedUser?.id_role)\n                    .map((item) => ({\n                      value: item.id,\n                      label: item.name\n                    }))}\n                  onChange={(data) => {\n                    setIdRole(data.value)\n                  }}\n                  options={storeRole.data.map((item) => ({\n                    value: item.id,\n                    label: item.name\n                  }))}\n                  className={classnames(\"react-select\", {\n                    \"is-invalid\": idRole === null\n                  })}\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"id_employee\">\n                  {t(\"Employee\")}\n                </Label>\n                <Select\n                  id=\"id_employee\"\n                  isClearable={true}\n                  isLoading={store.isLoading_employee}\n                  theme={selectThemeColors}\n                  defaultValue={\n                    store.data_employee\n                      .filter((el) => el.id === selectedUser?.id_employee)\n                      .map((item) => ({\n                        value: item.id,\n                        label: `${item.FirstName} ${item?.LastName ?? \"\"}`\n                      })) ?? \"\"\n                  }\n                  onChange={(data) => {\n                    handleChangeEmployee(data)\n                  }}\n                  options={store.data_employee.map((item) => ({\n                    value: item.id,\n                    label: `${item.FirstName} ${item?.LastName ?? \"\"}`\n                  }))}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"member_of\">\n                  {t(\"Unit\")}\n                </Label>\n                <Select\n                  id=\"member_of\"\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  closeMenuOnSelect={false}\n                  defaultValue={\n                    store.selectedUser?.member_of\n                      ? store.selectedUser?.member_of.map((item) => ({\n                          value: item.id,\n                          label: item.name\n                        }))\n                      : []\n                  }\n                  onChange={(data) => {\n                    handleChangeUnit(data)\n                  }}\n                  isMulti\n                  options={storeUnit.data\n                    .map((item) => ({\n                      value: item.id,\n                      label: item.name\n                    }))\n                    .filter((x) => x.value !== \"\")}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\n\nexport const getData = createAsyncThunk(\"role/getData\", async (params) => {\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role\", {\n    params\n  })\n  return {\n    data: response.data.data\n  }\n})\n\nexport const getSummaryData = createAsyncThunk(\n  \"role/getSummaryData\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role/summary\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const addRole = createAsyncThunk(\n  \"roles/addRole\",\n  async (role, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.post(\"/api/role\", { role })\n    await dispatch(getData(getState().roles.params))\n    return role\n  }\n)\n\nexport const updateRole = createAsyncThunk(\n  \"roles/updateRole\",\n  async ({ id, name }, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.post(\"/apps/roles/update-role\", {\n      id,\n      name\n    })\n    await dispatch(getData(getState().roles.params))\n    return { id, name }\n  }\n)\n\nexport const deleteRole = createAsyncThunk(\n  \"roles/deleteRole\",\n  async (id, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.delete(\"/apps/roles/delete\", { id })\n    await dispatch(getData(getState().roles.params))\n    return id\n  }\n)\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\nexport const rolesSlice = createSlice({\n  name: \"roles\",\n  initialState: {\n    crudTitle: \"Roles\",\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n\n    selected: null\n  },\n  reducers: {\n    selectRole: (state, action) => {\n      if (action.payload === null) {\n        state.selected = null\n      } else {\n        state.selected = action.payload\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      ///ALL\n      .addCase(getData.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n      })\n      .addCase(getData.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n  }\n})\n\nexport const { selectRole } = rolesSlice.actions\n\nexport default rolesSlice.reducer\n"],"sourceRoot":""}