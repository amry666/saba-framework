{"version":3,"sources":["shared/GlobalUnitDropdown.js","@core/components/sidebar/index.js","views/apps/user/Sidebar.js","views/apps/user/Table.js"],"names":["GlobalUnitDropdown","parentChange","colMode","colSize","initialValue","colClassName","t","useTranslation","dispatch","getUserData","useDispatch","store","useSelector","state","units","useState","unitOptions","setUnitOptions","value","label","currentUnit","setCurrentUnit","handleChange","data","useEffect","dataDropdown","filter","item","selectedUnit","length","md","className","for","theme","selectThemeColors","isClearable","classNamePrefix","options","onChange","e","getOptionLabel","option","code","Sidebar","props","open","size","title","width","children","closeBtn","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","onClick","isOpen","toggle","classnames","modalClassName","undefined","style","String","close","tag","wheelPropagation","defaultValues","email","password","phone","member_of","id_role","name","username","SidebarNewUsers","colors","useContext","ThemeColors","setData","idRole","setIdRole","idUnit","setIdUnit","storeRole","users","roles","storeUnit","useForm","control","setValue","setError","handleSubmit","errors","formState","map","id","onClosed","key","onSubmit","Object","values","every","field","checkIsValid","addUser","avatar","status","then","res","meta","requestStatus","toast","success","padding","color","main","border","iconTheme","primary","message","payload","error_reason","error","danger","type","defaultValue","rules","required","pattern","render","placeholder","invalid","minLength","maxLength","closeMenuOnSelect","isMulti","vaue","outline","MySwal","withReactContent","Swal","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","ability","AbilityContext","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","xl","htmlFor","target","caret","can","sessionStorage","getItem","crudTitle","UsersList","sort_dir","setSortDir","setSearchTerm","params","page","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","number","currentStatus","setCurrentStatus","roleOptions","setRoleOptions","loading","setLoading","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","isLoading","roleOptionss","unshift","getDataRole","x","getData","search","filter_role","filter_status","filter_unit","statusObj","pending","active","inactive","renderClient","row","img","height","initials","avatarColor","content","columns","sortable","minWidth","sortField","selector","cell","to","role_name","roleObj","public","class","icon","User","viewer","Eye","editor","Edit2","admin","Settings","super_user","Slack","Icon","renderRole","billing","Moment","joined_date","format","is_active","pill","end","Link","getUser","href","preventDefault","handleEdit","handleDelete","tableColumns","useMemo","column","sx","bgcolor","dark","light","animation","statusOptions","Loader","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteUser","selectedUser","parseInt","isLoadingDetail","blocking","loader","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","val","currentTarget","show","setShow","detailPage"],"mappings":"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","file":"static/js/12.3ccc8d54.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect, useCallback, useMemo } from \"react\"\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n  Label,\n  Form\n} from \"reactstrap\"\n\nimport Select from \"react-select\"\n\nimport { useTranslation } from \"react-i18next\"\n\n// ** Utils\nimport { selectThemeColors, getUserData } from \"@utils\"\n// ** Store & Actions\nimport {\n  getUnits,\n  setUnitSelected,\n  setUnitSelectedDropdown\n} from \"../views/apps/unit/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useForm, Controller } from \"react-hook-form\"\n\nconst GlobalUnitDropdown = ({\n  parentChange,\n  colMode = false,\n  colSize = 6,\n  initialValue = true,\n  colClassName = \"\"\n}) => {\n  const { t } = useTranslation()\n  const userData = getUserData()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.units)\n  const [unitOptions, setUnitOptions] = useState([])\n  const [currentUnit, setCurrentUnit] = useState(\n    initialValue\n      ? {\n          value: \"\",\n          label: `${t(\"Select\")} ${t(\"Unit\")}`\n        }\n      : {}\n  )\n\n  const handleChange = (data, parentChange) => {\n    setCurrentUnit(data)\n    // localStorage.setItem(\"last_id_unit\", data.value)\n    if (typeof parentChange === \"function\") {\n      parentChange(data)\n    }\n  }\n\n  useEffect(() => {\n    // if (store.data.length === 0 && !store.isLoading) {\n    //   dispatch(getUnits())\n    // }\n    // console.log(userData.member_of)\n    const unitOptions = initialValue\n      ? store.dataDropdown\n      : store.dataDropdown.filter((item) => item.value !== \"\")\n\n    setUnitOptions(unitOptions)\n    setCurrentUnit(initialValue ? store.selectedUnit : unitOptions[0])\n  }, [dispatch, store.dataDropdown])\n\n  return store.data?.length > 1 ? (\n    !colMode ? (\n      <Card>\n        {/* <CardHeader>\n        <CardTitle tag=\"h4\">{t(\"Filters\")}</CardTitle>\n      </CardHeader> */}\n        <CardBody>\n          <Row>\n            <Label className=\"\" for=\"plan-select\">\n              {t(\"Unit\")}\n            </Label>\n            <Select\n              theme={selectThemeColors}\n              isClearable={false}\n              className=\"react-select\"\n              classNamePrefix=\"select\"\n              options={unitOptions}\n              value={currentUnit}\n              onChange={(e) => {\n                handleChange(e, parentChange)\n              }}\n              getOptionLabel={(option) =>\n                option.code\n                  ? `${option.code} ${option.label}`\n                  : `${option.label}`\n              }\n            />\n          </Row>\n        </CardBody>\n      </Card>\n    ) : (\n      <Col md={`${colSize}`} className={colClassName}>\n        <Label className=\"\" for=\"plan-select\">\n          {t(\"Unit\")}\n        </Label>\n        <Select\n          theme={selectThemeColors}\n          isClearable={false}\n          className=\"react-select\"\n          classNamePrefix=\"select\"\n          options={unitOptions}\n          value={currentUnit}\n          onChange={(e) => {\n            handleChange(e, parentChange)\n          }}\n          getOptionLabel={(option) =>\n            option.code ? `${option.code} ${option.label}` : `${option.label}`\n          }\n          // styles={{ menu: (base) => ({ ...base, base.children fontWeight: \"bold\" }) }}\n        />\n      </Col>\n    )\n  ) : null\n}\n\nexport default GlobalUnitDropdown\n","// ** Third Party Components\nimport { X } from \"react-feather\"\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\"\n\nconst Sidebar = (props) => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? (\n    closeBtn\n  ) : (\n    <X className=\"cursor-pointer\" size={15} onClick={toggleSidebar} />\n  )\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames(\"overflow-hidden\", {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames(\"modal-slide-in\", {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        \"sidebar-lg\": size === \"lg\",\n        \"sidebar-sm\": size === \"sm\"\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + \"px\" },\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag=\"div\"\n      >\n        <h5 className=\"modal-title\">\n          <span className=\"align-middle\">{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames(\"flex-grow-1\", {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf([\"sm\", \"lg\"]),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n// ** React Import\nimport { useState, useContext, useEffect } from \"react\"\nimport Sidebar from \"@components/sidebar\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport classnames from \"classnames\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Button, Label, FormText, Form, Input } from \"reactstrap\"\nimport store, { addUser } from \"@src/views/apps/user/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport toast from \"react-hot-toast\"\nimport { useTranslation } from \"react-i18next\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport InputPasswordToggle from \"@components/input-password-toggle\"\nconst defaultValues = {\n  email: \"\",\n  password: \"\",\n  phone: \"\",\n  member_of: \"\",\n  id_role: \"\",\n  name: \"\",\n  username: \"\"\n}\n\nconst checkIsValid = (data) => {\n  return Object.values(data).every((field) =>\n    typeof field === \"object\" || field !== \"member_of\"\n      ? field !== null && field !== \"\"\n      : field.length > 0\n  )\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** Hooks\n  const { t } = useTranslation()\n\n  // ** Theme Colors\n  const { colors } = useContext(ThemeColors)\n\n  // ** States\n  const [data, setData] = useState({})\n  const [idRole, setIdRole] = useState(3)\n  const [idUnit, setIdUnit] = useState([])\n  const store = useSelector((state) => state.users)\n  const storeRole = useSelector((state) => state.roles)\n  const storeUnit = useSelector((state) => state.units)\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = (data) => {\n    // console.log(data)\n    data[\"member_of\"] = idUnit !== null ? idUnit.map((item) => item.value) : []\n    data[\"id_role\"] = idRole !== null ? idRole : null\n    setData(data)\n    // console.log(data)\n    if (checkIsValid(data)) {\n      dispatch(\n        addUser({\n          id_role: data?.id_role,\n          avatar: \"\",\n          status: 1,\n          email: data.email,\n          member_of: data?.member_of,\n          phone: data.phone,\n          name: data.name,\n          username: data.username,\n          password: data.password\n        })\n      ).then((res) => {\n        if (res.meta.requestStatus === \"fulfilled\") {\n          toggleSidebar()\n          toast.success(`${t(\"Successfully Create Data\")}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          // console.log(store.errorAddEdit)\n          let message = \"\"\n          if (res.payload.errors) {\n            message = Object.values(res.payload.errors)\n          } else if (res.payload.error_reason) {\n            message = res.payload.message\n          }\n          toast.error(`${t(message)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, \"\")\n    }\n    // setRole(null)\n  }\n\n  useEffect(() => {\n    const selectedUnit = storeUnit.data.map((item) => ({\n      value: item.id,\n      label: item.name\n    }))\n    // console.log(selectedUnit[0])\n    setIdUnit([selectedUnit[0]])\n  }, [dispatch, storeUnit.data.length])\n\n  return (\n    <Sidebar\n      size=\"lg\"\n      open={open}\n      title={t(\"New User\")}\n      headerClassName=\"mb-1\"\n      contentClassName=\"pt-0\"\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"name\">\n            {t(\"Full Name\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: true,\n              pattern: {\n                value: /^[a-zA-Z\\s]*$/,\n                message: t(\"Invalid name, you can only use letters\")\n              }\n            }}\n            id=\"name\"\n            name=\"name\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                id=\"name\"\n                placeholder=\"John\"\n                invalid={errors.name && true}\n              />\n            )}\n          />\n          {errors.name && (\n            <FormText color=\"danger\">{t(errors.name.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"email\">\n            {t(\"Email\")} <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            name=\"email\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: t(\"You need to specify a valid email address\")\n              },\n              pattern: {\n                value: /^\\S+@\\S+$/i,\n                message: t(\"Not valid email adreess.\")\n              }\n            }}\n            render={({ field }) => (\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"john.doe@example.com\"\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color=\"muted\">\n            {t(\"You can use letters, numbers & periods\")}\n          </FormText>\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"username\">\n            {t(\"Username\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: true,\n              minLength: {\n                value: 4,\n                message: t(\"minimum number of character is 4\")\n              },\n              maxLength: {\n                value: 15,\n                message: t(\"maximum number of character is 15\")\n              },\n              pattern: {\n                value:\n                  /^[a-zA-Z0-9]+([a-zA-Z0-9](_|-| )[a-zA-Z0-9])*[a-zA-Z0-9]+$/,\n                message: t(\n                  \"You can use letters and numbers without white space\"\n                )\n              }\n            }}\n            id=\"username\"\n            name=\"username\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                id=\"username\"\n                placeholder=\"john.doe.007\"\n                invalid={errors.username && true}\n              />\n            )}\n          />\n          {errors.username && (\n            <FormText color=\"danger\">{t(errors.username.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <div className=\"d-flex justify-content-between\">\n            <Label className=\"form-label\" for=\"login-password\">\n              {t(\"Password\")} <span className=\"text-danger\">*</span>\n            </Label>\n          </div>\n          <Controller\n            defaultValue=\"\"\n            id=\"password\"\n            name=\"password\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: t(\"Password is required\")\n              },\n              minLength: {\n                value: 8,\n                message: t(\"Password must have at least 8 characters\")\n              }\n            }}\n            render={({ field }) => (\n              <InputPasswordToggle\n                className=\"input-group-merge\"\n                invalid={errors.password && true}\n                {...field}\n              />\n            )}\n          />\n          {errors.password && (\n            <FormText color=\"danger\">{t(errors.password.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"phone\">\n            {t(\"Mobile Phone Number\")}\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: false,\n              pattern: {\n                value: /^[0-9+-]+$/,\n                message: \"This is not a valid mobile phone, try again!\"\n              },\n              minLength: {\n                value: 6,\n                message: \"This number is too short.\"\n              },\n              maxLength: {\n                value: 14,\n                message: \"...And now it's too long.\"\n              }\n            }}\n            id=\"phone\"\n            name=\"phone\"\n            render={({ field }) => (\n              <Input {...field} id=\"phone\" placeholder=\"+62 813 940 10XX X\" />\n            )}\n          />\n          {errors.phone && (\n            <FormText color=\"danger\">{t(errors.phone.message)}</FormText>\n          )}\n        </div>\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"id_unit\">\n            {t(\"Unit\")}\n          </Label>\n          <Select\n            id=\"id_unit\"\n            isClearable={false}\n            theme={selectThemeColors}\n            closeMenuOnSelect={false}\n            // defaultValue={null}\n            onChange={(data) => {\n              setIdUnit(data)\n            }}\n            defaultValue={\n              storeUnit.data.map((item) => ({\n                value: item.id,\n                label: item.name\n              }))[0]\n            }\n            isMulti\n            options={storeUnit.data.map((item) => ({\n              value: item.id,\n              label: item.name\n            }))}\n            className=\"react-select\"\n            classNamePrefix=\"select\"\n          />\n        </div>\n        <div className=\"mb-1\">\n          <Label for=\"role-select\">{t(\"Role\")}</Label>\n          <Select\n            id=\"id_role\"\n            isClearable={false}\n            options={storeRole.data.map((item) => ({\n              value: item.id,\n              label: item.name\n            }))}\n            defaultValue={{\n              label: \"editor\",\n              vaue: 3\n            }}\n            classNamePrefix=\"select\"\n            className={classnames(\"react-select\", {\n              \"is-invalid\": idRole === null\n            })}\n            theme={selectThemeColors}\n            onChange={(data) => {\n              // console.log(data.value)\n              setIdRole(data.value)\n            }}\n          />\n        </div>\n\n        <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n          {t(\"Submit\")}\n        </Button>\n        <Button type=\"reset\" color=\"secondary\" outline onClick={toggleSidebar}>\n          {t(\"Cancel\")}\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\n\nimport { Fragment, useState, useEffect, useContext, useMemo } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport Sidebar from \"@src/views/apps/user/Sidebar\"\nimport ModalAddEdit from \"@src/views/apps/user/modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport Avatar from \"@components/avatar\"\nimport { getData, getUser, deleteUser } from \"@src/views/apps/user/store\"\nimport { getData as getDataRole } from \"@src/views/apps/roles-permissions/store/role\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Select from \"react-select\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye\n} from \"react-feather\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { selectThemeColors } from \"@utils\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport GlobalUnitDropdown from \"@src/shared/GlobalUnitDropdown\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  CardText\n} from \"reactstrap\"\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nconst MySwal = withReactContent(Swal)\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = \",\"\n    const lineDelimiter = \"\\n\"\n    const keys = Object.keys(store.data[0])\n\n    result = \"\"\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach((item) => {\n      let ctr = 0\n      keys.forEach((key) => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement(\"a\")\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = \"export.csv\"\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute(\"href\", encodeURI(csv))\n    link.setAttribute(\"download\", filename)\n    link.click()\n  }\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className=\"d-flex align-items-center table-header-actions\">\n            <UncontrolledDropdown className=\"me-1\">\n              <DropdownToggle color=\"secondary\" caret outline>\n                <Share className=\"font-small-4 me-50\" />\n                <span className=\"align-middle\">{t(\"Export\")}</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem className=\"w-100\">\n                  <Printer className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Print</span>\n                </DropdownItem>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() => downloadCSV(store.data)}\n                >\n                  <FileText className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">CSV</span>\n                </DropdownItem>\n                <DropdownItem className=\"w-100\">\n                  <Grid className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Excel</span>\n                </DropdownItem>\n                <DropdownItem className=\"w-100\">\n                  <File className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">PDF</span>\n                </DropdownItem>\n                <DropdownItem className=\"w-100\">\n                  <Copy className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n              >\n                {t(\"Add New\")} {t(store.crudTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.users)\n  const storeUnit = useSelector((state) => state.units)\n  const storeRole = useSelector((state) => state.roles)\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  // ** Theme Colors\n  const { colors } = useContext(ThemeColors)\n\n  // ** States\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(store.params?.page ?? 1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(store.params?.length ?? 10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({\n    value: \"\",\n    label: `${t(\"Select\")} ${t(\"Role\")}`\n  })\n  const [currentUnit, setCurrentUnit] = useState({\n    value: \"\",\n    label: `${t(\"Select\")} ${t(\"Unit\")}`\n  })\n  const [currentStatus, setCurrentStatus] = useState({\n    value: \"\",\n    label: `${t(\"Select\")} Status`,\n    number: 0\n  })\n  const [roleOptions, setRoleOptions] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  // ** Function to toggle sidebar\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen)\n    neutralizeBack(handleCloseModal)\n  }\n\n  // ** Get data on mount\n  useEffect(() => {\n    // console.log(store.params)\n    if (storeRole?.data.length === 0 && !storeRole.isLoading) {\n      dispatch(getDataRole()).then((x) => {\n        if (x.data) {\n          const roleOptionss = x.payload.data.map((item) => ({\n            value: item.id,\n            label: item.name\n          }))\n          roleOptionss.unshift({\n            value: \"\",\n            label: `${t(\"Select\")} ${t(\"Role\")}`\n          })\n          setRoleOptions(roleOptionss)\n        }\n      })\n    } else {\n      const roleOptionss = storeRole.data.map((item) => ({\n        value: item.id,\n        label: item.name\n      }))\n      roleOptionss.unshift({\n        value: \"\",\n        label: `${t(\"Select\")} ${t(\"Role\")}`\n      })\n      setRoleOptions(roleOptionss)\n    }\n\n    if (store.data.length === 0 && !store.isLoading) {\n      dispatch(\n        getData({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage,\n          filter_role: currentRole.value,\n          filter_status: currentStatus.value,\n          filter_unit: currentUnit.value\n        })\n      )\n    }\n  }, [\n    dispatch,\n    store.data.length,\n    storeUnit.data.length,\n    storeRole.data.length,\n    sort_dir,\n    sort,\n    currentPage\n  ])\n\n  const statusObj = {\n    pending: \"light-warning\",\n    active: \"light-success\",\n    inactive: \"light-secondary\"\n  }\n\n  // ** Renders Client Columns\n  const renderClient = (row) => {\n    if (row.avatar) {\n      return (\n        <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\n      )\n    } else {\n      return (\n        <Avatar\n          initials\n          className=\"me-1\"\n          color={row.avatarColor || \"light-primary\"}\n          content={row.name || \"John Doe\"}\n        />\n      )\n    }\n  }\n\n  // ** Renders Role Columns\n  const renderRole = (row) => {\n    const roleObj = {\n      public: {\n        class: \"text-primary\",\n        icon: User\n      },\n      viewer: {\n        class: \"text-success\",\n        icon: Eye\n      },\n      editor: {\n        class: \"text-info\",\n        icon: Edit2\n      },\n      admin: {\n        class: \"text-warning\",\n        icon: Settings\n      },\n      super_user: {\n        class: \"text-danger\",\n        icon: Slack\n      }\n    }\n\n    const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\n\n    return (\n      <span className=\"text-truncate text-capitalize align-middle\">\n        <Icon\n          size={18}\n          className={`${\n            roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\n          } me-50`}\n        />\n        {row.role_name}\n      </span>\n    )\n  }\n\n  const columns = [\n    {\n      name: t(\"User\"),\n      sortable: true,\n      minWidth: \"400px\",\n      sortField: \"name\",\n      selector: (row) => row.name,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {renderClient(row)}\n          <div className=\"d-flex flex-column\">\n            <Link\n              to={`/apps/user/view/${row.id}`}\n              className=\"user_name text-truncate text-body\"\n              // onClick={() => store.dispatch(getUser(row.id))}\n            >\n              <span className=\"fw-bolder\">{row.name}</span>\n            </Link>\n            <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: t(\"Role\"),\n      sortable: true,\n      minWidth: \"200px\",\n      sortField: \"role_name\",\n      selector: (row) => row.role_name,\n      cell: (row) => renderRole(row)\n    },\n    // {\n    //   name: \"Unit\",\n    //   minWidth: \"138px\",\n    //   sortable: true,\n    //   sortField: \"unit\",\n    //   selector: (row) => row.currentPlan,\n    //   cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\n    // },\n    {\n      name: t(\"Joined Date\"),\n      minWidth: \"230px\",\n      sortable: true,\n      sortField: \"joined_date\",\n      selector: (row) => row.billing,\n      cell: (row) => (\n        <span className=\"text-capitalize\">\n          {Moment(row.joined_date).format(\"DD MMM YYYY\")}\n        </span>\n      )\n    },\n    {\n      name: t(\"Status\"),\n      minWidth: \"120px\",\n      sortable: true,\n      sortField: \"status\",\n      selector: (row) => row.is_active,\n      cell: (row) => (\n        <Badge\n          className=\"text-capitalize\"\n          color={statusObj[row.is_active ? \"active\" : \"inactive\"]}\n          pill\n        >\n          {row.is_active ? t(\"active\") : t(\"inactive\")}\n        </Badge>\n      )\n    },\n    {\n      name: t(\"Actions\"),\n      width: \"130px\",\n      cell: (row) => (\n        <div className=\"column-action text-center\">\n          <UncontrolledDropdown>\n            <DropdownToggle tag=\"span\">\n              <MoreVertical size={14} className=\"cursor-pointer\" />\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem\n                tag={Link}\n                className=\"w-100\"\n                to={`/apps/user/view/${row.id}`}\n                onClick={() => store.dispatch(getUser(row.id))}\n              >\n                <FileText size={14} className=\"me-50\" />\n                <span className=\"align-middle\">{t(\"Details\")}</span>\n              </DropdownItem>\n\n              {ability.can(\n                \"update\",\n                sessionStorage.getItem(\"current_page_perm\")\n              ) && (\n                <DropdownItem\n                  tag=\"a\"\n                  href=\"/\"\n                  className=\"w-100\"\n                  onClick={(e) => {\n                    e.preventDefault()\n                    handleEdit(row.id)\n                  }}\n                >\n                  <Archive size={14} className=\"me-50\" />\n                  <span className=\"align-middle\">{t(\"Edit\")}</span>\n                </DropdownItem>\n              )}\n\n              {ability.can(\n                \"delete\",\n                sessionStorage.getItem(\"current_page_perm\")\n              ) && (\n                <DropdownItem\n                  tag=\"a\"\n                  href=\"/\"\n                  className=\"w-100\"\n                  onClick={(e) => {\n                    e.preventDefault()\n                    handleDelete(row.id)\n                  }}\n                >\n                  <Trash2 size={14} className=\"me-50\" />\n                  <span className=\"align-middle\">{t(\"Delete\")}</span>\n                </DropdownItem>\n              )}\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: column.name,\n            sortable: false,\n            minWidth: column.minWidth,\n            width: column.width,\n            cell: (row) => (\n              <Skeleton\n                sx={{ bgcolor: colors.dark.light }}\n                animation=\"wave\"\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\n                height={40}\n              />\n            )\n          }))\n        : columns.map((column) => ({\n            name: column.name,\n            sortable: column.sortable,\n            minWidth: column.minWidth,\n            width: column.width,\n            sortField: column.sortField,\n            selector: column.selector,\n            cell: column.cell\n          })),\n    [store.isLoading, columns]\n  )\n\n  const statusOptions = [\n    { value: \"\", label: `${t(\"Select\")} Status`, number: 0 },\n    { value: \"pending\", label: `${t(\"Pending\")}`, number: 1 },\n    { value: \"active\", label: `${t(\"Active\")}`, number: 2 },\n    { value: \"inactive\", label: `${t(\"Inactive\")}`, number: 3 }\n  ]\n\n  const handleChangeUnit = (value) => {\n    setCurrentUnit(value)\n    dispatch(\n      getData({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        filter_role: currentRole.value,\n        filter_unit: value.value,\n        filter_status: currentStatus.value\n      })\n    )\n  }\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(\"Please Wait\")}...</CardText>\n      </Fragment>\n    )\n  }\n\n  const handleDelete = (id) => {\n    return MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(\"user\")}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete User!\")}`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      if (result.value) {\n        setLoading(true)\n        dispatch(deleteUser(id)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setLoading(false)\n            toast.success(`${t(\"Successfully deleted Data\")}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n          } else if (res.meta.requestStatus === \"rejected\") {\n            setLoading(false)\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      }\n    })\n  }\n\n  const handleEdit = (id) => {\n    setLoading(true)\n    if (\n      !store.selectedUser ||\n      (store.selectedUser?.id !== parseInt(id) && !store.isLoadingDetail)\n    ) {\n      dispatch(getUser(id)).then((res) => {\n        setShowModal(true)\n        setLoading(false)\n      })\n    } else {\n      setLoading(false)\n      setShowModal(true)\n    }\n  }\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    dispatch(\n      getData({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1,\n        filter_role: currentRole.value,\n        filter_status: currentStatus.value,\n        filter_unit: currentUnit.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage,\n        filter_role: currentRole.value,\n        filter_unit: currentUnit.value,\n        filter_status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search searchuery change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        sort_dir,\n        search: val,\n        sort,\n        page: currentPage,\n        length: rowsPerPage,\n        filter_role: currentRole.value,\n        filter_status: currentStatus.value,\n        filter_unit: currentUnit.value\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getData({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        filter_role: currentRole.value,\n        filter_status: currentStatus.value,\n        filter_unit: currentUnit.value\n      })\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      filter_role: currentRole.value,\n      filter_unit: currentUnit.value,\n      filter_status: currentStatus.value,\n      search: searchTerm\n    }\n    // console.log(tableData)\n    // console.log(tableColumns)\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card>\n          {/* <CardHeader>\n            <CardTitle tag=\"h4\">{t(\"Filters\")}</CardTitle>\n          </CardHeader> */}\n          <CardBody>\n            <Row>\n              <Col>\n                <Label for=\"role-select\">{t(\"Role\")}</Label>\n                <Select\n                  isClearable={false}\n                  value={currentRole}\n                  options={roleOptions}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                  theme={selectThemeColors}\n                  onChange={(data) => {\n                    setCurrentRole(data)\n                    dispatch(\n                      getData({\n                        sort_dir,\n                        sort,\n                        search: searchTerm,\n                        filter_role: data.value,\n                        page: currentPage,\n                        length: rowsPerPage,\n                        filter_status: currentStatus.value,\n                        filter_unit: currentUnit.value\n                      })\n                    )\n                  }}\n                />\n              </Col>\n              <Col>\n                <Label for=\"status-select\">Status</Label>\n                <Select\n                  theme={selectThemeColors}\n                  isClearable={false}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                  options={statusOptions}\n                  value={currentStatus}\n                  onChange={(data) => {\n                    setCurrentStatus(data)\n                    dispatch(\n                      getData({\n                        sort_dir,\n                        sort,\n                        search: searchTerm,\n                        page: currentPage,\n                        filter_status: data.value,\n                        length: rowsPerPage,\n                        filter_role: currentRole.value,\n                        filter_unit: currentUnit.value\n                      })\n                    )\n                  }}\n                />\n              </Col>\n              <GlobalUnitDropdown\n                parentChange={handleChangeUnit}\n                colMode={true}\n              />\n            </Row>\n          </CardBody>\n        </Card>\n\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              pagination\n              responsive\n              paginationServer\n              style={{ \"min-height\": \"400px\" }}\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              paginationComponent={CustomPagination}\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n      </UILoader>\n\n      {store.selectedUser !== null && (\n        <ModalAddEdit\n          show={showModal}\n          setShow={setShowModal}\n          detailPage={false}\n          // idRow={store.selectedUser.id}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default UsersList\n"],"sourceRoot":""}