{"version":3,"sources":["views/apps/endpoint/store/index.js","views/apps/endpoint/modal/index.js","views/apps/endpoint/Tree.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","isTreeLayout","dynamicColumns","columnName","fieldName","minWidth","dynamicColumnsFilter","filterLabel","dynamicForm","fieldLabel","type","required","datafromStore","extraCrud","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","setDataList","rowData","rejectWithValue","getDataById","id","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","notReload","put","deleteData","delete","deleteSelectedRowData","setDataById","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","map","item","value","label","title","ModalAddEdit","show","setShow","formState","setFormState","currentData","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","allStore","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","Loader","errors","className","handleReset","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","i","path_name","replaceAll","MyComponent","lazy","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","x","lookupMode_isM2MDefValFromGrid","defaultValue","onChange","e","target","length","isOpen","toggle","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","fallback","textAlign","outline","onClick","MySwal","withReactContent","Swal","List","searchString","sidebarOpen","setSidebarOpen","ability","AbilityContext","setLoading","showModal","setShowModal","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleDelete","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","updateDataToApi","nameMsg","removeDefaultValue","dataTree","mainArray","parse","iter","Array","isArray","children","height","margin","treeData","onMoveNode","node","nextParentNode","prevPath","prevTreeIndex","nextPath","nextTreeIndex","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontSize","fontWeight","paddingLeft","buttons","can","sessionStorage","getItem","Ripple","size","placement","preventDefault","hidden","disabled","defaultChecked","checked","handleChangeLookupMode"],"mappings":"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","file":"static/js/121.519075c7.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\n\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Endpoint\" ////\nexport const storeName = \"apps_endpoint\" ////\nexport const endpointName = \"api/endpoint\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\nexport const disabledAction = []\nexport const isManyToManyGrid = true\nexport const storeToRefreshAfterAll = []\nexport const isTreeLayout = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  {\n    columnName: \"Url\",\n    fieldName: \"url_path\",\n    minWidth: \"350px\"\n  }\n  // {\n  //   columnName: \"App\",\n  //   fieldName: \"app_name\",\n  //   minWidth: \"120px\"\n  // }\n]\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"App\",\n    fieldName: \"id_app\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = [\n  {\n    fieldName: \"url_path\",\n    fieldLabel: \"Url\",\n    type: \"text\",\n    required: true\n  },\n  {\n    fieldName: \"id_app\",\n    fieldLabel: \"App\",\n    type: \"dropdown\",\n    required: true,\n    datafromStore: \"app\"\n  }\n]\n\nexport const extraCrud = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    // console.log(params)\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const setDataList = createAsyncThunk(\n  `${endpointName}/setDataList`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    // Object.keys(data).forEach((key) => {\n    //   if (data[key] === null || data[key] === \"\") {\n    //     delete data[key]\n    //   }\n    // })\n    const id = data.id ?? getState()[storeName].selectedData.id\n    const notReload = data[\"notReload\"]\n    if (notReload) delete data[\"notReload\"]\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut && !notReload) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    dynamicColumns,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.total\n        state.dataDropdown = action.payload.data.map((item) => ({\n          value: item.id,\n          label: item.title\n        }))\n        state.status = \"succeeded\"\n        state.isLoading = false\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataList.rejected, (state, action) => {\n        state.data = action.payload\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable brace-style */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById,\n  dynamicForm\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const allStore = useSelector((state) => state)\n  const [dynamicComponents, setDynamicComponents] = useState({})\n  const [formDatas, setFormDatas] = useState({})\n  const [formDatasError, setFormDatasError] = useState({})\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = () => {\n    if (countChanges(formDatas)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = () => {\n    if (\n      Object.values(formDatas).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(formDatas)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      // console.log(\"ERORR\")\n      // console.log(formDatas)\n      let errorFields = Object.assign({}, formDatasError)\n      for (let key in formDatas) {\n        // console.log(key, formDatas[key])\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\n          errorFields[key] = true\n        }\n      }\n      // console.log(errorFields)\n      setFormDatasError(errorFields)\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    // console.log(value, fieldName, isMulti)\n    if (isMulti) {\n      if (formDatas[fieldName]) {\n        const index = formDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          formDatas[fieldName].splice(index, 1)\n        } else {\n          formDatas[fieldName].push(value)\n        }\n      } else {\n        formDatas[fieldName] = [value]\n      }\n    } else {\n      formDatas[fieldName] = value\n    }\n    // formDatasError[fieldName] = false\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\n    //   return el.type === \"dropdown\" || el.type === \"table\"\n    // })\n\n    const dynamicFormRelation = dynamicForm\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      formDatas[fieldName] = null\n      formDatasError[fieldName] = false\n\n      ////////////INPUT - DROPDOWN\n      if (\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\n        dynamicFormRelation[i][\"type\"] === \"table\"\n      ) {\n        const MyComponent = lazy(() => import(`../../${path_name}`))\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <MyComponent\n              key={`dynInput_${fieldName}`}\n              lookupMode={true}\n              lookupMode_fieldName={fieldName}\n              lookupMode_dropdown={\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\n              }\n              lookupMode_isMulti={\n                dynamicFormRelation[i].isMultiSelection ?? false\n              }\n              lookupMode_onChange={handleChangeInputs}\n              lookupMode_defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              lookupMode_isM2MDefValFromGrid={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\n              }\n            />\n          </Fragment>\n        )\n      }\n\n      ////////////INPUT - TEXT\n      else {\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <Input\n              key={`dynInput_${fieldName}`}\n              defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              onChange={(e) =>\n                handleChangeInputs(\n                  e.target.value,\n                  fieldName,\n                  dynamicFormRelation[i].isMultiSelection ?? false\n                )\n              }\n              // className={\n              //   !formDatasError[fieldName]\n              //     ? \"form-control is-invalid\"\n              //     : \"form-control\"\n              // }\n              id={`dynInput_${fieldName}`}\n            />\n          </Fragment>\n        )\n      }\n    }\n\n    setDynamicComponents(componentsImport)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\n            </h2>\n            <p className=\"mb-1\">\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\n            </p>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              {dynamicForm.map((item, index) => {\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\n                  if (item.type === \"table\") {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"dynamicForm_input\"\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  } else {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"\"\n                                : \"dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  }\n                } else {\n                  return (\n                    <Col key={path_name} md={12} xs={12}>\n                      <div\n                        className={\n                          !formDatasError[item.fieldName]\n                            ? \"\"\n                            : \"dynamicForm_input_invalid\"\n                        }\n                      >\n                        {dynamicComponents[`${path_name}_comp`]}\n                      </div>\n                    </Col>\n                  )\n                }\n              })}\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  Component\n} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  setDataList,\n  putData\n} from \"./store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye,\n  CheckCircle,\n  CheckSquare,\n  Check,\n  Square,\n  Plus\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  UncontrolledTooltip,\n  CardText\n} from \"reactstrap\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\nimport { Loader } from \"@src/shared/CommonComponents\"\n\nconst List = ({\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { t } = useTranslation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const ability = useContext(AbilityContext)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\n\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\n\n  const { colors } = useContext(ThemeColors)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const toggleSidebar = (row = null) => {\n    // console.log(row.id)\n    setCurrentDataAdd(row)\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const handleChange = (tree) => {\n    dispatch(setDataList(tree))\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    let mainArray = JSON.parse(JSON.stringify(store.data))\n    mainArray.forEach(function iter(a) {\n      if (a.id === id) {\n        a.checked = e.target.checked\n      }\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    handleChange(mainArray)\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const eventCanDragNode = (args) => {\n    // console.log(args)\n    if (args.node.is_app_header) {\n      return false\n    }\n    return true\n  }\n\n  const onMoveNode = ({\n    treeData,\n    node,\n    nextParentNode,\n    prevPath,\n    prevTreeIndex,\n    nextPath,\n    nextTreeIndex\n  }) => {\n    // console.log(nextParentNode)\n    const data = {\n      id: node.id,\n      title: node.title,\n      parent_id: nextParentNode.is_app_header ? null : nextParentNode.id\n    }\n    updateDataToApi(data, true)\n  }\n\n  const updateDataToApi = (data, notReload = false) => {\n    // console.log(data)\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\n    if (notReload) data[\"notReload\"] = true\n    const nameMsg = data.title\n    dispatch(putData(data, notReload)).then((res) => {\n      // console.log(res)\n      if (res.meta.requestStatus === \"fulfilled\") {\n        toast.success(\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\n          {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          }\n        )\n      } else if (res.meta.requestStatus === \"rejected\") {\n        toast.error(res.payload.message, {\n          style: {\n            padding: \"16px\",\n            color: colors.danger.main,\n            border: `1px solid ${colors.danger.main}`\n          },\n          iconTheme: {\n            primary: colors.danger.main\n          }\n        })\n      }\n    })\n  }\n\n  const customSearchMethod = ({ node, searchQuery }) => {\n    return (\n      searchQuery &&\n      node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\n    )\n  }\n\n  const selectPrevMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n        : searchFoundCount - 1\n    )\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\n    )\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    mainArray.forEach(function iter(a) {\n      if (data.includes(a.id)) {\n        a[\"checked\"] = true\n        a[\"hidden\"] = true\n      }\n      // console.log(a.id, !data.includes(a.id))\n\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    // console.log(data)\n    // console.log(mainArray)\n    dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(getDataList({})).then((x) => {\n        // console.log(lookupMode_isM2MDefValFromGrid)\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n    // console.log(lookupMode_isM2MDefValFromGrid)\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <div\n              style={{\n                height: !lookupMode ? 800 : 350,\n                margin: !lookupMode ? 20 : 10\n              }}\n            >\n              <SortableTree\n                treeData={store.data}\n                onChange={handleChange}\n                onMoveNode={!lookupMode ? onMoveNode : null}\n                canDrag={!lookupMode ? eventCanDragNode : false}\n                searchMethod={customSearchMethod}\n                searchQuery={searchString}\n                searchFocusOffset={searchFocusIndex}\n                searchFinishCallback={(matches) => {\n                  setSearchFoundCount(matches.length)\n                  setSearchFocusIndex(\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\n                  )\n                }}\n                // onlyExpandSearchedNodes\n                maxDepth={4}\n                generateNodeProps={({ node, path }) => ({\n                  style: {\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\n                  },\n                  title: node.icon ? (\n                    <>\n                      <div\n                        style={{\n                          paddingLeft: node.is_app_header ? 0 : 10,\n                          fontWeight: node.is_app_header ? `bold` : 400\n                        }}\n                      >\n                        {node.title}\n                      </div>\n                    </>\n                  ) : (\n                    <div\n                      style={{ fontWeight: node.is_app_header ? `bold` : 400 }}\n                    >\n                      {node.title}\n                    </div>\n                  ),\n                  buttons: [\n                    ability.can(\n                      \"post\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) && !lookupMode ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-primary\"\n                          id=\"btn-edit\"\n                          onClick={(e) => {\n                            toggleSidebar(node)\n                          }}\n                        >\n                          <Plus size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                          {t(\"Add Child\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"update\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !lookupMode &&\n                    !node.is_app_header ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-info\"\n                          id=\"btn-edit\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleEdit(node)\n                          }}\n                        >\n                          <Edit2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                          {t(\"Edit\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"delete\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !lookupMode &&\n                    !node.is_app_header ? (\n                      <>\n                        <Button.Ripple\n                          id=\"btn-delete\"\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-danger\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleDelete(node.id)\n                          }}\n                        >\n                          <Trash2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip\n                          placement=\"left\"\n                          target=\"btn-delete\"\n                        >\n                          {t(\"Delete\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    lookupMode && !node.is_app_header ? (\n                      <div\n                        className={\n                          node.hidden\n                            ? \"form-check form-check-secondary\"\n                            : \"form-check form-check-primary\"\n                        }\n                      >\n                        <Input\n                          disabled={node.hidden}\n                          defaultChecked={node.checked}\n                          onChange={(e) =>\n                            handleChangeLookupMode(\n                              e,\n                              node.id,\n                              lookupMode_fieldName,\n                              lookupMode_isMulti\n                            )\n                          }\n                          type=\"checkbox\"\n                          id={`checkbox-${node.id}`}\n                        />\n                      </div>\n                    ) : null\n                  ]\n                })}\n              />\n            </div>\n          </div>\n        </Card>\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n          currentData={currentDataAdd}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}