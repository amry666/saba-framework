{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","../node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js","views/apps/menu/modal/index.js","views/apps/menu/Tree.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","_excluded","getStyleValue","parseInt","styles","visibility","position","overflow","height","top","left","transform","isEmpty","obj","keys","length","outerHeightStyle","TextareaAutosize","React","props","forwardedRef","onChange","maxRows","minRows","style","other","_objectWithoutPropertiesLoose","isControlled","current","inputRef","handleRef","useForkRef","shadowRef","renders","state","setState","getUpdatedState","input","computedStyle","ownerWindow","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","updateState","prevState","newState","syncHeight","resizeObserver","handleResize","debounce","ReactDOM","syncHeightWithFlushSync","containerWindow","addEventListener","ResizeObserver","observe","clear","removeEventListener","disconnect","useEnhancedEffect","_jsxs","children","_jsx","_extends","event","ref","rows","className","readOnly","tabIndex","CustomLabel","htmlFor","size","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","useParams","dispatch","useDispatch","store","useSelector","storeName","colors","useContext","ThemeColors","useState","setLoadingText","useForm","control","setError","setValue","getValues","handleSubmit","errors","is_separator","isSeparator","setIsSeparator","iconCategory","setIconCategory","icon","setIcon","canvasPlacement","setCanvasPlacement","canvasOpen","setCanvasOpen","toggleCanvasStart","toggleCanvasBottom","setIconBefore","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","title","onSubmit","data","parent_id","id_app","values","every","field","putData","then","res","meta","requestStatus","toast","success","color","main","iconTheme","primary","getDataById","error","payload","message","danger","key","type","is_app_header","postData","md","xs","for","defaultValue","selectedData","name","render","invalid","val","target","Ripple","outline","onClick","renderIcon","marginTop","defaultChecked","checked","changeSeparator","dataDropdown","filter","el","theme","selectThemeColors","isDisabled","options","map","item","label","classnames","classNamePrefix","routePath","description","direction","MySwal","withReactContent","Swal","List","searchString","lookupMode","lookupMode_fieldName","lookupMode_defaultValue","lookupMode_onChange","lookupMode_isMulti","lookupMode_isM2MDefValFromGrid","sidebarOpen","setSidebarOpen","ability","AbilityContext","setLoading","showModal","setShowModal","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleDelete","a","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","removeDefaultValue","dataTree","mainArray","JSON","parse","stringify","forEach","iter","includes","Array","isArray","useEffect","isLoading","getAlwaysGrid","getDataList","x","margin","treeData","onMoveNode","node","nextParentNode","nextTreeIndex","prevPath","prevTreeIndex","nextPath","index","canDrag","args","searchMethod","searchQuery","toLowerCase","titleTranslate","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontSize","fontWeight","src","logo","paddingLeft","textTransform","buttons","can","sessionStorage","getItem","e","placement","rowData","preventDefault","detailFromGrid","setDataById","hidden","disabled","handleChangeLookupMode"],"mappings":"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","file":"static/js/122.bdea6efe.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflow;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n      onChange,\n      maxRows,\n      minRows = 1,\n      style,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({\n    outerHeightStyle: 0\n  });\n  const getUpdatedState = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0\n      };\n    }\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = inputShallow.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState;\n    // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (renders.current === 20) {\n        console.error(['MUI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n      }\n    }\n    return prevState;\n  };\n  const syncHeight = React.useCallback(() => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n  const syncHeightWithFlushSync = () => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n\n    // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n    ReactDOM.flushSync(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0;\n\n      // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n      if (inputRef.current) {\n        syncHeightWithFlushSync();\n      }\n    });\n    let resizeObserver;\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    containerWindow.addEventListener('resize', handleResize);\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(input);\n    }\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n  const handleChange = event => {\n    renders.current = 0;\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: _extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : undefined\n      }, style)\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        paddingTop: 0,\n        paddingBottom: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport { Check, X } from \"react-feather\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Offcanvas,\n  OffcanvasHeader,\n  OffcanvasBody,\n  InputGroup\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport classnames from \"classnames\"\nimport { TextareaAutosize } from \"@mui/material\"\nimport { renderIcon } from \"../store/my_menu\"\nimport IconsFeather from \"../icons/feather\"\nimport IconsMaterial from \"../icons/material\"\n\nconst CustomLabel = ({ htmlFor }) => {\n  return (\n    <Label className=\"form-check-label\" htmlFor={htmlFor}>\n      <span className=\"switch-icon-left\">\n        <Check size={14} />\n      </span>\n      <span className=\"switch-icon-right\">\n        <X size={14} />\n      </span>\n    </Label>\n  )\n}\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const [isSeparator, setIsSeparator] = useState(currentData.is_separator)\n  const [iconCategory, setIconCategory] = useState(\"feather\")\n  const [icon, setIcon] = useState(currentData?.icon)\n\n  const [canvasPlacement, setCanvasPlacement] = useState(\"start\")\n  const [canvasOpen, setCanvasOpen] = useState(false)\n  const toggleCanvasStart = () => {\n    setIconCategory(\"feather\")\n    setCanvasPlacement(\"start\")\n    setCanvasOpen(!canvasOpen)\n  }\n\n  const toggleCanvasBottom = () => {\n    setIconCategory(\"feather\")\n    setCanvasPlacement(\"bottom\")\n    setCanvasOpen(!canvasOpen)\n  }\n\n  const setIconBefore = (icon) => {\n    setValue(\"icon\", icon)\n    setIcon(icon)\n  }\n\n  const countChanges = (data) => {\n    // if (formState === \"edit\") {\n    //   const storeData = { ...sortedObject(store.selectedData) }\n    //   delete storeData[\"id\"]\n    //   for (let key in storeData) {\n    //     if (!(key in data)) delete storeData[key]\n    //   }\n    //   // console.log(JSON.stringify(sortedObject(storeData)))\n    //   // console.log(JSON.stringify(sortedObject(data)))\n    //   return (\n    //     JSON.stringify(sortedObject(storeData)) !==\n    //     JSON.stringify(sortedObject(data))\n    //   )\n    // } else {\n    //   return true\n    // }\n\n    return true\n  }\n\n  const updateDataToApi = (data) => {\n    // console.log(data)\n    data[\"is_separator\"] = isSeparator\n    data[\"icon\"] = icon\n    // console.log(data)\n    if (data.parent_id) {\n      if (data.parent_id.value >= 9000) {\n        data[\"id_app\"] = data.parent_id.id_app\n        data[\"parent_id\"] = null\n      } else {\n        data[\"parent_id\"] = data.parent_id.value\n      }\n    }\n    // console.log(data)\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null\n        }) ||\n        data[\"parent_id\"] === null\n      ) {\n        if (!isSeparator && data[\"routePath\"] === \"\") {\n          for (const key in data) {\n            if (data[key] !== null && data[key]?.length === 0) {\n              setError(key, {\n                type: \"manual\"\n              })\n            }\n          }\n        } else {\n          setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n          dispatch(putData(data)).then((res) => {\n            // console.log(res)\n            if (res.meta.requestStatus === \"fulfilled\") {\n              setShow(!show)\n              toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n                style: {\n                  padding: \"16px\",\n                  color: colors.success.main,\n                  border: `1px solid ${colors.success.main}`\n                },\n                iconTheme: {\n                  primary: colors.success.main\n                }\n              })\n              if (detailPage) {\n                dispatch(getDataById(id))\n              }\n            } else if (res.meta.requestStatus === \"rejected\") {\n              toast.error(res.payload.message, {\n                style: {\n                  padding: \"16px\",\n                  color: colors.danger.main,\n                  border: `1px solid ${colors.danger.main}`\n                },\n                iconTheme: {\n                  primary: colors.danger.main\n                }\n              })\n            }\n          })\n        }\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    // console.log(data)\n    if (\n      Object.values(data).every((field) => {\n        return field !== null\n      })\n    ) {\n      if (!isSeparator && data[\"routePath\"] === \"\") {\n        for (const key in data) {\n          if (data[key] !== null && data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      } else {\n        setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n\n        // console.log(currentData, data)\n\n        if (!currentData.is_app_header) {\n          data[\"parent_id\"] = currentData.id\n        } else {\n          data[\"parent_id\"] = null\n        }\n\n        data[\"id_app\"] = currentData.id_app\n        data[\"is_separator\"] = isSeparator\n        data[\"icon\"] = icon\n        // console.log(data)\n\n        dispatch(postData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      }\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const changeSeparator = (data) => {\n    // console.log(data.target.checked)\n    setIsSeparator(data.target.checked)\n    if (data.target.checked) {\n    }\n  }\n\n  // const changeParentId = (data) => {\n  //   console.log(data)\n\n  //   if (data.is_app_header) {\n  //     setValue(\"parent_id\", { value: null })\n  //   } else {\n  //     setValue(\"parent_id\", data)\n  //   }\n\n  //   // if (data?.routePath) {\n  //   //   setValue(\"parent_id\", data.id)\n  //   //   setValue(\"routePath\", `${data?.routePath}/`)\n  //   // }\n  // }\n\n  // useEffect(() => {\n  //   console.log(store.dataDropdown)\n  // }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\n            </h2>\n            {formState !== \"edit\" && (\n              <p className=\"mb-1\">\n                {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\n              </p>\n            )}\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"title\">\n                  {t(\"Title\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.title ?? \"\"}\n                  control={control}\n                  id=\"title\"\n                  name=\"title\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.title\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"title\"\n                      invalid={errors.title && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              {!isSeparator && (\n                <Col md={4} xs={8} className=\"text-center\">\n                  <Label className=\"form-label\" for=\"icon\">\n                    {t(\"Icon\")}\n                    <span className=\"text-danger\">*</span>\n                  </Label>\n                  <div>\n                    {/* <Button.Ripple\n                      className=\"btn-icon\"\n                      outline\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={toggleCanvasBottom}\n                    >\n                      {renderIcon(icon, \"14\")}\n                    </Button.Ripple> */}\n                  </div>\n                  <Controller\n                    defaultValue={store.selectedData?.icon ?? \"\"}\n                    control={control}\n                    id=\"icon\"\n                    name=\"icon\"\n                    render={({ field }) => (\n                      <InputGroup>\n                        <Input\n                          {...field}\n                          className={\n                            errors.icon\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          onChange={(event) => {\n                            const val = event.target.value\n                            field.onChange(val)\n                            setIcon(val)\n                          }}\n                          id=\"icon\"\n                          invalid={errors.icon && true}\n                        />\n                        <Button.Ripple\n                          className=\"btn-icon\"\n                          outline\n                          color=\"secondary\"\n                          onClick={toggleCanvasBottom}\n                        >\n                          {renderIcon(\n                            getValues()[\"icon\"] ??\n                              icon ??\n                              \"material:highlight_alt\",\n                            \"fw-bold\",\n                            16\n                          )}\n                        </Button.Ripple>\n                      </InputGroup>\n                    )}\n                  />\n                </Col>\n              )}\n\n              <Col className=\" d-grid justify-content-center\" md={2} xs={4}>\n                <Label className=\"form-label\" for=\"is_separator\">\n                  {t(\"Separator\")}\n                </Label>\n                <div\n                  style={{ marginTop: \"4px\" }}\n                  className=\"form-switch form-check-primary mx-auto\"\n                >\n                  <Input\n                    type=\"switch\"\n                    defaultChecked={isSeparator}\n                    onChange={(data) => {\n                      changeSeparator(data)\n                    }}\n                    id=\"icon-primary\"\n                    name=\"icon-primary\"\n                  />\n                  <CustomLabel htmlFor=\"icon-primary\" />\n                </div>\n              </Col>\n\n              <Col md={6} xs={12}>\n                <Label className=\"form-label\" for=\"parent_id\">\n                  {t(\"Parent Menu\")}\n                </Label>\n                <Controller\n                  defaultValue={\n                    store.dataDropdown.filter(\n                      (el) =>\n                        el.value ===\n                        (formState === \"edit\"\n                          ? currentData?.parent_id\n                          : currentData?.id)\n                    ) ?? \"\"\n                  }\n                  control={control}\n                  id=\"parent_id\"\n                  name=\"parent_id\"\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      id=\"parent_id\"\n                      theme={selectThemeColors}\n                      defaultValue={store.dataDropdown.filter(\n                        (el) =>\n                          el.value ===\n                          (formState === \"edit\"\n                            ? currentData?.parent_id\n                            : currentData?.id)\n                      )}\n                      // onChange={(data) => {\n                      //   changeParentId(data)\n                      // }}\n                      isDisabled={formState === \"add\"}\n                      options={store.dataDropdown\n                        .filter((el) => el.value !== store.selectedData?.id)\n                        .map((item) => ({\n                          ...item,\n                          // id_app: item.id_app,\n                          label: t(item.title)\n                        }))}\n                      className={classnames(\"react-select\", {\n                        \"is-invalid\": store.selectedData?.parent_id === null\n                      })}\n                      classNamePrefix=\"select\"\n                    />\n                  )}\n                />\n              </Col>\n\n              {!isSeparator && (\n                <Col md={6} xs={12}>\n                  <Label className=\"form-label\" for=\"subject\">\n                    {t(\"Route Path\")}\n                    <span className=\"text-danger\">*</span>\n                  </Label>\n                  <Controller\n                    defaultValue={store.selectedData?.routePath ?? \"\"}\n                    control={control}\n                    id=\"routePath\"\n                    name=\"routePath\"\n                    render={({ field }) => (\n                      <Input\n                        {...field}\n                        className={\n                          errors.routePath\n                            ? \"form-control is-invalid\"\n                            : \"form-control\"\n                        }\n                        id=\"routePath\"\n                        invalid={errors.routePath && true}\n                      />\n                    )}\n                  />\n                </Col>\n              )}\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.description ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <TextareaAutosize\n                      {...field}\n                      className=\"form-control\"\n                      id=\"description\"\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n\n      <Offcanvas\n        direction={canvasPlacement}\n        isOpen={canvasOpen}\n        toggle={toggleCanvasStart}\n      >\n        <OffcanvasHeader className=\"mb-1 mt-1 me-1\" toggle={toggleCanvasStart}>\n          {t(\"Select\")} {t(\"Icon\")}\n          <Button.Ripple\n            className=\"ms-2 me-2\"\n            color=\"primary\"\n            outline={iconCategory !== \"feather\"}\n            onClick={(event) => {\n              setIconCategory(\"feather\")\n            }}\n          >\n            Feather Icon\n          </Button.Ripple>\n          <Button.Ripple\n            color=\"primary\"\n            outline={iconCategory !== \"material\"}\n            onClick={(event) => {\n              setIconCategory(\"material\")\n            }}\n          >\n            Material Icon\n          </Button.Ripple>\n        </OffcanvasHeader>\n        <OffcanvasBody\n          className={classnames({\n            \"my-auto mx-0 flex-grow-0\":\n              canvasPlacement === \"start\" || canvasPlacement === \"end\"\n          })}\n        >\n          {iconCategory === \"feather\" ? (\n            <IconsFeather\n              setIcon={setIconBefore}\n              setCanvasOpen={setCanvasOpen}\n            />\n          ) : (\n            // <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\n            <IconsMaterial\n              setIcon={setIconBefore}\n              setCanvasOpen={setCanvasOpen}\n            />\n          )}\n          {/* <Button\n            color=\"primary\"\n            onClick={toggleCanvasStart}\n            className={classnames({\n              \"mb-1\": canvasPlacement === \"start\" || canvasPlacement === \"end\",\n              \"me-1\": canvasPlacement === \"top\" || canvasPlacement === \"bottom\"\n            })}\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\n              ? { block: true }\n              : {})}\n          >\n            Continue\n          </Button>\n          <Button\n            outline\n            color=\"secondary\"\n            onClick={toggleCanvasStart}\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\n              ? { block: true }\n              : {})}\n          >\n            Cancel\n          </Button> */}\n        </OffcanvasBody>\n      </Offcanvas>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  Component\n} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  setDataList,\n  putData\n} from \"./store\"\nimport { renderIcon } from \"./store/my_menu\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye,\n  CheckCircle,\n  CheckSquare,\n  Check,\n  Square,\n  Plus\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  UncontrolledTooltip,\n  CardText\n} from \"reactstrap\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\nimport { Loader } from \"@src/shared/CommonComponents\"\n\nconst List = ({\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { t } = useTranslation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const ability = useContext(AbilityContext)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\n\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\n\n  const { colors } = useContext(ThemeColors)\n\n  const handleEdit = (rowData) => {\n    // console.log(rowData)\n    setCurrentDataAdd(rowData)\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const toggleSidebar = (row = null) => {\n    // console.log(row)\n    setCurrentDataAdd(row)\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const handleChange = (tree) => {\n    dispatch(setDataList(tree))\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    let mainArray = JSON.parse(JSON.stringify(store.data))\n    mainArray.forEach(function iter(a) {\n      if (a.id === id) {\n        a.checked = e.target.checked\n      }\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    handleChange(mainArray)\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const eventCanDragNode = (args) => {\n    // console.log(args)\n    if (args.node?.is_app_header) {\n      return false\n    }\n    return true\n  }\n\n  const onMoveNode = ({\n    treeData,\n    node,\n    nextParentNode,\n    prevPath,\n    prevTreeIndex,\n    nextPath,\n    nextTreeIndex\n  }) => {\n    // console.log(treeData)\n    // console.log(node)\n    // console.log(nextParentNode)\n    // console.log(prevPath)\n    // console.log(prevTreeIndex)\n    // console.log(nextPath)\n    // console.log(nextTreeIndex)\n    const data = {\n      id: node.id,\n      title: node.title,\n      parent_id: nextParentNode?.is_app_header ? null : nextParentNode.id,\n      index: nextTreeIndex ?? 1\n    }\n    updateDataToApi(data, true)\n  }\n\n  const updateDataToApi = (data, notReload = false) => {\n    // console.log(data)\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\n    if (notReload) data[\"notReload\"] = true\n    const nameMsg = data.title\n    dispatch(putData(data, notReload)).then((res) => {\n      // console.log(res)\n      if (res.meta.requestStatus === \"fulfilled\") {\n        toast.success(\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\n          {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          }\n        )\n      } else if (res.meta.requestStatus === \"rejected\") {\n        toast.error(res.payload.message, {\n          style: {\n            padding: \"16px\",\n            color: colors.danger.main,\n            border: `1px solid ${colors.danger.main}`\n          },\n          iconTheme: {\n            primary: colors.danger.main\n          }\n        })\n      }\n    })\n  }\n\n  const customSearchMethod = ({ node, searchQuery }) => {\n    const title = node.title.toLowerCase()\n    const titleTranslate = t(node.title).toLowerCase()\n    // console.log(searchQuery, title.toLowerCase())\n    return (\n      (searchQuery && title.indexOf(searchQuery) > -1) ||\n      (searchQuery && titleTranslate.indexOf(searchQuery) > -1)\n    )\n  }\n\n  const selectPrevMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n        : searchFoundCount - 1\n    )\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\n    )\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    mainArray.forEach(function iter(a) {\n      if (data.includes(a.id)) {\n        a[\"checked\"] = true\n        a[\"hidden\"] = true\n      }\n      // console.log(a.id, !data.includes(a.id))\n\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    // console.log(data)\n    // console.log(mainArray)\n    dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(getDataList({})).then((x) => {\n        // console.log(lookupMode_isM2MDefValFromGrid)\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n\n    if (store.data) {\n      // console.log(store.data)\n      // console.log(\n      //   store.data\n      //     ?.find((itemxx) => itemxx.id_app === 1053)\n      //     ?.children?.filter((itemxx2) => itemxx2.parent_id === node.id)\n      // )\n    }\n    // console.log(lookupMode_isM2MDefValFromGrid)\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [store.data])\n\n  return (\n    <Fragment>\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <div\n              style={{\n                height: !lookupMode ? 800 : 350,\n                margin: !lookupMode ? 20 : 10\n              }}\n            >\n              <SortableTree\n                treeData={store.data}\n                onChange={handleChange}\n                onMoveNode={!lookupMode ? onMoveNode : null}\n                canDrag={!lookupMode ? eventCanDragNode : false}\n                searchMethod={customSearchMethod}\n                searchQuery={searchString}\n                searchFocusOffset={searchFocusIndex}\n                searchFinishCallback={(matches) => {\n                  setSearchFoundCount(matches.length)\n                  setSearchFocusIndex(\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\n                  )\n                }}\n                // onlyExpandSearchedNodes\n                maxDepth={4}\n                generateNodeProps={({ node, path }) => {\n                  // console.log(node)\n                  return {\n                    style: {\n                      fontSize: node.is_app_header ? `16px` : \"14px\",\n                      fontWeight: node.is_app_header ? `bold` : \"normal\"\n                    },\n                    title: (\n                      <Fragment>\n                        {!node.is_app_header ? (\n                          !node.is_separator ? (\n                            node.icon ? (\n                              <div>{renderIcon(node.icon, \"\", 24)} </div>\n                            ) : (\n                              <div\n                                style={{\n                                  fontWeight: node.is_app_header ? `bold` : 400\n                                }}\n                              >\n                                {t(node.title)}\n                              </div>\n                            )\n                          ) : null\n                        ) : (\n                          <img\n                            className=\"me-1\"\n                            src={node.logo}\n                            width=\"30\"\n                            height=\"25\"\n                          />\n                        )}\n                        <div\n                          style={{\n                            paddingLeft: node.is_app_header ? 0 : 10,\n                            fontWeight:\n                              node.is_app_header || node.is_separator\n                                ? `bold`\n                                : 400,\n                            textTransform: node.is_separator ? `uppercase` : \"\",\n                            color: node.is_separator ? \"#a6a4b0\" : \"inherit\"\n                          }}\n                        >\n                          {t(node.title)}\n                        </div>\n                      </Fragment>\n                    ),\n                    buttons: [\n                      ability.can(\n                        \"post\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) && !lookupMode ? (\n                        // && !node.is_separator\n                        <>\n                          <Button.Ripple\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-primary\"\n                            id=\"btn-edit\"\n                            onClick={(e) => {\n                              toggleSidebar(node)\n                            }}\n                          >\n                            <Plus size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-edit\"\n                          >\n                            {t(\"Add Child\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      ability.can(\n                        \"update\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) &&\n                      !lookupMode &&\n                      !node.is_app_header ? (\n                        <>\n                          <Button.Ripple\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-info\"\n                            id=\"btn-edit\"\n                            onClick={(e) => {\n                              e.preventDefault()\n                              handleEdit(node)\n                            }}\n                          >\n                            <Edit2 size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-edit\"\n                          >\n                            {t(\"Edit\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      ability.can(\n                        \"delete\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) &&\n                      !lookupMode &&\n                      !node.is_app_header &&\n                      !node.children?.length > 0 ? (\n                        // store.data\n                        //   ?.find((itemxx) => itemxx.id_app === node.id_app)\n                        //   ?.children?.filter(\n                        //     (itemxx2) => itemxx2.parent_id === node.id\n                        //   )?.length === 0\n                        <>\n                          <Button.Ripple\n                            id=\"btn-delete\"\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-danger\"\n                            onClick={(e) => {\n                              e.preventDefault()\n                              handleDelete(node.id)\n                            }}\n                          >\n                            <Trash2 size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-delete\"\n                          >\n                            {t(\"Delete\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      lookupMode && !node.is_app_header ? (\n                        <div\n                          className={\n                            node.hidden\n                              ? \"form-check form-check-secondary\"\n                              : \"form-check form-check-primary\"\n                          }\n                        >\n                          <Input\n                            disabled={node.hidden}\n                            defaultChecked={node.checked}\n                            onChange={(e) =>\n                              handleChangeLookupMode(\n                                e,\n                                node.id,\n                                lookupMode_fieldName,\n                                lookupMode_isMulti\n                              )\n                            }\n                            type=\"checkbox\"\n                            id={`checkbox-${node.id}`}\n                          />\n                        </div>\n                      ) : null\n                    ]\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </Card>\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n          currentData={currentDataAdd}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}