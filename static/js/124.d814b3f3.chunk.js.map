{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/unit/modal/index.js","views/apps/unit/Table.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","keys","sort","reduce","obj","key","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","onSubmit","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","icon","depth","postData","console","log","md","xs","for","defaultValue","name","render","invalid","code","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","htmlFor","onChange","width","can","sessionStorage","getItem","e","target","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","rowData","detailFromGrid","setDataById","handleCloseModal","revivalBack","neutralizeBack","handleDelete","a","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","countSelectedCopy","map","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","dynamicColumns","column","columnName","sortField","fieldName","center","sortable","selector","row","cell","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","tableColumns","useMemo","isLoading","sx","bgcolor","dark","light","animation","height","useEffect","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget"],"mappings":"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","file":"static/js/124.d814b3f3.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [tgl1, setTgl1] = useState(null)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  function sortedObject(unordered) {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key]\n        return obj\n      }, {})\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload?.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      data[\"depth\"] = currentData.depth + 1\n      data[\"parent_id\"] = currentData.id\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n            {formState !== \"edit\" ? (\n              <p>\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\n                dulu akun anda.\n              </p>\n            ) : null}\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"name\">\n                  {t(\"Name\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.name ?? \"\"}\n                  control={control}\n                  id=\"name\"\n                  name=\"name\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\n                      }\n                      id=\"name\"\n                      invalid={errors.name && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Code\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.code ?? \"\"}\n                  control={control}\n                  id=\"code\"\n                  name=\"code\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\n                      }\n                      id=\"code\"\n                      invalid={errors.code && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  dynamicColumns,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData\n} from \"./store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  CardText\n} from \"reactstrap\"\n\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\n\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"8\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className=\"d-flex align-items-center table-header-actions\">\n            <UncontrolledDropdown className=\"me-1\">\n              <DropdownToggle color=\"secondary\" caret outline>\n                <Share className=\"font-small-4 me-50\" />\n                <span className=\"align-middle\">{t(\"Export\")}</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        print: true,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Printer className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\n                </DropdownItem>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <File className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">PDF</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"xls\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Grid className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Excel</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  // onClick={() => downloadCSV(store.data)}\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"csv\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <FileText className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">CSV</span>\n                </DropdownItem>\n\n                {/* <DropdownItem className=\"w-100\">\n                  <Copy className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Copy</span>\n                </DropdownItem> */}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = () => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const renderCell = (row, column) => {\n    const field = row[column.fieldName]\n    const dataFormat = column.dataFormat\n    if (dataFormat) {\n      if (dataFormat.includes(\":\")) {\n        const columnTypeFormat = dataFormat.split(\":\")\n        const columnType = columnTypeFormat[0]\n        const columnFormat = columnTypeFormat[1]\n        let columnFormated = row[column.fieldName]\n        if (columnType === \"date\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        if (columnType === \"datetime\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        return columnFormated\n      }\n    }\n    return row[column.fieldName]\n  }\n\n  const columns = [\n    ...dynamicColumns.map((column) => ({\n      name: column.columnName,\n      sortField: column.fieldName,\n      center: false,\n      sortable: true,\n      selector: (row) => row[column.fieldName],\n      cell: (row) => renderCell(row, column)\n    })),\n    {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <GlobalActionsTable\n          row={row}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n        />\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: t(column.name),\n            ...column,\n            sortable: false,\n            cell: (row) => (\n              <Skeleton\n                sx={{ bgcolor: colors.dark.light }}\n                animation=\"wave\"\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\n                height={40}\n              />\n            )\n          }))\n        : columns.map((column) => ({\n            name: t(column.name),\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage\n        })\n      )\n    }\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}