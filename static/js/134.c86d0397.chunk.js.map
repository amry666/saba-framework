{"version":3,"sources":["views/apps/unit/modal/index.js","views/apps/unit/Tree.js"],"names":["ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","Object","keys","sort","reduce","obj","key","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","onSubmit","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","icon","depth","postData","console","log","md","xs","for","defaultValue","name","render","invalid","code","outline","onClick","MySwal","withReactContent","Swal","List","searchString","sidebarOpen","setSidebarOpen","ability","AbilityContext","setLoading","showModal","setShowModal","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleDelete","a","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","value","deleteData","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","useEffect","dataNested","isLoadingNested","getAlwaysGrid","getDataList","height","marginLeft","marginRight","marginTop","treeData","onChange","tree","setDataListNested","canDrag","searchMethod","node","searchQuery","toLowerCase","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontSize","is_app_header","fontWeight","attributes","logo","src","buttons","can","sessionStorage","getItem","Ripple","e","size","placement","target","disableEdit","rowData","preventDefault","detailFromGrid","setDataById","disableDelete","children"],"mappings":"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","file":"static/js/134.c86d0397.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [tgl1, setTgl1] = useState(null)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  function sortedObject(unordered) {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key]\n        return obj\n      }, {})\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload?.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      data[\"depth\"] = currentData.depth + 1\n      data[\"parent_id\"] = currentData.id\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n            {formState !== \"edit\" ? (\n              <p>\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\n                dulu akun anda.\n              </p>\n            ) : null}\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"name\">\n                  {t(\"Name\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.name ?? \"\"}\n                  control={control}\n                  id=\"name\"\n                  name=\"name\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\n                      }\n                      id=\"name\"\n                      invalid={errors.name && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Code\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.code ?? \"\"}\n                  control={control}\n                  id=\"code\"\n                  name=\"code\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\n                      }\n                      id=\"code\"\n                      invalid={errors.code && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport { Fragment, useState, useEffect, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  setDataList,\n  setDataListNested,\n  putData\n} from \"./store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Edit2, Trash2, Plus } from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport { Card, Button, UncontrolledTooltip, CardText } from \"reactstrap\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport Avatar from \"@components/avatar\"\n\nconst List = (searchString) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { t } = useTranslation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const ability = useContext(AbilityContext)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\n\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\n\n  const { colors } = useContext(ThemeColors)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const toggleSidebar = (row = null) => {\n    // console.log(row.id)\n    setCurrentDataAdd(row)\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const handleChange = (tree) => {\n    // console.log(tree)\n    dispatch(setDataListNested(tree))\n  }\n\n  const eventCanDragNode = (args) => {\n    // console.log(args)\n    if (args.node.is_app_header) {\n      return false\n    }\n    return true\n  }\n\n  const onMoveNode = ({\n    treeData,\n    node,\n    nextParentNode,\n    prevPath,\n    prevTreeIndex,\n    nextPath,\n    nextTreeIndex\n  }) => {\n    // console.log(nextParentNode)\n    const data = {\n      name: node.name,\n      id: node.id,\n      parent_id: nextParentNode.id\n    }\n    updateDataToApi(data, true)\n  }\n\n  const updateDataToApi = (data, notReload = false) => {\n    // console.log(data)\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\n    if (notReload) data[\"notReload\"] = true\n    const nameMsg = data.name\n    delete data[\"name\"]\n    dispatch(putData(data, notReload)).then((res) => {\n      // console.log(res)\n      if (res.meta.requestStatus === \"fulfilled\") {\n        toast.success(\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\n          {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          }\n        )\n      } else if (res.meta.requestStatus === \"rejected\") {\n        toast.error(res.payload.message, {\n          style: {\n            padding: \"16px\",\n            color: colors.danger.main,\n            border: `1px solid ${colors.danger.main}`\n          },\n          iconTheme: {\n            primary: colors.danger.main\n          }\n        })\n      }\n    })\n  }\n\n  const customSearchMethod = ({ node, searchQuery }) => {\n    return (\n      searchQuery &&\n      node.name.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\n    )\n  }\n\n  const selectPrevMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n        : searchFoundCount - 1\n    )\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\n    )\n\n  useEffect(() => {\n    // console.log(store)\n    if (\n      (store.dataNested.length === 0 && !store.isLoadingNested) ||\n      getAlwaysGrid\n    ) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.dataNested.length > 0])\n\n  return (\n    <Fragment>\n      <UILoader blocking={store.isLoadingNested} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <div\n              style={{\n                height: 1000,\n                marginLeft: 20,\n                marginRight: 20,\n                marginTop: 40\n              }}\n            >\n              <SortableTree\n                treeData={store.dataNested}\n                onChange={handleChange}\n                // onMoveNode={onMoveNode}\n                // canDrag={eventCanDragNode}\n                canDrag={false}\n                searchMethod={customSearchMethod}\n                searchQuery={searchString.searchString}\n                searchFocusOffset={searchFocusIndex}\n                searchFinishCallback={(matches) => {\n                  setSearchFoundCount(matches.length)\n                  setSearchFocusIndex(\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\n                  )\n                }}\n                // onlyExpandSearchedNodes\n                maxDepth={10}\n                generateNodeProps={({ node, path }) => ({\n                  style: {\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\n                  },\n                  title: (\n                    <div className=\"d-flex justify-content-left align-items-center\">\n                      {\n                        node?.attributes?.logo && (\n                          <img\n                            className=\"me-1\"\n                            src={node.attributes.logo}\n                            // width=\"60\"\n                            height=\"25\"\n                          />\n                        )\n                        // : (\n                        //   <Avatar\n                        //     initials\n                        //     className=\"me-1\"\n                        //     color={\"light-primary\"}\n                        //     content={node.name || \"\"}\n                        //   />\n                        // )\n                      }\n                      <div className=\"d-flex flex-column\">\n                        <span className=\"fw-bolder\">\n                          {/* {node.code}  */}\n                          {node.name}\n                        </span>\n                      </div>\n                    </div>\n                  ),\n                  buttons: [\n                    ability.can(\n                      \"post\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-primary\"\n                          id=\"btn-add-child\"\n                          onClick={(e) => {\n                            toggleSidebar(node)\n                          }}\n                        >\n                          <Plus size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip\n                          placement=\"left\"\n                          target=\"btn-add-child\"\n                        >\n                          {t(\"Add Child\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"update\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !node.is_app_header &&\n                    !node.disableEdit ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-info\"\n                          id=\"btn-edit\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleEdit(node)\n                          }}\n                        >\n                          <Edit2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                          {t(\"Edit\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"delete\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !node.disableDelete &&\n                    node?.children?.length === 0 ? (\n                      <>\n                        <Button.Ripple\n                          id=\"btn-delete\"\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-danger\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleDelete(node.id)\n                          }}\n                        >\n                          <Trash2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip\n                          placement=\"left\"\n                          target=\"btn-delete\"\n                        >\n                          {t(\"Delete\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null\n                  ]\n                })}\n              />\n            </div>\n          </div>\n        </Card>\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n          currentData={currentDataAdd}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}