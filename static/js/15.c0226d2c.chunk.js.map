{"version":3,"sources":["views/apps/permission/store/index.js","views/apps/permission_menu/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","title","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","className","type","CustomHeader","store","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","lookupMode","lookupMode_defaultFilter","t","useTranslation","ability","useContext","AbilityContext","useDispatch","allState","useSelector","invoices","getUserData","useEffect","getDataListPermission","xl","htmlFor","onChange","style","width","can","sessionStorage","getItem","color","onClick","e","target","index","List","filtersCustomAdd","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","lookupMode_isM2MDefValFromGrid","storeApp","apps_app","colors","ThemeColors","useState","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","filtersCustom","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","handleEdit","then","getDataListApp","res","meta","requestStatus","toast","padding","danger","main","border","iconTheme","primary","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","success","countSelectedCopy","values","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","columns","column","columnName","sortField","center","sortable","selector","row","cell","field","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","disabledAction","tableColumns","useMemo","sx","bgcolor","dark","light","animation","height","blocking","loader","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","show","setShow"],"mappings":"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","file":"static/js/15.c0226d2c.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Permission\" ////\nexport const storeName = \"apps_permission\" ////\nexport const endpointName = \"api/permission\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = []\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"Role\",\n    fieldName: \"id_role\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const extraCrud = [\n  {\n    crudName: \"permission_menu\",\n    crudLabel: \"Permission to Menu\"\n  },\n  {\n    crudName: \"permission_endpoint\",\n    crudLabel: \"Permission to Endpoint\"\n    // crudDescription: \"Permission to Endpoint\"\n  }\n]\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: item.title,\n            post: false,\n            put: false,\n            delete: false,\n            get: false\n          }))\n          // state.selectedData = {\n          //   value: action.payload.data[0].id,\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\n          // }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  disabledAction\n} from \"./store\"\n\nimport { getDataList as getDataListApp } from \"../app/store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  CardText\n} from \"reactstrap\"\n\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\n\nimport { getDataList as getDataListPermission } from \"../permission/store\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\n\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected,\n  handleFiltersChange,\n  lookupMode,\n  lookupMode_defaultFilter\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const dispatch = useDispatch()\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  ////FILTER\n  const allState = useSelector((state) => state)\n\n  useEffect(() => {\n    if (\n      allState[\"apps_permission\"].data.length === 0 ||\n      !allState[\"apps_permission\"].isLoading\n    ) {\n      // console.log(dispatch({ type: \"api/permission/getDataList\", payload: {} }))\n      dispatch(getDataListPermission({}))\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          {!lookupMode && (\n            <div className=\"d-flex align-items-center w-100\">\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n              <Input\n                className=\"mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{ width: \"5rem\" }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n              </Input>\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n            </div>\n          )}\n        </Col>\n        <Col\n          xl=\"8\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          {!lookupMode_defaultFilter ? (\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\n              <Input\n                type=\"select\"\n                name=\"select\"\n                // value={role}\n                onChange={(e) =>\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\n                }\n              >\n                <option value=\"\">\n                  {t(\"Select\")} {t(\"Permission\")}\n                </option>\n                {allState[\"apps_permission\"].data.map((item, index) => (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                ))}\n              </Input>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center table-header-actions\">\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = ({\n  filtersCustomAdd,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_dropdown,\n  lookupMode_isMulti,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  lookupMode_isM2MDefValFromGrid,\n  lookupMode_defaultFilter\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const storeApp = useSelector((state) => state.apps_app)\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const [filtersCustom, setFiltersCustom] = useState(\n    lookupMode_defaultFilter ?? {}\n  )\n\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\n          dispatch(getDataListApp({})).then((res) => {\n            setLoading(false)\n            setShowModal(true)\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage,\n        ...filtersCustom\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleFiltersChange = (value, par_name) => {\n    // console.log(event)\n    // console.log(par_name)\n    filtersCustom[par_name] = parseInt(value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const renderCell = (row, column) => {\n    const field = row[column.fieldName]\n    const dataFormat = column.dataFormat\n    if (dataFormat) {\n      if (dataFormat.includes(\":\")) {\n        const columnTypeFormat = dataFormat.split(\":\")\n        const columnType = columnTypeFormat[0]\n        const columnFormat = columnTypeFormat[1]\n        let columnFormated = row[column.fieldName]\n        if (columnType === \"date\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        if (columnType === \"datetime\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        return columnFormated\n      }\n    }\n    return row[column.fieldName]\n  }\n\n  const columns = [\n    ...store.dynamicColumns.map((column) => ({\n      name: column.columnName,\n      sortField: column.fieldName,\n      center: false,\n      sortable: true,\n      selector: (row) => row[column.fieldName],\n      cell: (row) => renderCell(row, column)\n    })),\n    // {\n    //   name: t(\"App Name\"),\n    //   sortField: \"attributes\",\n    //   center: false,\n    //   sortable: true,\n    //   selector: (row) => row.attributes,\n    //   cell: (row) => row.attributes\n    // },\n    {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <GlobalActionsTable\n          disabledAction={disabledAction}\n          row={row}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n        />\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: t(column.name),\n            ...column,\n            sortable: false,\n            cell: (row) =>\n              column.name === \"Actions\" ? (\n                <>\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    className=\"ms-2 me-1\"\n                    width={30}\n                    height={40}\n                  />\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    width={30}\n                    height={40}\n                  />\n                </>\n              ) : (\n                <Skeleton\n                  sx={{ bgcolor: colors.dark.light }}\n                  animation=\"wave\"\n                  width=\"100%\"\n                  height={40}\n                />\n              )\n          }))\n        : columns.map((column) => ({\n            name: t(column.name),\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  useEffect(() => {\n    if (\n      store.data.length === 0 ||\n      (!store.isLoading && getAlwaysGrid) ||\n      lookupMode_defaultFilter\n    ) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage,\n          ...filtersCustom\n        })\n      )\n    }\n    // console.log(lookupMode_defaultFilter)\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                  handleFiltersChange={handleFiltersChange}\n                  lookupMode={lookupMode}\n                  lookupMode_defaultFilter={lookupMode_defaultFilter}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}