{"version":3,"sources":["assets/images/banner/banner-19.jpg","assets/images/banner/banner-20.jpg","views/dashboard/widgets/WidgetAnnouncement.js"],"names":["params","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","autoHeight","pagination","clickable","type","bulletClassName","navigation","WidgetAnnouncement","lg","md","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","useDispatch","navigate","useNavigate","storeName","useState","isFullscreen","setIsFullscreen","exitFullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","element2","getElementById","style","zoom","useEffect","pageData","data","length","isLoading","getDataList","endpointName","baseUrl","handleKeydown","event","addEventListener","removeEventListener","imgs","img1","img2","xs","minHeight","className","renderIcon","tag","blocking","loader","id","cursor","Ripple","onClick","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","color","FullscreenExit","size","Fullscreen","map","slide","index","backgroundImage","img_path","backgroundSize","backgroundPosition","height","display","flexDirection","alignItems","borderRadius","padding","fontSize","title","textAlign","maxHeight","dangerouslySetInnerHTML","__html","description","e","customStyles","titleCustom","messageCustom"],"mappings":"qPAAe,MAA0B,sCCA1B,MAA0B,sC,iCCsBnCA,EAAS,CACbC,aAAc,GACdC,gBAAgB,EAChBC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,YAAY,EACZC,WAAY,CACVC,WAAW,EACXC,KAAM,UACNC,gBAAiB,iBAEnBC,YAAY,GAsQCC,UAnQY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GACxBC,EAAMC,cAAND,EAEFE,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBACrCC,EAAWC,cACXC,EAAWC,cAEXC,EAAY,sBAGlB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAkDMC,EAAiB,WACrB,GACEC,SAASC,mBACTD,SAASE,sBACTF,SAASG,yBACTH,SAASI,oBACT,CACIJ,SAASD,eACXC,SAASD,iBACAC,SAASK,oBAClBL,SAASK,sBACAL,SAASM,qBAClBN,SAASM,uBACAN,SAASO,kBAClBP,SAASO,mBAGX,IAAMC,EAAWR,SAASS,eAAe,2BACrCD,IACFA,EAASE,MAAMC,KAAO,GAI1Bb,GAAgB,IAGlBc,qBAAU,WAAO,IAAD,MAEXzB,EAAM0B,SAASlB,KAC6B,KAA5C,UAAAR,EAAM0B,SAASlB,UAAf,mBAA2BmB,YAA3B,eAAiCC,SAChC,UAAC5B,EAAM0B,SAASlB,UAAhB,OAAC,EAA2BqB,YAE9BzB,EACE0B,YAAY,CACVtB,UAAWA,EACXuB,aAvFa,mBAwFbC,QAAS,SAKf,IAAMC,EAAgB,SAACC,GACrB,GAAmC,OAA/BrB,SAASC,kBAA4B,CACvC,IAAMO,EAAWR,SAASS,eAAe,2BACrCD,IACFA,EAASE,MAAMC,KAAO,GAExBZ,MAKJ,OADAC,SAASsB,iBAAiB,mBAAoBF,GACvC,WACLpB,SAASuB,oBAAoB,mBAAoBH,MAElD,CAACvB,IAEJ,IACA,QADM2B,EAAO,CAACC,EAAMC,EAAMD,EAAMC,GAE9B,OAAO,UAAAvC,EAAM0B,SAASlB,UAAf,SAA2BqB,UAChC,cAAC,IAAD,CAAKjC,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAM4C,GAAG,KAAK3C,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAvC,SACE,eAAC,IAAD,CAAM0B,MAAO,CAAEkB,UAAW,SAA1B,UACE,cAAC,IAAD,UACE,sBAAKC,UAAU,4BAAf,UACGC,qBACC,oBADS,gCAGT,IAEF,cAAC,IAAD,CAKEC,IAAI,KALN,SAOG9C,EAAE,wBAIT,cAAC,IAAD,CAAU+C,UAAU,EAAMC,OAAQ,cAAC,IAAD,IAAlC,SACE,cAAC,IAAD,CAAUvB,MAAO,CAAEkB,UAAW,mBAIlC,UAAAzC,EAAM0B,SAASlB,UAAf,mBAA2BmB,YAA3B,eAAiCC,QAAS,EAC5C,cAAC,IAAD,CAAKhC,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAM4C,GAAG,KAAK3C,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAvC,SACE,cAAC,IAAD,CAAMkD,GAAG,0BAA0BL,UAAU,2BAA7C,SACE,eAAC,IAAD,CACEA,UAAU,kBACVnB,MAAO,CACLyB,OAAQ,WAHZ,UAME,cAAC,IAAOC,OAAR,CACEC,QAAUxC,EAAmCE,EA9G/B,WACxB,IAAMuC,EAAUtC,SAASS,eAAe,2BACpC6B,EAAQC,kBACVD,EAAQC,oBACCD,EAAQE,qBACjBF,EAAQE,uBACCF,EAAQG,wBACjBH,EAAQG,0BACCH,EAAQI,qBACjBJ,EAAQI,sBAEVJ,EAAQ5B,MAAMC,KAAO,IACrBb,GAAgB,IAmGN+B,UAAU,+BACVc,MAAM,iBAHR,SAKI9C,EAGA,cAAC+C,EAAA,EAAD,CAAgBC,KAAM,KAFtB,cAACC,EAAA,EAAD,CAAYD,KAAM,OAMtB,cAAC,IAAD,2BAAY3E,GAAZ,uBACGiB,EAAM0B,SAASlB,UADlB,aACG,EAA2BmB,KAAKiC,KAAI,SAACC,EAAOC,GAAW,IAAD,IACrD,OACE,eAAC,IAAD,WACE,sBAEEvC,MAAO,CACLwC,gBAAgB,OAAD,2BACbF,EAAMG,gBADO,QACK3B,EAAKyB,UADV,QACoBxB,EADpB,KAGf2B,eAAgB,QAChBC,mBAAoB,SACpBC,OAASzD,EAAyB,QAAV,QACxB0D,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,OAZlB,UAeE,oBACEhD,MAAO,CACLiC,MAAO,QACPgB,QAAS,qBACTC,SAAU,UAJd,SAOGZ,EAAMa,QAET,qBACEhC,UAAU,+BACVnB,MAAO,CACLiC,MAAO,QACPmB,UAAW,SACXH,QAAS,kBACTI,UAAYlE,EAAyB,QAAV,SAE7BmE,wBAAyB,CACvBC,OAAM,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOkB,iBAhCdjB,GAoCP,qBAAKpB,UAAU,kBACf,eAAC,IAAOO,OAAR,CACEC,QAAS,SAAC8B,GACR1E,EAAS,4CAAD,OACsCuD,EAAMd,GAD5C,8BAIVL,UAAU,8BACVc,MAAM,YAPR,UASG1D,EAAE,aATL,WAvCF,iBAA4B+D,EAAMd,kBA0D9C,cAAC,IAAD,CAAKnD,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAM4C,GAAG,KAAK3C,GAAE,OAAEA,QAAF,IAAEA,IAAM,KAAvC,SACE,eAAC,IAAD,CACE6C,UAAU,mCACVnB,MAAO,CAAEkB,UAAW,SAFtB,UAIE,cAAC,IAAD,UACE,sBAAKC,UAAU,4BAAf,UACGC,qBACC,oBADS,gCAGT,IAEF,cAAC,IAAD,CAAWC,IAAI,KAAf,SAAqB9C,EAAE,wBAG3B,cAAC,IAAD,UACE,cAAC,IAAD,CACEmF,aAAc,CACZxC,UAAW,SAEbyC,YAAapF,EAAE,mCACfqF,cAAerF,EACb","file":"static/js/156.8ece0520.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner-19.8c6336b6.jpg\";","export default __webpack_public_path__ + \"static/media/banner-20.76c5efd4.jpg\";","import UILoader from \"@components/ui-loader\"\r\nimport {\r\n  Loader,\r\n  NoDataDisplay,\r\n  ErrorFetchData\r\n} from \"@src/shared/CommonComponents\"\r\nimport { getDataList } from \"@src/shared/dynamic_pages/store\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col } from \"reactstrap\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\n\r\nimport img2 from \"@src/assets/images/banner/banner-19.jpg\"\r\nimport img1 from \"@src/assets/images/banner/banner-20.jpg\"\r\nimport { Fullscreen, FullscreenExit } from \"@mui/icons-material\"\r\nimport { renderIcon } from \"@src/views/apps/menu/store/my_menu\"\r\n\r\nconst params = {\r\n  spaceBetween: 30,\r\n  centeredSlides: true,\r\n  autoplay: {\r\n    delay: 7000,\r\n    disableOnInteraction: true\r\n  },\r\n  autoHeight: true,\r\n  pagination: {\r\n    clickable: true,\r\n    type: \"bullets\",\r\n    bulletClassName: \"custom-bullet\"\r\n  },\r\n  navigation: false\r\n}\r\n\r\nconst WidgetAnnouncement = ({ lg, md }) => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const storeName = \"widget_announcement\"\r\n  const endpointName = \"api/announcement\"\r\n\r\n  const [isFullscreen, setIsFullscreen] = useState(false)\r\n\r\n  // const toggleFullscreen = () => {\r\n  //   if (!isFullscreen) {\r\n  //     if (divElement.requestFullscreen) {\r\n  //       divElement.requestFullscreen()\r\n  //     } else if (divElement.mozRequestFullScreen) {\r\n  //       divElement.mozRequestFullScreen()\r\n  //     } else if (divElement.webkitRequestFullscreen) {\r\n  //       divElement.webkitRequestFullscreen()\r\n  //     } else if (divElement.msRequestFullscreen) {\r\n  //       divElement.msRequestFullscreen()\r\n  //     }\r\n  //   } else {\r\n  //     if (\r\n  //       document.fullscreenElement ||\r\n  //       document.mozFullScreenElement ||\r\n  //       document.webkitFullscreenElement ||\r\n  //       document.msFullscreenElement\r\n  //     ) {\r\n  //       if (document.exitFullscreen) {\r\n  //         document.exitFullscreen()\r\n  //       } else if (document.mozCancelFullScreen) {\r\n  //         document.mozCancelFullScreen()\r\n  //       } else if (document.webkitExitFullscreen) {\r\n  //         document.webkitExitFullscreen()\r\n  //       } else if (document.msExitFullscreen) {\r\n  //         document.msExitFullscreen()\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   setIsFullscreen(!isFullscreen)\r\n  // }\r\n\r\n  const requestFullscreen = () => {\r\n    const element = document.getElementById(\"announcement-widget-div\")\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n    element.style.zoom = 1.4\r\n    setIsFullscreen(true)\r\n  }\r\n\r\n  const exitFullscreen = () => {\r\n    if (\r\n      document.fullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.msFullscreenElement\r\n    ) {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n\r\n      const element2 = document.getElementById(\"announcement-widget-div\")\r\n      if (element2) {\r\n        element2.style.zoom = 1\r\n      }\r\n    }\r\n\r\n    setIsFullscreen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"sso\"\r\n        })\r\n      )\r\n    }\r\n\r\n    const handleKeydown = (event) => {\r\n      if (document.fullscreenElement === null) {\r\n        const element2 = document.getElementById(\"announcement-widget-div\")\r\n        if (element2) {\r\n          element2.style.zoom = 1\r\n        }\r\n        exitFullscreen()\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", handleKeydown)\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleKeydown)\r\n    }\r\n  }, [isFullscreen])\r\n\r\n  const imgs = [img1, img2, img1, img2]\r\n  {\r\n    return store.pageData[storeName]?.isLoading ? (\r\n      <Col lg={lg ?? \"12\"} xs=\"12\" md={md ?? \"12\"}>\r\n        <Card style={{ minHeight: \"200px\" }}>\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              {renderIcon(\r\n                \"material:campaign\",\r\n                `user-timeline-title-icon me-1`,\r\n                25\r\n              )}\r\n              <CardTitle\r\n                // style={{\r\n                //   padding: \"20px 20px 5px 20px\",\r\n                //   fontSize: \"1.3rem\"\r\n                // }}\r\n                tag=\"h4\"\r\n              >\r\n                {t(\"Announcements\")}\r\n              </CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <UILoader blocking={true} loader={<Loader />}>\r\n            <CardBody style={{ minHeight: \"200px\" }}></CardBody>\r\n          </UILoader>\r\n        </Card>\r\n      </Col>\r\n    ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n      <Col lg={lg ?? \"12\"} xs=\"12\" md={md ?? \"12\"}>\r\n        <Card id=\"announcement-widget-div\" className=\"card-announcements-slide\">\r\n          <CardBody\r\n            className=\"text-center p-0\"\r\n            style={{\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            <Button.Ripple\r\n              onClick={!isFullscreen ? requestFullscreen : exitFullscreen}\r\n              className=\"btn-icon btn-announcement-fs\"\r\n              color=\"flat-secondary\"\r\n            >\r\n              {!isFullscreen ? (\r\n                <Fullscreen size={16} />\r\n              ) : (\r\n                <FullscreenExit size={16} />\r\n              )}\r\n            </Button.Ripple>\r\n\r\n            <Swiper {...params}>\r\n              {store.pageData[storeName]?.data.map((slide, index) => {\r\n                return (\r\n                  <SwiperSlide key={`swiper_${slide.id}`}>\r\n                    <div\r\n                      key={index}\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          slide.img_path ?? imgs[index] ?? img1\r\n                        })`,\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center\",\r\n                        height: !isFullscreen ? \"300px\" : \"100vh\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: \"8px\"\r\n                      }}\r\n                    >\r\n                      <h3\r\n                        style={{\r\n                          color: \"white\",\r\n                          padding: \"20px 20px 5px 20px\",\r\n                          fontSize: \"1.3rem\"\r\n                        }}\r\n                      >\r\n                        {slide.title}\r\n                      </h3>\r\n                      <div\r\n                        className=\"slide-container-announcement\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"center\",\r\n                          padding: \"5px 20px 0 20px\",\r\n                          maxHeight: !isFullscreen ? \"228px\" : \"100vh\"\r\n                        }}\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: slide?.description\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"slide-overlay\"></div>\r\n                    <Button.Ripple\r\n                      onClick={(e) => {\r\n                        navigate(\r\n                          `/dyn_pages/_admin_/my_announcements/view/${slide.id}?refresh=1&isOrigin=true`\r\n                        )\r\n                      }}\r\n                      className=\"round btn-announcement-card\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      {t(\"Read more\")}...\r\n                    </Button.Ripple>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    ) : (\r\n      <Col lg={lg ?? \"12\"} xs=\"12\" md={md ?? \"12\"}>\r\n        <Card\r\n          className=\"card-announcements-slide-no-data\"\r\n          style={{ minHeight: \"200px\" }}\r\n        >\r\n          <CardHeader>\r\n            <div className=\"d-flex align-items-center\">\r\n              {renderIcon(\r\n                \"material:campaign\",\r\n                `user-timeline-title-icon me-1`,\r\n                25\r\n              )}\r\n              <CardTitle tag=\"h4\">{t(\"Announcements\")}</CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <NoDataDisplay\r\n              customStyles={{\r\n                minHeight: \"200px\"\r\n              }}\r\n              titleCustom={t(\"There has been no announcement.\")}\r\n              messageCustom={t(\r\n                \"There is currently no announcement. Later, if there is an announcement, it will appear here.\"\r\n              )}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WidgetAnnouncement\r\n"],"sourceRoot":""}