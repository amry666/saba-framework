{"version":3,"sources":["shared/public_pages/index.js"],"names":["PublicPage","useSkin","skin","useTranslation","t","useNavigate","useState","pageHtmlStr","setPageHtmlStr","themeSelected","setThemeSelected","folderReplacements","fetchHtmlFile","a","fetch","process","response","text","html","map","folder","console","log","replaceAll","error","useEffect","dangerouslySetInnerHTML","__html"],"mappings":"uPAuFeA,UA7EI,WAEAC,cAATC,KACMC,cAANC,EACSC,cAFjB,IAGA,EAA0CC,mBAAS,cAAnD,mBACA,GADA,UACkCA,mBAAS,OAA3C,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAS,SAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAAqB,CAAC,UAAW,UAAW,YAE5CC,EAAa,uCAAG,8BAAAC,EAAA,+EAGKC,MAAM,GAAD,OACvBC,GADuB,oBACWN,EADX,gBAHV,cAGZO,EAHY,gBAMDA,EAASC,OANR,OAMdC,EANc,OAOAA,EAClBP,EAAmBQ,KAAI,SAACC,GACtBC,QAAQC,IAAIF,GACZF,EAAOA,EAAKK,WAAL,YAAqBH,GAArB,0BAAkDA,OAM3DC,QAAQC,IAAIJ,GACZV,EAAeU,GAjBG,kDAmBlBG,QAAQG,MAAM,2BAAd,MAnBkB,0DAAH,qDA+BnB,OARAC,qBAAU,WAIRf,EAAiB,SACjBE,MACC,IAECL,EACK,sBAAMmB,wBAAyB,CAAEC,OAAQpB,KAczC","file":"static/js/175.5a2d1ecf.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Button, Form, Input, Row, Col } from \"reactstrap\"\n\nimport { useNavigate } from \"react-router-dom\"\n// ** Custom Hooks\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useTranslation } from \"react-i18next\"\n// ** Styles\nimport \"@styles/base/pages/page-misc.scss\"\n\nconst PublicPage = () => {\n  // ** Hooks\n  const { skin } = useSkin()\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const [componentName, setComponentName] = useState(\"Component1\")\n  const [Component, setComponent] = useState(null)\n  const [pageHtmlStr, setPageHtmlStr] = useState(\"\")\n  const [themeSelected, setThemeSelected] = useState(\"naxos\")\n  const folderReplacements = [\"assets/\", \"images/\", \"preview/\"]\n\n  const fetchHtmlFile = async () => {\n    try {\n      // const response = await fetch(`${process.env.PUBLIC_URL}/${match.params.page}.html`);\n      const response = await fetch(\n        `${process.env.PUBLIC_URL}/website/${themeSelected}/index.html`\n      )\n      let html = await response.text()\n      let newPageHtml = html\n      folderReplacements.map((folder) => {\n        console.log(folder)\n        html = html.replaceAll(`=\"${folder}`, `=\"website/naxos/${folder}`)\n      })\n      // let newPageHtml = html\n      //   ?.replaceAll(\"assets/\", `website/naxos/assets/`)\n      //   .replaceAll(\"images/\", `website/naxos/images/`)\n      //   .replaceAll(\"preview/\", `website/naxos/preview/`)\n      console.log(html)\n      setPageHtmlStr(html)\n    } catch (error) {\n      console.error(\"Error loading HTML file:\", error)\n    }\n  }\n\n  useEffect(() => {\n    // import(`./${componentName}`).then((module) => {\n    //   setComponent(module.default)\n    // })\n    setThemeSelected(\"naxos\")\n    fetchHtmlFile()\n  }, [])\n\n  if (pageHtmlStr) {\n    return <html dangerouslySetInnerHTML={{ __html: pageHtmlStr }}></html>\n    // return (\n    //   <iframe\n    //     width={100}\n    //     height={100}\n    //     style={{\n    //       width: \"100%\",\n    //       height: \"100%\"\n    //     }}\n    //     title=\"Dynamic HTML\"\n    //     srcDoc={pageHtmlStr}\n    //   />\n    // )\n  } else {\n    return <div>Public Page...</div>\n  }\n\n  return <Component />\n\n  // return (\n  //   <div className=\"misc-wrapper\">\n  //     <div className=\"misc-inner p-2 p-sm-3\">\n  //       <div className=\"w-100 text-center\">\n  //         <h2 className=\"mb-1\">{t(\"Under Maintenance\")} ðŸ› </h2>\n  //         <p className=\"mb-3\">\n  //           {t(\n  //             \" Sorry for the inconvenience but we're performing some maintenance at the moment\"\n  //           )}\n  //         </p>\n  //       </div>\n  //     </div>\n  //   </div>\n  // )\n}\nexport default PublicPage\n"],"sourceRoot":""}