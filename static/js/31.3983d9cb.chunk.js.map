{"version":3,"sources":["views/apps/unit_app/store/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length"],"mappings":"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","file":"static/js/31.3983d9cb.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Unit Domain\" ////\nexport const storeName = \"apps_unit_app\" ////\nexport const endpointName = \"api/unit_app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Domain\", //// Title Of Column\n  //   fieldName: \"domain\" //// name of field from api\n  // }\n  // {\n  //   columnName: \"App Name\",\n  //   fieldName: \"attributes.app_name_alias\"\n  //   // fieldName2: \"app_name_alias\"\n  // },\n  // {\n  //   columnName: \"App\",\n  //   fieldName: \"app_name\"\n  // },\n  // {\n  //   columnName: \"Unit Name\",\n  //   fieldName: \"unit_name\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.selectedData = action.payload\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n        // console.log(state.selectedData)\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n"],"sourceRoot":""}