{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/menu/index.js","views/apps/menu/Tree.js","views/apps/menu/DropDown.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","List","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","lookupMode_isM2MDefValFromGrid","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useState","searchTerm","setSearchTerm","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","className","title","pageTitle","data","htmlFor","type","onChange","e","event","target","map","item","index","color","statTitle","icon","baseClassName","fontSize","renderStats","sx","bgcolor","animation","height","width","count_format","count","searchString","MySwal","withReactContent","Swal","sidebarOpen","setSidebarOpen","ability","useContext","AbilityContext","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","ThemeColors","handleDelete","a","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","then","res","meta","requestStatus","toast","success","style","padding","main","border","iconTheme","primary","error","payload","message","danger","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","putData","removeDefaultValue","dataTree","mainArray","JSON","parse","stringify","forEach","iter","includes","Array","isArray","children","status","isLoading","getDataList","x","blocking","loader","margin","treeData","onMoveNode","node","nextParentNode","nextTreeIndex","prevPath","prevTreeIndex","nextPath","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","titleTranslate","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontWeight","src","logo","is_separator","renderIcon","paddingLeft","textTransform","buttons","can","sessionStorage","getItem","Ripple","onClick","size","placement","rowData","preventDefault","detailFromGrid","setDataById","getDataById","hidden","disabled","defaultChecked","checked","handleChangeLookupMode","show","setShow","detailPage","currentData","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","isMulti","options","classnames","selectedData","classNamePrefix"],"mappings":"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","file":"static/js/40.e27731fd.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport Table from \"./Table\"\nimport Tree from \"./Tree\"\nimport DropDown from \"./DropDown\"\nimport { Row, Col, Input } from \"reactstrap\"\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\nimport Icon from \"@mui/material/Icon\"\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\nimport \"./style.scss\"\nimport Breadcrumbs from \"@components/breadcrumbs\"\n\nimport {\n  storeName,\n  getAlwaysGrid,\n  getApiSummaryData,\n  getSummaryData,\n  pageTitle\n} from \"./store\"\nimport { Skeleton } from \"@mui/material\"\n\nconst List = ({\n  lookupMode = false,\n  lookupMode_fieldName = \"\",\n  lookupMode_dropdown = false,\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  const handleFilter = (event) => {\n    // console.log(\"handleFilter\")\n    setSearchTerm(event)\n    // debounceFn(event)\n  }\n\n  useEffect(() => {\n    if (\n      getApiSummaryData &&\n      (store.dataSummary?.length === 0 ||\n        (!store.isLoadingSummary && getAlwaysGrid))\n    ) {\n      dispatch(getSummaryData({}))\n    }\n  }, [dispatch, store.dataSummary?.length])\n\n  const colors = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"secondary\"\n  ]\n\n  return !lookupMode_dropdown ? (\n    <Fragment>\n      <div className=\"content-header row\">\n        {!lookupMode && (\n          <Breadcrumbs\n            title={t(pageTitle)}\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\n          />\n        )}\n        <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"app-user-list\">\n        {!lookupMode && getApiSummaryData && (\n          <Row>\n            {store.dataSummary?.map((item, index) => {\n              return (\n                <Col>\n                  <StatsHorizontal\n                    color={colors[index]}\n                    statTitle={`${t(item.title)}`}\n                    icon={\n                      item.icon ? (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          {item.icon}\n                        </Icon>\n                      ) : (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          lightbulb\n                        </Icon>\n                      )\n                    }\n                    renderStats={\n                      store.isLoadingSummary ? (\n                        <Skeleton\n                          sx={{ bgcolor: \"#eef2f8\" }}\n                          animation=\"wave\"\n                          height={25}\n                          width={40}\n                          className=\"fw-bolder mb-75\"\n                        />\n                      ) : (\n                        <h3 className=\"fw-bolder mb-75\">\n                          {item.count_format ?? item.count}\n                        </h3>\n                      )\n                    }\n                  />\n                </Col>\n              )\n            })}\n          </Row>\n        )}\n        <Tree\n          searchString={searchTerm}\n          lookupMode={lookupMode}\n          lookupMode_fieldName={lookupMode_fieldName}\n          lookupMode_defaultValue={lookupMode_defaultValue}\n          lookupMode_onChange={lookupMode_onChange}\n          lookupMode_isMulti={lookupMode_isMulti}\n          lookupMode_isM2MDefValFromGrid\n        />\n        {/* <Table /> */}\n      </div>\n    </Fragment>\n  ) : (\n    <DropDown\n      lookupMode_fieldName={lookupMode_fieldName}\n      lookupMode_onChange={lookupMode_onChange}\n      lookupMode_defaultValue={lookupMode_defaultValue}\n      lookupMode_isMulti={lookupMode_isMulti}\n      lookupMode_isM2MDefValFromGrid\n    />\n  )\n}\n\nexport default List\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  Component\n} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  setDataList,\n  putData\n} from \"./store\"\nimport { renderIcon } from \"./store/my_menu\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye,\n  CheckCircle,\n  CheckSquare,\n  Check,\n  Square,\n  Plus\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  UncontrolledTooltip,\n  CardText\n} from \"reactstrap\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\nimport { Loader } from \"@src/shared/CommonComponents\"\n\nconst List = ({\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { t } = useTranslation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const ability = useContext(AbilityContext)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\n\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\n\n  const { colors } = useContext(ThemeColors)\n\n  const handleEdit = (rowData) => {\n    // console.log(rowData)\n    setCurrentDataAdd(rowData)\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const toggleSidebar = (row = null) => {\n    // console.log(row)\n    setCurrentDataAdd(row)\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const handleChange = (tree) => {\n    dispatch(setDataList(tree))\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    let mainArray = JSON.parse(JSON.stringify(store.data))\n    mainArray.forEach(function iter(a) {\n      if (a.id === id) {\n        a.checked = e.target.checked\n      }\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    handleChange(mainArray)\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const eventCanDragNode = (args) => {\n    // console.log(args)\n    if (args.node?.is_app_header) {\n      return false\n    }\n    return true\n  }\n\n  const onMoveNode = ({\n    treeData,\n    node,\n    nextParentNode,\n    prevPath,\n    prevTreeIndex,\n    nextPath,\n    nextTreeIndex\n  }) => {\n    // console.log(treeData)\n    // console.log(node)\n    // console.log(nextParentNode)\n    // console.log(prevPath)\n    // console.log(prevTreeIndex)\n    // console.log(nextPath)\n    // console.log(nextTreeIndex)\n    const data = {\n      id: node.id,\n      title: node.title,\n      parent_id: nextParentNode?.is_app_header ? null : nextParentNode.id,\n      index: nextTreeIndex ?? 1\n    }\n    updateDataToApi(data, true)\n  }\n\n  const updateDataToApi = (data, notReload = false) => {\n    // console.log(data)\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\n    if (notReload) data[\"notReload\"] = true\n    const nameMsg = data.title\n    dispatch(putData(data, notReload)).then((res) => {\n      // console.log(res)\n      if (res.meta.requestStatus === \"fulfilled\") {\n        toast.success(\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\n          {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          }\n        )\n      } else if (res.meta.requestStatus === \"rejected\") {\n        toast.error(res.payload.message, {\n          style: {\n            padding: \"16px\",\n            color: colors.danger.main,\n            border: `1px solid ${colors.danger.main}`\n          },\n          iconTheme: {\n            primary: colors.danger.main\n          }\n        })\n      }\n    })\n  }\n\n  const customSearchMethod = ({ node, searchQuery }) => {\n    const title = node.title.toLowerCase()\n    const titleTranslate = t(node.title).toLowerCase()\n    // console.log(searchQuery, title.toLowerCase())\n    return (\n      (searchQuery && title.indexOf(searchQuery) > -1) ||\n      (searchQuery && titleTranslate.indexOf(searchQuery) > -1)\n    )\n  }\n\n  const selectPrevMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n        : searchFoundCount - 1\n    )\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\n    )\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    mainArray.forEach(function iter(a) {\n      if (data.includes(a.id)) {\n        a[\"checked\"] = true\n        a[\"hidden\"] = true\n      }\n      // console.log(a.id, !data.includes(a.id))\n\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    // console.log(data)\n    // console.log(mainArray)\n    dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    // console.log(store)\n    if (\n      (store.status === 0 && store.data.length === 0) ||\n      (!store.isLoading && getAlwaysGrid)\n    ) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(getDataList({})).then((x) => {\n        // console.log(lookupMode_isM2MDefValFromGrid)\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n\n    if (store.data) {\n      // console.log(store.data)\n      // console.log(\n      //   store.data\n      //     ?.find((itemxx) => itemxx.id_app === 1053)\n      //     ?.children?.filter((itemxx2) => itemxx2.parent_id === node.id)\n      // )\n    }\n    // console.log(lookupMode_isM2MDefValFromGrid)\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [store.data])\n\n  return (\n    <Fragment>\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <div\n              style={{\n                height: !lookupMode ? 800 : 350,\n                margin: !lookupMode ? 20 : 10\n              }}\n            >\n              <SortableTree\n                treeData={store.data}\n                onChange={handleChange}\n                onMoveNode={!lookupMode ? onMoveNode : null}\n                canDrag={!lookupMode ? eventCanDragNode : false}\n                searchMethod={customSearchMethod}\n                searchQuery={searchString}\n                searchFocusOffset={searchFocusIndex}\n                searchFinishCallback={(matches) => {\n                  setSearchFoundCount(matches.length)\n                  setSearchFocusIndex(\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\n                  )\n                }}\n                // onlyExpandSearchedNodes\n                maxDepth={4}\n                generateNodeProps={({ node, path }) => {\n                  // console.log(node)\n                  return {\n                    style: {\n                      fontSize: node.is_app_header ? `16px` : \"14px\",\n                      fontWeight: node.is_app_header ? `bold` : \"normal\"\n                    },\n                    title: (\n                      <Fragment>\n                        {!node.is_app_header ? (\n                          !node.is_separator ? (\n                            node.icon ? (\n                              <div>{renderIcon(node.icon, \"\", 24)} </div>\n                            ) : (\n                              <div\n                                style={{\n                                  fontWeight: node.is_app_header ? `bold` : 400\n                                }}\n                              >\n                                {t(node.title)}\n                              </div>\n                            )\n                          ) : null\n                        ) : (\n                          <img\n                            className=\"me-1\"\n                            src={node.logo}\n                            width=\"30\"\n                            height=\"25\"\n                          />\n                        )}\n                        <div\n                          style={{\n                            paddingLeft: node.is_app_header ? 0 : 10,\n                            fontWeight:\n                              node.is_app_header || node.is_separator\n                                ? `bold`\n                                : 400,\n                            textTransform: node.is_separator ? `uppercase` : \"\",\n                            color: node.is_separator ? \"#a6a4b0\" : \"inherit\"\n                          }}\n                        >\n                          {t(node.title)}\n                        </div>\n                      </Fragment>\n                    ),\n                    buttons: [\n                      ability.can(\n                        \"post\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) && !lookupMode ? (\n                        // && !node.is_separator\n                        <>\n                          <Button.Ripple\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-primary\"\n                            id=\"btn-edit\"\n                            onClick={(e) => {\n                              toggleSidebar(node)\n                            }}\n                          >\n                            <Plus size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-edit\"\n                          >\n                            {t(\"Add Child\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      ability.can(\n                        \"update\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) &&\n                      !lookupMode &&\n                      !node.is_app_header ? (\n                        <>\n                          <Button.Ripple\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-info\"\n                            id=\"btn-edit\"\n                            onClick={(e) => {\n                              e.preventDefault()\n                              handleEdit(node)\n                            }}\n                          >\n                            <Edit2 size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-edit\"\n                          >\n                            {t(\"Edit\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      ability.can(\n                        \"delete\",\n                        sessionStorage.getItem(\"current_page_perm\")\n                      ) &&\n                      !lookupMode &&\n                      !node.is_app_header &&\n                      !node.children?.length > 0 ? (\n                        // store.data\n                        //   ?.find((itemxx) => itemxx.id_app === node.id_app)\n                        //   ?.children?.filter(\n                        //     (itemxx2) => itemxx2.parent_id === node.id\n                        //   )?.length === 0\n                        <>\n                          <Button.Ripple\n                            id=\"btn-delete\"\n                            className=\"btn-icon rounded-circle\"\n                            color=\"flat-danger\"\n                            onClick={(e) => {\n                              e.preventDefault()\n                              handleDelete(node.id)\n                            }}\n                          >\n                            <Trash2 size={16} />\n                          </Button.Ripple>\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target=\"btn-delete\"\n                          >\n                            {t(\"Delete\")}\n                          </UncontrolledTooltip>\n                        </>\n                      ) : null,\n                      lookupMode && !node.is_app_header ? (\n                        <div\n                          className={\n                            node.hidden\n                              ? \"form-check form-check-secondary\"\n                              : \"form-check form-check-primary\"\n                          }\n                        >\n                          <Input\n                            disabled={node.hidden}\n                            defaultChecked={node.checked}\n                            onChange={(e) =>\n                              handleChangeLookupMode(\n                                e,\n                                node.id,\n                                lookupMode_fieldName,\n                                lookupMode_isMulti\n                              )\n                            }\n                            type=\"checkbox\"\n                            id={`checkbox-${node.id}`}\n                          />\n                        </div>\n                      ) : null\n                    ]\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </Card>\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n          currentData={currentDataAdd}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className={classnames(\"react-select\", {\n          \"is-invalid\": store.selectedData?.id === null\n        })}\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}