{"version":3,"sources":["views/apps/endpoint/index.js","views/apps/endpoint/Tree.js","views/apps/endpoint/DropDown.js"],"names":["List","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","lookupMode_isM2MDefValFromGrid","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useState","searchTerm","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","className","title","pageTitle","data","map","item","index","color","statTitle","icon","baseClassName","fontSize","renderStats","sx","bgcolor","animation","height","width","count_format","count","isTreeLayout","searchString","MySwal","withReactContent","Swal","sidebarOpen","setSidebarOpen","ability","useContext","AbilityContext","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","ThemeColors","handleDelete","id","a","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","value","deleteData","then","res","meta","requestStatus","toast","success","style","padding","main","border","iconTheme","primary","error","payload","message","danger","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","putData","removeDefaultValue","dataTree","mainArray","JSON","parse","stringify","forEach","iter","includes","Array","isArray","children","isLoading","getDataList","x","blocking","loader","margin","treeData","onChange","onMoveNode","node","nextParentNode","prevPath","prevTreeIndex","nextPath","nextTreeIndex","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontWeight","paddingLeft","buttons","can","sessionStorage","getItem","Ripple","onClick","e","size","placement","target","rowData","preventDefault","detailFromGrid","setDataById","getDataById","hidden","disabled","defaultChecked","checked","handleChangeLookupMode","type","show","setShow","detailPage","currentData","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","isMulti","options","classnames","selectedData","classNamePrefix"],"mappings":"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","file":"static/js/45.be0754a8.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport Table from \"./Table\"\nimport Tree from \"./Tree\"\nimport DropDown from \"./DropDown\"\nimport { Row, Col, Input } from \"reactstrap\"\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\nimport Icon from \"@mui/material/Icon\"\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\nimport \"./style.scss\"\nimport Breadcrumbs from \"@components/breadcrumbs\"\n\nimport {\n  storeName,\n  getAlwaysGrid,\n  getApiSummaryData,\n  getSummaryData,\n  pageTitle,\n  isTreeLayout\n} from \"./store\"\nimport { Skeleton } from \"@mui/material\"\n\nconst List = ({\n  lookupMode = false,\n  lookupMode_fieldName = \"\",\n  lookupMode_dropdown = false,\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  const handleFilter = (event) => {\n    // console.log(\"handleFilter\")\n    setSearchTerm(event)\n    // debounceFn(event)\n  }\n\n  useEffect(() => {\n    if (\n      getApiSummaryData &&\n      (store.dataSummary?.length === 0 ||\n        (!store.isLoadingSummary && getAlwaysGrid))\n    ) {\n      dispatch(getSummaryData({}))\n    }\n  }, [dispatch, store.dataSummary?.length])\n\n  const colors = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"secondary\"\n  ]\n\n  return !lookupMode_dropdown ? (\n    <Fragment>\n      <div className=\"content-header row\">\n        {!lookupMode && (\n          <Breadcrumbs\n            title={t(pageTitle)}\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\n          />\n        )}\n        {/* <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n        </div> */}\n      </div>\n      <div className=\"app-user-list\">\n        {!lookupMode && getApiSummaryData && (\n          <Row>\n            {store.dataSummary?.map((item, index) => {\n              return (\n                <Col>\n                  <StatsHorizontal\n                    color={colors[index]}\n                    statTitle={`${t(item.title)}`}\n                    icon={\n                      item.icon ? (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          {item.icon}\n                        </Icon>\n                      ) : (\n                        <Icon\n                          baseClassName=\"material-icons-outlined\"\n                          fontSize=\"20\"\n                        >\n                          lightbulb\n                        </Icon>\n                      )\n                    }\n                    renderStats={\n                      store.isLoadingSummary ? (\n                        <Skeleton\n                          sx={{ bgcolor: \"#eef2f8\" }}\n                          animation=\"wave\"\n                          height={25}\n                          width={40}\n                          className=\"fw-bolder mb-75\"\n                        />\n                      ) : (\n                        <h3 className=\"fw-bolder mb-75\">\n                          {item.count_format ?? item.count}\n                        </h3>\n                      )\n                    }\n                  />\n                </Col>\n              )\n            })}\n          </Row>\n        )}\n        {isTreeLayout ? (\n          <Tree\n            searchString={searchTerm}\n            lookupMode={lookupMode}\n            lookupMode_fieldName={lookupMode_fieldName}\n            lookupMode_defaultValue={lookupMode_defaultValue}\n            lookupMode_onChange={lookupMode_onChange}\n            lookupMode_isMulti={lookupMode_isMulti}\n            lookupMode_isM2MDefValFromGrid\n          />\n        ) : (\n          <Table\n            lookupMode={lookupMode}\n            lookupMode_fieldName={lookupMode_fieldName}\n            lookupMode_defaultValue={lookupMode_defaultValue}\n            lookupMode_onChange={lookupMode_onChange}\n            lookupMode_isMulti={lookupMode_isMulti}\n            lookupMode_isM2MDefValFromGrid\n          />\n        )}\n      </div>\n    </Fragment>\n  ) : (\n    <DropDown\n      lookupMode_fieldName={lookupMode_fieldName}\n      lookupMode_onChange={lookupMode_onChange}\n      lookupMode_defaultValue={lookupMode_defaultValue}\n      lookupMode_isMulti={lookupMode_isMulti}\n      lookupMode_isM2MDefValFromGrid\n    />\n  )\n}\n\nexport default List\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  Component\n} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  setDataList,\n  putData\n} from \"./store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid,\n  Copy,\n  Slack,\n  User,\n  Settings,\n  Database,\n  Edit2,\n  MoreVertical,\n  Trash2,\n  Archive,\n  Eye,\n  CheckCircle,\n  CheckSquare,\n  Check,\n  Square,\n  Plus\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Badge,\n  UncontrolledTooltip,\n  CardText\n} from \"reactstrap\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\nimport { Loader } from \"@src/shared/CommonComponents\"\n\nconst List = ({\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { t } = useTranslation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const ability = useContext(AbilityContext)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\n\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\n\n  const { colors } = useContext(ThemeColors)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const toggleSidebar = (row = null) => {\n    // console.log(row.id)\n    setCurrentDataAdd(row)\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const handleChange = (tree) => {\n    dispatch(setDataList(tree))\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    let mainArray = JSON.parse(JSON.stringify(store.data))\n    mainArray.forEach(function iter(a) {\n      if (a.id === id) {\n        a.checked = e.target.checked\n      }\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    handleChange(mainArray)\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const eventCanDragNode = (args) => {\n    // console.log(args)\n    if (args.node.is_app_header) {\n      return false\n    }\n    return true\n  }\n\n  const onMoveNode = ({\n    treeData,\n    node,\n    nextParentNode,\n    prevPath,\n    prevTreeIndex,\n    nextPath,\n    nextTreeIndex\n  }) => {\n    // console.log(nextParentNode)\n    const data = {\n      id: node.id,\n      title: node.title,\n      parent_id: nextParentNode.is_app_header ? null : nextParentNode.id\n    }\n    updateDataToApi(data, true)\n  }\n\n  const updateDataToApi = (data, notReload = false) => {\n    // console.log(data)\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\n    if (notReload) data[\"notReload\"] = true\n    const nameMsg = data.title\n    dispatch(putData(data, notReload)).then((res) => {\n      // console.log(res)\n      if (res.meta.requestStatus === \"fulfilled\") {\n        toast.success(\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\n          {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          }\n        )\n      } else if (res.meta.requestStatus === \"rejected\") {\n        toast.error(res.payload.message, {\n          style: {\n            padding: \"16px\",\n            color: colors.danger.main,\n            border: `1px solid ${colors.danger.main}`\n          },\n          iconTheme: {\n            primary: colors.danger.main\n          }\n        })\n      }\n    })\n  }\n\n  const customSearchMethod = ({ node, searchQuery }) => {\n    return (\n      searchQuery &&\n      node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\n    )\n  }\n\n  const selectPrevMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n        : searchFoundCount - 1\n    )\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\n    )\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    mainArray.forEach(function iter(a) {\n      if (data.includes(a.id)) {\n        a[\"checked\"] = true\n        a[\"hidden\"] = true\n      }\n      // console.log(a.id, !data.includes(a.id))\n\n      // eslint-disable-next-line no-unused-expressions\n      Array.isArray(a.children) && a.children.forEach(iter)\n    })\n    // console.log(data)\n    // console.log(mainArray)\n    dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(getDataList({})).then((x) => {\n        // console.log(lookupMode_isM2MDefValFromGrid)\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n    // console.log(lookupMode_isM2MDefValFromGrid)\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <div\n              style={{\n                height: !lookupMode ? 800 : 350,\n                margin: !lookupMode ? 20 : 10\n              }}\n            >\n              <SortableTree\n                treeData={store.data}\n                onChange={handleChange}\n                onMoveNode={!lookupMode ? onMoveNode : null}\n                canDrag={!lookupMode ? eventCanDragNode : false}\n                searchMethod={customSearchMethod}\n                searchQuery={searchString}\n                searchFocusOffset={searchFocusIndex}\n                searchFinishCallback={(matches) => {\n                  setSearchFoundCount(matches.length)\n                  setSearchFocusIndex(\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\n                  )\n                }}\n                // onlyExpandSearchedNodes\n                maxDepth={4}\n                generateNodeProps={({ node, path }) => ({\n                  style: {\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\n                  },\n                  title: node.icon ? (\n                    <>\n                      <div\n                        style={{\n                          paddingLeft: node.is_app_header ? 0 : 10,\n                          fontWeight: node.is_app_header ? `bold` : 400\n                        }}\n                      >\n                        {node.title}\n                      </div>\n                    </>\n                  ) : (\n                    <div\n                      style={{ fontWeight: node.is_app_header ? `bold` : 400 }}\n                    >\n                      {node.title}\n                    </div>\n                  ),\n                  buttons: [\n                    ability.can(\n                      \"post\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) && !lookupMode ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-primary\"\n                          id=\"btn-edit\"\n                          onClick={(e) => {\n                            toggleSidebar(node)\n                          }}\n                        >\n                          <Plus size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                          {t(\"Add Child\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"update\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !lookupMode &&\n                    !node.is_app_header ? (\n                      <>\n                        <Button.Ripple\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-info\"\n                          id=\"btn-edit\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleEdit(node)\n                          }}\n                        >\n                          <Edit2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                          {t(\"Edit\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    ability.can(\n                      \"delete\",\n                      sessionStorage.getItem(\"current_page_perm\")\n                    ) &&\n                    !lookupMode &&\n                    !node.is_app_header ? (\n                      <>\n                        <Button.Ripple\n                          id=\"btn-delete\"\n                          className=\"btn-icon rounded-circle\"\n                          color=\"flat-danger\"\n                          onClick={(e) => {\n                            e.preventDefault()\n                            handleDelete(node.id)\n                          }}\n                        >\n                          <Trash2 size={16} />\n                        </Button.Ripple>\n                        <UncontrolledTooltip\n                          placement=\"left\"\n                          target=\"btn-delete\"\n                        >\n                          {t(\"Delete\")}\n                        </UncontrolledTooltip>\n                      </>\n                    ) : null,\n                    lookupMode && !node.is_app_header ? (\n                      <div\n                        className={\n                          node.hidden\n                            ? \"form-check form-check-secondary\"\n                            : \"form-check form-check-primary\"\n                        }\n                      >\n                        <Input\n                          disabled={node.hidden}\n                          defaultChecked={node.checked}\n                          onChange={(e) =>\n                            handleChangeLookupMode(\n                              e,\n                              node.id,\n                              lookupMode_fieldName,\n                              lookupMode_isMulti\n                            )\n                          }\n                          type=\"checkbox\"\n                          id={`checkbox-${node.id}`}\n                        />\n                      </div>\n                    ) : null\n                  ]\n                })}\n              />\n            </div>\n          </div>\n        </Card>\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n          currentData={currentDataAdd}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className={classnames(\"react-select\", {\n          \"is-invalid\": store.selectedData?.id === null\n        })}\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}