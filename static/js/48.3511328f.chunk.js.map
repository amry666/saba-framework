{"version":3,"sources":["views/apps/app/store/index.js","views/apps/app/DropDown.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","List","lookupMode_fieldName","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","useTranslation","useDispatch","store","useSelector","useEffect","theme","selectThemeColors","defaultValue","filter","el","placeholder","isMulti","onChange","e","options","className","classnames","classNamePrefix"],"mappings":"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","file":"static/js/48.3511328f.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"App\" ////\nexport const storeName = \"apps_app\" ////\nexport const endpointName = \"api/app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = false ////\nexport const getApiAfterPost = false ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Name\", //// Title Of Column\n  //   fieldName: \"name\" //// name of field from api\n  // },\n  // {\n  //   columnName: \"Code\",\n  //   fieldName: \"code\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      } else {\n        dispatch(pushCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      console.error(error)\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      } else {\n        dispatch(putCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const pushCurrentdata = createAsyncThunk(\n  `${endpointName}/pushCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putCurrentdata = createAsyncThunk(\n  `${endpointName}/putCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateCurrentdata = createAsyncThunk(\n  `${endpointName}/updateCurrentdata`,\n  async (putData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return putData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\n        // console.log(action.payload.data)\n        // console.log(state.data)\n        state.data.unshift(action.payload.data)\n      })\n\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload.data[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\n        )\n        // console.log(state.data[objIndex])\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"is_uploading\"] = null\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex] = action.payload.data\n        }\n      })\n\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\n        )\n        // console.log(objIndex)\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\n        }\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid, pageTitle } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        placeholder={`${t(\"Filter\")} ${t(pageTitle)}...`}\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className={classnames(\"react-select\", {\n          \"is-invalid\": store.selectedData?.id === null\n        })}\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}