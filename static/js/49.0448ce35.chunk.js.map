{"version":3,"sources":["views/apps/endpoint/store/index.js","views/apps/endpoint/DropDown.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","isTreeLayout","dynamicColumns","columnName","fieldName","minWidth","dynamicColumnsFilter","filterLabel","dynamicForm","fieldLabel","type","required","datafromStore","extraCrud","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","setDataList","rowData","rejectWithValue","getDataById","id","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","notReload","put","deleteData","delete","deleteSelectedRowData","setDataById","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","map","item","value","label","title","List","lookupMode_fieldName","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","useTranslation","t","useDispatch","store","useSelector","useEffect","length","theme","selectThemeColors","defaultValue","filter","el","isMulti","onChange","e","options","className","classnames","classNamePrefix"],"mappings":"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","file":"static/js/49.0448ce35.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\n\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Endpoint\" ////\nexport const storeName = \"apps_endpoint\" ////\nexport const endpointName = \"api/endpoint\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\nexport const disabledAction = []\nexport const isManyToManyGrid = true\nexport const storeToRefreshAfterAll = []\nexport const isTreeLayout = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  {\n    columnName: \"Url\",\n    fieldName: \"url_path\",\n    minWidth: \"350px\"\n  }\n  // {\n  //   columnName: \"App\",\n  //   fieldName: \"app_name\",\n  //   minWidth: \"120px\"\n  // }\n]\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"App\",\n    fieldName: \"id_app\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = [\n  {\n    fieldName: \"url_path\",\n    fieldLabel: \"Url\",\n    type: \"text\",\n    required: true\n  },\n  {\n    fieldName: \"id_app\",\n    fieldLabel: \"App\",\n    type: \"dropdown\",\n    required: true,\n    datafromStore: \"app\"\n  }\n]\n\nexport const extraCrud = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    // console.log(params)\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const setDataList = createAsyncThunk(\n  `${endpointName}/setDataList`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    // Object.keys(data).forEach((key) => {\n    //   if (data[key] === null || data[key] === \"\") {\n    //     delete data[key]\n    //   }\n    // })\n    const id = data.id ?? getState()[storeName].selectedData.id\n    const notReload = data[\"notReload\"]\n    if (notReload) delete data[\"notReload\"]\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut && !notReload) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    dynamicColumns,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.total\n        state.dataDropdown = action.payload.data.map((item) => ({\n          value: item.id,\n          label: item.title\n        }))\n        state.status = \"succeeded\"\n        state.isLoading = false\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataList.rejected, (state, action) => {\n        state.data = action.payload\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { Fragment, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\nimport \"./style.scss\"\nimport { selectThemeColors } from \"@utils\"\nimport classnames from \"classnames\"\nimport Select from \"react-select\"\n\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\n\nconst List = ({\n  lookupMode_fieldName = \"\",\n  lookupMode_isMulti = false,\n  lookupMode_onChange,\n  lookupMode_defaultValue\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const onChangeInput = (e) => {\n    return lookupMode_onChange(e, lookupMode_fieldName)\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      dispatch(getDataList({}))\n    }\n  }, [dispatch, store.data.length])\n\n  return (\n    <Fragment>\n      <Select\n        theme={selectThemeColors}\n        defaultValue={\n          !lookupMode_isMulti\n            ? store.dataDropdown.filter(\n                (el) => el.value === lookupMode_defaultValue\n              )\n            : lookupMode_defaultValue\n        }\n        isMulti={lookupMode_isMulti}\n        // onChange={lookupMode_onChange}\n        onChange={onChangeInput}\n        options={store.dataDropdown}\n        className={classnames(\"react-select\", {\n          \"is-invalid\": store.selectedData?.id === null\n        })}\n        classNamePrefix=\"select\"\n      />\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}