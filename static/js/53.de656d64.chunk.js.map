{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/permission/store/index.js","views/apps/permission/modal/index.js","views/apps/permission/Form.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","a","keys","forEach","key","get","response","data","getDataList","total","getDataById","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","label","title","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","setLoadingText","sortedObject","unordered","sort","reduce","obj","handleReset","isOpen","toggle","className","blocking","loader","updateDataToApi","storeData","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","setError","type","icon","postDataToApi","FormAddEdit","useForm","control","handleSubmit","errors","onSubmit","md","xs","for","defaultValue","render","invalid","description","subject","outline","onClick"],"mappings":"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","file":"static/js/53.de656d64.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Permission\" ////\nexport const storeName = \"apps_permission\" ////\nexport const endpointName = \"api/permission\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = []\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"Role\",\n    fieldName: \"id_role\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const extraCrud = [\n  {\n    crudName: \"permission_menu\",\n    crudLabel: \"Permission to Menu\"\n  },\n  {\n    crudName: \"permission_endpoint\",\n    crudLabel: \"Permission to Endpoint\"\n    // crudDescription: \"Permission to Endpoint\"\n  }\n]\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: item.title,\n            post: false,\n            put: false,\n            delete: false,\n            get: false\n          }))\n          // state.selectedData = {\n          //   value: action.payload.data[0].id,\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\n          // }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport FormAddEdit from \"../Form\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  // const [tgl1, setTgl1] = useState(null)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  // const {\n  //   control,\n  //   setError,\n  //   handleSubmit,\n  //   formState: { errors }\n  // } = useForm({})\n\n  function sortedObject(unordered) {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key]\n        return obj\n      }, {})\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  function handleReset() {\n    dispatch(resetSelectedData())\n    setFormState(\"add\")\n    return setShow(false)\n  }\n\n  return !detailPage ? (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n          </div>\n          <FormAddEdit\n            formState={formState}\n            updateDataToApi={updateDataToApi}\n            postDataToApi={postDataToApi}\n            handleReset={handleReset}\n          />\n          {/* <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"title\">\n                  {t(\"Title\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.title ?? \"\"}\n                  control={control}\n                  id=\"title\"\n                  name=\"title\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.title\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"title\"\n                      invalid={errors.title && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.description ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.description\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"description\"\n                      invalid={errors.description && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"subject\">\n                  {t(\"Subject\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.subject ?? \"\"}\n                  control={control}\n                  id=\"subject\"\n                  name=\"subject\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.subject\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"subject\"\n                      invalid={errors.subject && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form> */}\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  ) : null\n}\n\nexport default ModalAddEdit\n","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"./store\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst FormAddEdit = ({\n  formState,\n  updateDataToApi,\n  postDataToApi,\n  handleReset\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  return (\n    <Form\n      onSubmit={\n        formState === \"edit\"\n          ? handleSubmit(updateDataToApi)\n          : handleSubmit(postDataToApi)\n      }\n    >\n      <Row className=\"gy-1 pt-75\">\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"title\">\n            {t(\"Title\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.title ?? \"\"}\n            control={control}\n            id=\"title\"\n            name=\"title\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.title ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"title\"\n                invalid={errors.title && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"description\">\n            {t(\"Description\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.description ?? \"\"}\n            control={control}\n            id=\"description\"\n            name=\"description\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.description\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                id=\"description\"\n                invalid={errors.description && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"subject\">\n            {t(\"Subject\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.subject ?? \"\"}\n            control={control}\n            id=\"subject\"\n            name=\"subject\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.subject ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"subject\"\n                invalid={errors.subject && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col xs={12} className=\"text-center mt-2 pt-50\">\n          <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n            {t(\"Submit\")}\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" outline onClick={handleReset}>\n            {t(\"Cancel\")}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default FormAddEdit\n"],"sourceRoot":""}