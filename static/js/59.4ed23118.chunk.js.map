{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js","views/apps/roles-permissions/roles/columns.js","views/apps/roles-permissions/roles/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason","renderClient","row","avatar","className","img","width","height","initials","content","fullName","color","avatarColor","statusObj","active","inactive","columns","sortable","minWidth","sortField","selector","cell","to","onClick","store","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","currentPlan","billing","pill","BootstrapCheckbox","forwardRef","props","ref","type","CustomHeader","plan","handlePlanChange","handlePerPage","rowsPerPage","handleFilter","searchTerm","useTranslation","t","useContext","AbilityContext","xl","htmlFor","onChange","style","e","target","Table","useDispatch","useSelector","useState","setPlan","sort","setSort","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortColumn","setSortColumn","useEffect","getAllData","role","q","page","perPage","noHeader","subHeader","pagination","responsive","selectableRows","paginationServer","onSort","column","sortDirection","filters","isFiltered","some","k","allData","slice","dataToRender","sortIcon","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRowsComponent","subHeaderComponent","val","parseInt","currentTarget"],"mappings":"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","file":"static/js/59.4ed23118.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Role\" ////\nexport const storeName = \"apps_role\" ////\nexport const endpointName = \"api/role\" ////\n\nexport const serverSideGrid = false ////\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id ?? getState()[storeName].selectedData.id\n    data[\"name\"] = getState()[storeName].selectedData.name\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const resetData = createAsyncThunk(\n  `${endpointName}/resetData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          state.selectedData = {\n            value: action.payload.data[0].id,\n            label: `${action.payload.data[0].name}`\n          }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      ///RESET\n      .addCase(resetData.rejected, (state) => {\n        state.data = []\n        state.dataSummary = []\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataRole } from \"../../role/store\"\n\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\n//   // console.log(getState().users.status)\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\n//   // console.log(response.data.data)\n//   return response.data.data\n// })\nexport const getSummaryData = createAsyncThunk(\n  \"appUsers/getSummaryData\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\n  Object.keys(params).forEach((key) => {\n    if (params[key] === null || params[key] === \"\") {\n      delete params[key]\n    }\n  })\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\n    params\n  })\n  return {\n    params,\n    data: response.data.data,\n    totalPages: response.data.total\n  }\n})\n\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\n  // console.log(response)\n  return response.data.data\n})\n\nexport const addUser = createAsyncThunk(\n  \"appUsers/addUser\",\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\n      await dispatch(getData(getState().users.params))\n      dispatch(resetDataRole({}))\n      // return response.data\n      return user\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateUser = createAsyncThunk(\n  \"appUsers/updateUser\",\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id\n    delete data.id\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.put(\n        `/api/user/${id}`,\n        data\n      )\n      dispatch(getUser(id))\n      dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data.errors)\n    }\n  }\n)\n\nexport const deleteUser = createAsyncThunk(\n  \"appUsers/deleteUser\",\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.delete(\n        `/api/user/${id}`\n      )\n      await dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const getDataEmployee = createAsyncThunk(\n  \"appUsers/getDataEmployee\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      totalPages: response.data.total\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const appUsersSlice = createSlice({\n  name: \"appUsers\",\n  initialState: {\n    crudTitle: \"User\",\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n    params: {},\n\n    // EMPLOYEE\n    status_employee: fetchStatus,\n    isLoading_employee: false,\n    error_employee: \"\" | null,\n    data_employee: [],\n    total_employee: 1,\n    params_employee: {},\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n    selectedUser: null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getData.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n      })\n      .addCase(getData.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataEmployee.pending, (state) => {\n        state.status_employee = \"loading\"\n        state.isLoading_employee = true\n      })\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status_employee = \"succeeded\"\n        state.isLoading_employee = false\n        state.data_employee = action.payload.data\n        state.params_employee = action.payload.params\n        state.total_employee = action.payload.totalPages\n      })\n      .addCase(getDataEmployee.rejected, (state, action) => {\n        state.status_employee = \"failed\"\n        state.isLoading_employee = false\n        state.error_employee = action.error.message\n      })\n\n      ///EDIT\n      .addCase(updateUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(updateUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        if (typeof action.payload === \"object\") {\n          state.errorAddEdit = JSON.stringify(action.payload)\n        } else {\n          state.errorAddEdit = action.payload.message\n        }\n      })\n\n      ///ADD\n      .addCase(addUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(addUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(addUser.rejected, (state, action) => {\n        console.log(action)\n\n        if (action.payload.errors) {\n          state.errorAddEdit = Object.values(action.payload.errors)\n        } else if (action.payload.error_reason) {\n          state.errorAddEdit = action.payload.message\n        }\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n      })\n\n      ///DELETE\n      .addCase(deleteUser.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteUser.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        // console.log(action)\n        state.errorDelete = action.payload.message\n      })\n\n      ///DETAIL\n      .addCase(getUser.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n        state.selectedUser = null\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedUser = action.payload\n      })\n      .addCase(getUser.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedUser = null\n        state.errorDetail = action.error.message\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n","// ** React Imports\nimport { Link } from \"react-router-dom\"\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\"\n\n// ** Store & Actions\nimport { store } from \"@store/store\"\nimport { getUser } from \"@src/views/apps/user/store\"\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, Eye } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\n// ** Renders Client Columns\nconst renderClient = (row) => {\n  if (row.avatar.length) {\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\n  } else {\n    return (\n      <Avatar\n        initials\n        className=\"me-1\"\n        content={row.fullName || \"John Doe\"}\n        color={row.avatarColor || \"light-primary\"}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = (row) => {\n  const roleObj = {\n    subscriber: {\n      class: \"text-primary\",\n      icon: User\n    },\n    maintainer: {\n      class: \"text-success\",\n      icon: Database\n    },\n    editor: {\n      class: \"text-info\",\n      icon: Edit2\n    },\n    author: {\n      class: \"text-warning\",\n      icon: Settings\n    },\n    admin: {\n      class: \"text-danger\",\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\n\n  return (\n    <span className=\"text-truncate text-capitalize align-middle\">\n      <Icon\n        size={18}\n        className={`${\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\n        } me-50`}\n      />\n      {row.role_name}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: \"light-warning\",\n  active: \"light-success\",\n  inactive: \"light-secondary\"\n}\n\nexport const columns = [\n  {\n    name: \"Name\",\n    sortable: true,\n    minWidth: \"297px\",\n    sortField: \"fullName\",\n    selector: (row) => row.fullName,\n    cell: (row) => (\n      <div className=\"d-flex justify-content-left align-items-center\">\n        {renderClient(row)}\n        <div className=\"d-flex flex-column\">\n          <Link\n            to={`/apps/user/view/${row.id}`}\n            className=\"user_name text-truncate text-body\"\n            onClick={() => store.dispatch(getUser(row.id))}\n          >\n            <span className=\"fw-bold\">{row.fullName}</span>\n          </Link>\n          <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: \"Role\",\n    sortable: true,\n    minWidth: \"172px\",\n    sortField: \"role\",\n    selector: (row) => row.role_name,\n    cell: (row) => renderRole(row)\n  },\n  {\n    name: \"Plan\",\n    sortable: true,\n    minWidth: \"138px\",\n    sortField: \"currentPlan\",\n    selector: (row) => row.currentPlan,\n    cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\n  },\n  {\n    name: \"Billing\",\n    sortable: true,\n    minWidth: \"230px\",\n    sortField: \"billing\",\n    selector: (row) => row.billing,\n    sortField: \"billing\",\n    selector: (row) => row.billing,\n    cell: (row) => <span className=\"text-capitalize\">{row.billing}</span>\n  },\n  {\n    name: \"Status\",\n    sortable: true,\n    minWidth: \"138px\",\n    sortField: \"status\",\n    selector: (row) => row.status,\n    cell: (row) => (\n      <Badge className=\"text-capitalize\" color={statusObj[row.status]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: \"Actions\",\n    minWidth: \"100px\",\n    cell: (row) => (\n      <Link to={`/apps/user/view/${row.id}`}>\n        <Eye className=\"font-medium-3 text-body\" />\n      </Link>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect, forwardRef } from \"react\"\n\n// ** Table Columns\nimport { columns } from \"./columns\"\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getData } from \"@src/views/apps/user/store\"\n\n// ** Third Party Components\nimport ReactPaginate from \"react-paginate\"\nimport { ChevronDown } from \"react-feather\"\nimport DataTable from \"react-data-table-component\"\n\n// ** Reactstrap Imports\nimport { Card, Input, Row, Col } from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n// ** Styles\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  plan,\n  handlePlanChange,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">Show</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"6\"\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1\"\n        >\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              Search:\n            </label>\n            <Input\n              type=\"text\"\n              value={searchTerm}\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n          <Input\n            value={plan}\n            type=\"select\"\n            style={{ width: \"10rem\" }}\n            onChange={(e) => handlePlanChange(e.target.value)}\n          >\n            <option value=\"\">Select Role</option>\n            <option value=\"basic\">Basic</option>\n            <option value=\"company\">Company</option>\n            <option value=\"enterprise\">Enterprise</option>\n            <option value=\"team\">Team</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst Table = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.users)\n\n  // ** States\n  const [plan, setPlan] = useState(\"\")\n  const [sort, setSort] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sortColumn, setSortColumn] = useState(\"id\")\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on page change\n  const handlePagination = (page) => {\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        status: \"\",\n        sortColumn,\n        q: searchTerm,\n        currentPlan: plan,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        perPage: value,\n        currentPlan: plan,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = (val) => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        q: val,\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  const handlePlanChange = (val) => {\n    setPlan(val)\n    dispatch(\n      getData({\n        sort,\n        role: val,\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        role: \"\",\n        sortColumn,\n        status: \"\",\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  return (\n    <Card>\n      <div className=\"react-dataTable react-dataTable-selectable-rows\">\n        <DataTable\n          noHeader\n          subHeader\n          pagination\n          responsive\n          selectableRows\n          paginationServer\n          columns={columns}\n          onSort={handleSort}\n          data={dataToRender()}\n          sortIcon={<ChevronDown />}\n          paginationComponent={CustomPagination}\n          selectableRowsComponent={BootstrapCheckbox}\n          className=\"react-dataTable\"\n          subHeaderComponent={\n            <CustomHeader\n              plan={plan}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              handlePlanChange={handlePlanChange}\n            />\n          }\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default Table\n"],"sourceRoot":""}