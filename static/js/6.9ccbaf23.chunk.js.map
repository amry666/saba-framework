{"version":3,"sources":["views/apps/app/store/index.js","views/apps/permission_menu/store/index.js","views/apps/permission_menu/modal/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","columnName","fieldName","dynamicColumnsFilter","filterLabel","fieldLabel","type","isM2MDefValFromGrid","isMultiSelection","required","log","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","colors","useContext","ThemeColors","useState","setLoadingText","useDispatch","allStore","useSelector","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","handleReset","errors","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","filter","el","i","path_name","replaceAll","MyComponent","lazy","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","x","lookupMode_isM2MDefValFromGrid","isOpen","toggle","className","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","for","fallback","textAlign","outline","onClick"],"mappings":"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","file":"static/js/6.9ccbaf23.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"App\" ////\nexport const storeName = \"apps_app\" ////\nexport const endpointName = \"api/app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = false ////\nexport const getApiAfterPost = false ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Name\", //// Title Of Column\n  //   fieldName: \"name\" //// name of field from api\n  // },\n  // {\n  //   columnName: \"Code\",\n  //   fieldName: \"code\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      } else {\n        dispatch(pushCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      console.error(error)\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      } else {\n        dispatch(putCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const pushCurrentdata = createAsyncThunk(\n  `${endpointName}/pushCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putCurrentdata = createAsyncThunk(\n  `${endpointName}/putCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateCurrentdata = createAsyncThunk(\n  `${endpointName}/updateCurrentdata`,\n  async (putData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return putData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\n        // console.log(action.payload.data)\n        // console.log(state.data)\n        state.data.unshift(action.payload.data)\n      })\n\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload.data[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\n        )\n        // console.log(state.data[objIndex])\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"is_uploading\"] = null\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex] = action.payload.data\n        }\n      })\n\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\n        )\n        // console.log(objIndex)\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\n        }\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { formControlLabelClasses } from \"@mui/material\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Menu Permission\" ////\nexport const storeName = \"apps_permission_menu\" ////\nexport const endpointName = \"api/permission_menu\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = false //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const disabledAction = [\"update\"]\nexport const isManyToManyGrid = true\nexport const storeToRefreshAfterAll = [\"apps_permission\"]\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  {\n    columnName: \"Menu\",\n    fieldName: \"menu_title\"\n  },\n  {\n    columnName: \"App\",\n    fieldName: \"app_name\"\n  }\n]\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"App\",\n    fieldName: \"id_app\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = [\n  {\n    fieldName: \"id_menu\",\n    fieldLabel: \"Menu\",\n    type: \"table\",\n    isM2MDefValFromGrid: true,\n    isMultiSelection: true,\n    required: true\n  },\n  {\n    fieldName: \"id_permission\",\n    fieldLabel: \"Permission\",\n    type: \"dropdown\",\n    required: true\n  }\n]\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\" || !params[key]) {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (storeToRefreshAfterAll !== null) {\n          console.log(getState()[storeToRefreshAfterAll])\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        // state.data = []\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(\"herr\")\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.selectedData = action.payload\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n        // console.log(state.selectedData)\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport store, {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById,\n  dynamicForm\n} from \"../store\"\nimport { Loader } from \"@src/shared/CommonComponents\"\nimport { getDataList as getDataListApp } from \"../../app/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport classnames from \"classnames\"\n// import List from \"../../menu\"\n// import {List as PermissionComponent} from \"../../permission\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const dispatch = useDispatch()\n  const allStore = useSelector((state) => state)\n  const [dynamicComponents, setDynamicComponents] = useState({})\n  const [formDatas, setFormDatas] = useState({})\n  const [formDatasError, setFormDatasError] = useState({})\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = () => {\n    if (countChanges(formDatas)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = () => {\n    if (\n      Object.values(formDatas).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(formDatas)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      // console.log(\"ERORR\")\n      // console.log(formDatas)\n      let errorFields = Object.assign({}, formDatasError)\n      for (let key in formDatas) {\n        // console.log(key, formDatas[key])\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\n          errorFields[key] = true\n        }\n      }\n      // console.log(errorFields)\n      setFormDatasError(errorFields)\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    // console.log(value, fieldName, isMulti)\n    if (isMulti) {\n      if (formDatas[fieldName]) {\n        const index = formDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          formDatas[fieldName].splice(index, 1)\n        } else {\n          formDatas[fieldName].push(value)\n        }\n      } else {\n        formDatas[fieldName] = [value]\n      }\n    } else {\n      formDatas[fieldName] = value\n    }\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    const dynamicFormRelation = dynamicForm.filter(function (el) {\n      return el.type === \"dropdown\" || el.type === \"table\"\n    })\n\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      formDatas[fieldName] = null\n      formDatasError[fieldName] = false\n      const MyComponent = lazy(() => import(`../../${path_name}`))\n      componentsImport[`${path_name}_comp`] = (\n        <MyComponent\n          lookupMode={true}\n          lookupMode_fieldName={fieldName}\n          lookupMode_dropdown={dynamicFormRelation[i][\"type\"] === \"dropdown\"}\n          lookupMode_isMulti={dynamicFormRelation[i].isMultiSelection ?? false}\n          lookupMode_onChange={handleChangeInputs}\n          lookupMode_defaultValue={\n            dynamicFormRelation[i]?.isM2MDefValFromGrid\n              ? allStore[storeName].data.map((x) => x[fieldName])\n              : allStore[storeName]?.selectedData\n              ? allStore[storeName].selectedData[fieldName]\n              : \"\"\n          }\n          lookupMode_isM2MDefValFromGrid={\n            dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\n          }\n        />\n      )\n    }\n\n    setDynamicComponents(componentsImport)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={\n          allStore[storeName].isLoadingAddEdit ||\n          allStore[storeName].isLoadingDetail\n        }\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              {dynamicForm.map((item, index) => {\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\n                  const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n                  return (\n                    <Col key={path_name} md={12} xs={12}>\n                      <Label className=\"form-label\" for={item.fieldName}>\n                        {t(item.fieldLabel ?? \"\")}\n                      </Label>\n                      <Suspense fallback={<div>Loading...</div>}>\n                        <div\n                          className={\n                            !formDatasError[item.fieldName]\n                              ? \"dynamicForm_input\"\n                              : \"dynamicForm_input dynamicForm_input_invalid\"\n                          }\n                        >\n                          {dynamicComponents[`${path_name}_comp`]}\n                          {item?.isM2MDefValFromGrid &&\n                            formDatas[item.fieldName] && (\n                              <div\n                                style={{ textAlign: \"right\" }}\n                                className=\"text-primary\"\n                              >\n                                {formDatas[item.fieldName]?.length}{\" \"}\n                                {t(item.fieldLabel)} {t(\"Selected\")}\n                              </div>\n                            )}\n                        </div>\n                      </Suspense>\n                    </Col>\n                  )\n                }\n              })}\n\n              {/* <Col md={12} xs={12}>\n                <List lookupMode={true} lookupMode_isMulti={true} />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"id_permission\">\n                  {t(\"Permission\")}\n                </Label>\n                <Suspense fallback={<div>Loading...</div>}>\n                  {dynamicComponents[\"permission_comp\"]}\n                </Suspense>\n              </Col> */}\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n"],"sourceRoot":""}