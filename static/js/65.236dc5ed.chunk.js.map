{"version":3,"sources":["views/apps/permission/detail/index.js","views/apps/permission/store/index.js","views/apps/permission/Form.js"],"names":["DetailPage","t","useTranslation","useParams","id","pageType","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","setLoadingText","navigate","useNavigate","active","setActive","dynamicComponents","setDynamicComponents","sortedObject","unordered","Object","keys","sort","reduce","obj","key","updateDataToApi","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","pageTitle","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","payload","message","danger","length","setError","type","icon","postDataToApi","postData","handleReset","resetSelectedData","useEffect","isLoadingDetail","parseInt","getDataById","componentsImport","dynamicFormRelation","extraCrud","i","crudName","path_name","MyComponent","lazy","lookupMode","lookupMode_defaultFilter","replaceAll","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","lookupMode_isM2MDefValFromGrid","className","blocking","loader","undefined","xl","lg","xs","order","md","size","formState","pills","map","item","index","onClick","tab","crudLabel","activeTab","tabId","crudDescription","tag","to","axios","useJwt","ssoAxiosInterceptor","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","getSummaryData","createAsyncThunk","params","a","forEach","get","response","getDataList","total","rejectWithValue","user","getState","post","resetData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","fulfilled","action","rejected","value","label","title","FormAddEdit","useForm","control","handleSubmit","errors","onSubmit","for","defaultValue","render","invalid","description","subject","outline"],"mappings":"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","file":"static/js/65.236dc5ed.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useParams, Link, useNavigate } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Alert,\n  Card,\n  CardBody,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText,\n  CardHeader,\n  CardTitle,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById,\n  extraCrud\n} from \"../store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport FormAddEdit from \"../Form\"\nimport { MenuOpen, Link as LinkIcon } from \"@mui/icons-material\"\n\nconst DetailPage = () => {\n  const { t } = useTranslation()\n  const { id, pageType } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const navigate = useNavigate()\n  const [active, setActive] = useState(\"1\")\n  const toggleTab = (tab) => {\n    if (active !== tab) {\n      setActive(tab)\n    }\n  }\n\n  const allStore = useSelector((state) => state)\n  const [dynamicComponents, setDynamicComponents] = useState({})\n\n  function sortedObject(unordered) {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key]\n        return obj\n      }, {})\n  }\n\n  const countChanges = (data) => {\n    if (pageType === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            navigate(-1)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          navigate(-1)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  function handleReset() {\n    dispatch(resetSelectedData())\n    // setpageType(\"add\")\n    return navigate(-1)\n  }\n\n  useEffect(() => {\n    // console.log(pageType)\n    // if (!store.isLoadingDetail) {\n    // console.log(store.selectedData?.id !== parseInt(id))\n    if (\n      pageType === \"edit\" &&\n      !store.isLoadingDetail &&\n      (!store.selectedData || store.selectedData?.id !== parseInt(id))\n    ) {\n      // setLoadingText(\n      //   `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      // )\n      // setLoading(true)\n      dispatch(getDataById(id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          // setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          // setLoading(false)\n          // setShowModal(true)\n        }\n      })\n\n      // DYNAMIC IMPORT COMPONENTS\n      let componentsImport = {}\n      const dynamicFormRelation = extraCrud\n      for (let i = 0; i < dynamicFormRelation.length; i++) {\n        const crudName = dynamicFormRelation[i][\"crudName\"]\n        const crudLabel = dynamicFormRelation[i][\"crudLabel\"]\n        const path_name = dynamicFormRelation[i][\"crudName\"]\n\n        ////////////OTHERS CRUD\n        const MyComponent = lazy(() => import(`../../${path_name}`))\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <MyComponent\n              key={`extraCrud_${crudName}`}\n              lookupMode={true}\n              lookupMode_defaultFilter={{\n                [`filter_${storeName.replaceAll(\"apps_\", \"id_\")}`]:\n                  parseInt(id)\n              }}\n              lookupMode_fieldName={crudName}\n              lookupMode_dropdown={false}\n              lookupMode_isMulti={null}\n              lookupMode_onChange={null}\n              lookupMode_defaultValue={null}\n              lookupMode_isM2MDefValFromGrid={null}\n            />\n          </Fragment>\n        )\n      }\n\n      setDynamicComponents(componentsImport)\n    }\n    // }\n  }, [dispatch, store.selectedData])\n\n  return pageType === \"edit\" ? (\n    !store.isLoadingDetail ? (\n      store.selectedData !== null && store.selectedData !== undefined ? (\n        <div className=\"app-user-view\">\n          <Row>\n            <Col xl=\"5\" lg=\"6\" xs={{ order: 1 }} md={{ order: 0, size: 6 }}>\n              <Card>\n                <CardHeader>\n                  <h2>\n                    {t(\"Edit\")} {t(pageTitle)}\n                  </h2>\n                </CardHeader>\n                <CardBody>\n                  <FormAddEdit\n                    formState=\"edit\"\n                    updateDataToApi={updateDataToApi}\n                    postDataToApi={postDataToApi}\n                    handleReset={handleReset}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"7\" lg=\"7\" xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\n              <Nav pills className=\"mb-2\">\n                {extraCrud.map((item, index) => {\n                  const path_name = item.crudName\n                  return (\n                    <NavItem key={`navItem_${index + 1}`}>\n                      <NavLink\n                        active={active === `${index + 1}`}\n                        onClick={() => toggleTab(`${index + 1}`)}\n                      >\n                        <MenuOpen className=\"font-medium-3 me-50\" />\n                        <span className=\"fw-bold\">{t(item.crudLabel)}</span>\n                      </NavLink>\n                    </NavItem>\n                  )\n                })}\n              </Nav>\n              <TabContent activeTab={active}>\n                {extraCrud.map((item, index) => {\n                  const path_name = item.crudName\n                  return (\n                    <TabPane\n                      key={`tabPane_${index + 1}`}\n                      tabId={`${index + 1}`}\n                    >\n                      <Card>\n                        {item.crudDescription && (\n                          <CardHeader>\n                            <CardTitle tag=\"h4\">\n                              {t(item.crudDescription)}\n                            </CardTitle>\n                          </CardHeader>\n                        )}\n                        <CardBody className=\"pt-1\">\n                          {dynamicComponents[`${path_name}_comp`]}\n                        </CardBody>\n                      </Card>\n                    </TabPane>\n                  )\n                })}\n              </TabContent>\n            </Col>\n          </Row>\n        </div>\n      ) : (\n        <Alert color=\"danger\">\n          <h4 className=\"alert-heading\">{t(\"User not found\")}</h4>\n          <div className=\"alert-body\">\n            {t(\"User with id\")}: {id}{\" \"}\n            {t(\"doesn't exist. Check list of all Users\")}:{\" \"}\n            <Link to=\"/apps/user/list\">{t(\"Users List\")}</Link>\n          </div>\n        </Alert>\n      )\n    ) : (\n      <Fragment>\n        <div className=\"app-user-view\">\n          <UILoader\n            className=\"mt-5\"\n            blocking={store.isLoadingDetail}\n            loader={<Loader />}\n          ></UILoader>\n        </div>\n      </Fragment>\n    )\n  ) : (\n    <div className=\"app-user-view\">\n      <Row>\n        <Col xl=\"12\" lg=\"12\" xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\n          <Card>\n            <CardHeader>\n              <h2>\n                {t(\"Add\")} {t(pageTitle)}\n              </h2>\n            </CardHeader>\n            <CardBody>\n              <FormAddEdit\n                formState=\"add\"\n                updateDataToApi={updateDataToApi}\n                postDataToApi={postDataToApi}\n                handleReset={handleReset}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default DetailPage\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Permission\" ////\nexport const storeName = \"apps_permission\" ////\nexport const endpointName = \"api/permission\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = []\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"Role\",\n    fieldName: \"id_role\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const extraCrud = [\n  {\n    crudName: \"permission_menu\",\n    crudLabel: \"Permission to Menu\"\n  },\n  {\n    crudName: \"permission_endpoint\",\n    crudLabel: \"Permission to Endpoint\"\n    // crudDescription: \"Permission to Endpoint\"\n  }\n]\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: item.title,\n            post: false,\n            put: false,\n            delete: false,\n            get: false\n          }))\n          // state.selectedData = {\n          //   value: action.payload.data[0].id,\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\n          // }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"./store\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst FormAddEdit = ({\n  formState,\n  updateDataToApi,\n  postDataToApi,\n  handleReset\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  return (\n    <Form\n      onSubmit={\n        formState === \"edit\"\n          ? handleSubmit(updateDataToApi)\n          : handleSubmit(postDataToApi)\n      }\n    >\n      <Row className=\"gy-1 pt-75\">\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"title\">\n            {t(\"Title\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.title ?? \"\"}\n            control={control}\n            id=\"title\"\n            name=\"title\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.title ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"title\"\n                invalid={errors.title && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"description\">\n            {t(\"Description\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.description ?? \"\"}\n            control={control}\n            id=\"description\"\n            name=\"description\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.description\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                id=\"description\"\n                invalid={errors.description && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col md={12} xs={12}>\n          <Label className=\"form-label\" for=\"subject\">\n            {t(\"Subject\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue={store.selectedData?.subject ?? \"\"}\n            control={control}\n            id=\"subject\"\n            name=\"subject\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                className={\n                  errors.subject ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"subject\"\n                invalid={errors.subject && true}\n              />\n            )}\n          />\n        </Col>\n\n        <Col xs={12} className=\"text-center mt-2 pt-50\">\n          <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n            {t(\"Submit\")}\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" outline onClick={handleReset}>\n            {t(\"Cancel\")}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default FormAddEdit\n"],"sourceRoot":""}