{"version":3,"sources":["views/apps/role/store/index.js","views/apps/role/modal/index.js","views/apps/role/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","sort","reduce","obj","handleReset","isOpen","toggle","blocking","loader","onSubmit","storeData","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","render","invalid","description","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","htmlFor","onChange","width","can","sessionStorage","getItem","e","target","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","countSelectedCopy","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","columns","center","sortable","sortField","selector","row","cell","Ripple","preventDefault","size","placement","tableColumns","useMemo","column","minWidth","right","sx","bgcolor","dark","light","animation","height","useEffect","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget"],"mappings":"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","file":"static/js/67.98e8aa50.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Role\" ////\nexport const storeName = \"apps_role\" ////\nexport const endpointName = \"api/role\" ////\n\nexport const serverSideGrid = false ////\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id ?? getState()[storeName].selectedData.id\n    data[\"name\"] = getState()[storeName].selectedData.name\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const resetData = createAsyncThunk(\n  `${endpointName}/resetData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          state.selectedData = {\n            value: action.payload.data[0].id,\n            label: `${action.payload.data[0].name}`\n          }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      ///RESET\n      .addCase(resetData.rejected, (state) => {\n        state.data = []\n        state.dataSummary = []\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable multiline-ternary */\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport UILoader from \"@components/ui-loader\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport \"moment/locale/id\"\nimport { Fragment, useContext, useState } from \"react\"\nimport { Controller, useForm } from \"react-hook-form\"\nimport toast from \"react-hot-toast\"\nimport { useTranslation } from \"react-i18next\"\nimport { useParams } from \"react-router-dom\"\nimport {\n  Button,\n  CardText,\n  Col,\n  Form,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Row\n} from \"reactstrap\"\nimport {\n  getDataById,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  storeName\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [tgl1, setTgl1] = useState(null)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  function sortedObject(unordered) {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key]\n        return obj\n      }, {})\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n  const onChangeTgl1 = (event) => {\n    setTgl1(event)\n  }\n\n  const updateDataToApi = (data) => {\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(data)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"name\">\n                  {t(\"Name\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.name ?? \"\"}\n                  control={control}\n                  id=\"name\"\n                  name=\"name\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\n                      }\n                      id=\"name\"\n                      invalid={errors.name && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.description ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.description\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"description\"\n                      invalid={errors.description && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport debounce from \"lodash.debounce\"\nimport {\n  Fragment,\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from \"react\"\nimport DataTable from \"react-data-table-component\"\nimport {\n  ChevronDown,\n  Edit2,\n  File,\n  FileText,\n  Grid,\n  Printer,\n  Share,\n  Trash2\n} from \"react-feather\"\nimport { useTranslation } from \"react-i18next\"\nimport ReactPaginate from \"react-paginate\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getInvoice } from \"../../invoices/store\"\nimport ModalAddEdit from \"./modal\"\nimport {\n  deleteData,\n  deleteSelectedRowData,\n  detailFromGrid,\n  getAlwaysGrid,\n  getDataById,\n  getDataList,\n  pageTitle,\n  setDataById,\n  storeName\n} from \"./store\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Button,\n  Card,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Input,\n  Row,\n  UncontrolledDropdown,\n  UncontrolledTooltip\n} from \"reactstrap\"\n\nimport { Skeleton } from \"@mui/material\"\nimport { Loader, NoDataDisplay } from \"@src/shared/CommonComponents\"\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  return (\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          <div className=\"d-flex align-items-center w-100\">\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n            <Input\n              className=\"mx-50\"\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: \"5rem\" }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n          </div>\n        </Col>\n        <Col\n          xl=\"8\"\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className=\"d-flex align-items-center table-header-actions\">\n            <UncontrolledDropdown className=\"me-1\">\n              <DropdownToggle color=\"secondary\" caret outline>\n                <Share className=\"font-small-4 me-50\" />\n                <span className=\"align-middle\">{t(\"Export\")}</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        print: true,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Printer className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\n                </DropdownItem>\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"pdf\",\n                        dataYear: userData.dataYear,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <File className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">PDF</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"xls\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <Grid className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Excel</span>\n                </DropdownItem>\n\n                <DropdownItem\n                  className=\"w-100\"\n                  // onClick={() => downloadCSV(store.data)}\n                  onClick={() =>\n                    dispatch(\n                      getInvoice({\n                        rpt_name: \"sample\",\n                        output_type: \"csv\",\n                        dataYear: userData.dataYear,\n                        as_attachment: true,\n                        par_UNITKEY: 139,\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\n                      })\n                    )\n                  }\n                >\n                  <FileText className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">CSV</span>\n                </DropdownItem>\n\n                {/* <DropdownItem className=\"w-100\">\n                  <Copy className=\"font-small-4 me-50\" />\n                  <span className=\"align-middle\">Copy</span>\n                </DropdownItem> */}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            {ability.can(\n              \"post\",\n              sessionStorage.getItem(\"current_page_perm\")\n            ) ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = () => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        setLoading(false)\n        setShowModal(true)\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const columns = [\n    {\n      name: t(\"Name\"),\n      center: false,\n      sortable: true,\n      // minWidth: \"400px\",\n      sortField: \"name\",\n      selector: (row) => row.name,\n      cell: (row) => row.name\n    },\n    {\n      name: t(\"Description\"),\n      center: false,\n      sortable: true,\n      // minWidth: \"400px\",\n      sortField: \"description\",\n      selector: (row) => row.description,\n      cell: (row) => row.description\n    },\n    {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <div className=\"column-action text-center\">\n          {ability.can(\n            \"delete\",\n            sessionStorage.getItem(\"current_page_perm\")\n          ) ? (\n            <>\n              <Button.Ripple\n                id=\"btn-delete\"\n                className=\"btn-icon rounded-circle\"\n                color=\"flat-danger\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  handleDelete(row.id)\n                }}\n              >\n                <Trash2 size={16} />\n              </Button.Ripple>\n              <UncontrolledTooltip placement=\"left\" target=\"btn-delete\">\n                {t(\"Delete\")}\n              </UncontrolledTooltip>\n            </>\n          ) : null}\n\n          {ability.can(\n            \"update\",\n            sessionStorage.getItem(\"current_page_perm\")\n          ) ? (\n            <>\n              <Button.Ripple\n                className=\"btn-icon rounded-circle\"\n                color=\"flat-info\"\n                id=\"btn-edit\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  handleEdit(row)\n                }}\n              >\n                <Edit2 size={16} />\n              </Button.Ripple>\n              <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\n                {t(\"Edit\")}\n              </UncontrolledTooltip>\n            </>\n          ) : null}\n        </div>\n      )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: column.name,\n            center: column.center,\n            sortable: false,\n            minWidth: column.minWidth,\n            width: column.width,\n            right: column.right,\n            cell: (row) => (\n              <Skeleton\n                // variant={column.name === \"Actions\" ? \"circular\" : \"rectangular\"}\n                // sx={{ bgcolor: \"#eef2f8\" }}\n                sx={{ bgcolor: colors.dark.light }}\n                animation=\"wave\"\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\n                height={40}\n              />\n            )\n          }))\n        : columns.map((column) => ({\n            name: column.name,\n            center: column.center,\n            sortable: column.sortable,\n            minWidth: column.minWidth,\n            width: column.width,\n            sortField: column.sortField,\n            right: column.right,\n            selector: column.selector,\n            cell: column.cell\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage\n        })\n      )\n    }\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}