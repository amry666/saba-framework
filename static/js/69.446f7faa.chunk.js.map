{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js","@core/components/sidebar/index.js","views/apps/user/Sidebar.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason","Sidebar","props","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","onClick","isOpen","toggle","classnames","modalClassName","undefined","style","String","close","tag","options","wheelPropagation","defaultValues","email","password","phone","member_of","id_role","username","SidebarNewUsers","t","useTranslation","colors","useContext","ThemeColors","useState","setData","idRole","setIdRole","idUnit","setIdUnit","storeRole","useSelector","roles","storeUnit","units","useDispatch","useForm","control","setValue","setError","handleSubmit","formState","useEffect","selectedUnit","onClosed","onSubmit","every","field","checkIsValid","avatar","then","res","meta","requestStatus","toast","success","padding","color","main","border","iconTheme","primary","danger","type","for","defaultValue","rules","required","pattern","render","placeholder","invalid","minLength","maxLength","isClearable","theme","selectThemeColors","closeMenuOnSelect","onChange","isMulti","classNamePrefix","vaue","outline"],"mappings":"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","file":"static/js/69.446f7faa.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Role\" ////\nexport const storeName = \"apps_role\" ////\nexport const endpointName = \"api/role\" ////\n\nexport const serverSideGrid = false ////\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id ?? getState()[storeName].selectedData.id\n    data[\"name\"] = getState()[storeName].selectedData.name\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetDataActivity({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const resetData = createAsyncThunk(\n  `${endpointName}/resetData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          state.selectedData = {\n            value: action.payload.data[0].id,\n            label: `${action.payload.data[0].name}`\n          }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      ///RESET\n      .addCase(resetData.rejected, (state) => {\n        state.data = []\n        state.dataSummary = []\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { resetData as resetDataRole } from \"../../role/store\"\n\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\n//   // console.log(getState().users.status)\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\n//   // console.log(response.data.data)\n//   return response.data.data\n// })\nexport const getSummaryData = createAsyncThunk(\n  \"appUsers/getSummaryData\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\n  Object.keys(params).forEach((key) => {\n    if (params[key] === null || params[key] === \"\") {\n      delete params[key]\n    }\n  })\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\n    params\n  })\n  return {\n    params,\n    data: response.data.data,\n    totalPages: response.data.total\n  }\n})\n\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\n  // console.log(response)\n  return response.data.data\n})\n\nexport const addUser = createAsyncThunk(\n  \"appUsers/addUser\",\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\n      await dispatch(getData(getState().users.params))\n      dispatch(resetDataRole({}))\n      // return response.data\n      return user\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateUser = createAsyncThunk(\n  \"appUsers/updateUser\",\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = data.id\n    delete data.id\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.put(\n        `/api/user/${id}`,\n        data\n      )\n      dispatch(getUser(id))\n      dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data.errors)\n    }\n  }\n)\n\nexport const deleteUser = createAsyncThunk(\n  \"appUsers/deleteUser\",\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await useJwt.ssoAxiosInterceptor.delete(\n        `/api/user/${id}`\n      )\n      await dispatch(getData(getState().users.params))\n      dispatch(getSummaryData({}))\n      dispatch(resetDataRole({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const getDataEmployee = createAsyncThunk(\n  \"appUsers/getDataEmployee\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      totalPages: response.data.total\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const appUsersSlice = createSlice({\n  name: \"appUsers\",\n  initialState: {\n    crudTitle: \"User\",\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n    params: {},\n\n    // EMPLOYEE\n    status_employee: fetchStatus,\n    isLoading_employee: false,\n    error_employee: \"\" | null,\n    data_employee: [],\n    total_employee: 1,\n    params_employee: {},\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n    selectedUser: null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getData.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n      })\n      .addCase(getData.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataEmployee.pending, (state) => {\n        state.status_employee = \"loading\"\n        state.isLoading_employee = true\n      })\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status_employee = \"succeeded\"\n        state.isLoading_employee = false\n        state.data_employee = action.payload.data\n        state.params_employee = action.payload.params\n        state.total_employee = action.payload.totalPages\n      })\n      .addCase(getDataEmployee.rejected, (state, action) => {\n        state.status_employee = \"failed\"\n        state.isLoading_employee = false\n        state.error_employee = action.error.message\n      })\n\n      ///EDIT\n      .addCase(updateUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(updateUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        if (typeof action.payload === \"object\") {\n          state.errorAddEdit = JSON.stringify(action.payload)\n        } else {\n          state.errorAddEdit = action.payload.message\n        }\n      })\n\n      ///ADD\n      .addCase(addUser.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(addUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(addUser.rejected, (state, action) => {\n        console.log(action)\n\n        if (action.payload.errors) {\n          state.errorAddEdit = Object.values(action.payload.errors)\n        } else if (action.payload.error_reason) {\n          state.errorAddEdit = action.payload.message\n        }\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n      })\n\n      ///DELETE\n      .addCase(deleteUser.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteUser.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteUser.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        // console.log(action)\n        state.errorDelete = action.payload.message\n      })\n\n      ///DETAIL\n      .addCase(getUser.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n        state.selectedUser = null\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedUser = action.payload\n      })\n      .addCase(getUser.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedUser = null\n        state.errorDetail = action.error.message\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n","// ** Third Party Components\nimport { X } from \"react-feather\"\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\"\n\nconst Sidebar = (props) => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? (\n    closeBtn\n  ) : (\n    <X className=\"cursor-pointer\" size={15} onClick={toggleSidebar} />\n  )\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames(\"overflow-hidden\", {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames(\"modal-slide-in\", {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        \"sidebar-lg\": size === \"lg\",\n        \"sidebar-sm\": size === \"sm\"\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + \"px\" },\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag=\"div\"\n      >\n        <h5 className=\"modal-title\">\n          <span className=\"align-middle\">{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames(\"flex-grow-1\", {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf([\"sm\", \"lg\"]),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n// ** React Import\nimport { useState, useContext, useEffect } from \"react\"\nimport Sidebar from \"@components/sidebar\"\nimport { selectThemeColors } from \"@utils\"\nimport Select from \"react-select\"\nimport classnames from \"classnames\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Button, Label, FormText, Form, Input } from \"reactstrap\"\nimport store, { addUser } from \"@src/views/apps/user/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport toast from \"react-hot-toast\"\nimport { useTranslation } from \"react-i18next\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport InputPasswordToggle from \"@components/input-password-toggle\"\nconst defaultValues = {\n  email: \"\",\n  password: \"\",\n  phone: \"\",\n  member_of: \"\",\n  id_role: \"\",\n  name: \"\",\n  username: \"\"\n}\n\nconst checkIsValid = (data) => {\n  return Object.values(data).every((field) =>\n    typeof field === \"object\" || field !== \"member_of\"\n      ? field !== null && field !== \"\"\n      : field.length > 0\n  )\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** Hooks\n  const { t } = useTranslation()\n\n  // ** Theme Colors\n  const { colors } = useContext(ThemeColors)\n\n  // ** States\n  const [data, setData] = useState({})\n  const [idRole, setIdRole] = useState(3)\n  const [idUnit, setIdUnit] = useState([])\n  const store = useSelector((state) => state.users)\n  const storeRole = useSelector((state) => state.roles)\n  const storeUnit = useSelector((state) => state.units)\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = (data) => {\n    // console.log(data)\n    data[\"member_of\"] = idUnit !== null ? idUnit.map((item) => item.value) : []\n    data[\"id_role\"] = idRole !== null ? idRole : null\n    setData(data)\n    // console.log(data)\n    if (checkIsValid(data)) {\n      dispatch(\n        addUser({\n          id_role: data?.id_role,\n          avatar: \"\",\n          status: 1,\n          email: data.email,\n          member_of: data?.member_of,\n          phone: data.phone,\n          name: data.name,\n          username: data.username,\n          password: data.password\n        })\n      ).then((res) => {\n        if (res.meta.requestStatus === \"fulfilled\") {\n          toggleSidebar()\n          toast.success(`${t(\"Successfully Create Data\")}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          // console.log(store.errorAddEdit)\n          let message = \"\"\n          if (res.payload.errors) {\n            message = Object.values(res.payload.errors)\n          } else if (res.payload.error_reason) {\n            message = res.payload.message\n          }\n          toast.error(`${t(message)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, \"\")\n    }\n    // setRole(null)\n  }\n\n  useEffect(() => {\n    const selectedUnit = storeUnit.data.map((item) => ({\n      value: item.id,\n      label: item.name\n    }))\n    // console.log(selectedUnit[0])\n    setIdUnit([selectedUnit[0]])\n  }, [dispatch, storeUnit.data.length])\n\n  return (\n    <Sidebar\n      size=\"lg\"\n      open={open}\n      title={t(\"New User\")}\n      headerClassName=\"mb-1\"\n      contentClassName=\"pt-0\"\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"name\">\n            {t(\"Full Name\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: true,\n              pattern: {\n                value: /^[a-zA-Z\\s]*$/,\n                message: t(\"Invalid name, you can only use letters\")\n              }\n            }}\n            id=\"name\"\n            name=\"name\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                id=\"name\"\n                placeholder=\"John\"\n                invalid={errors.name && true}\n              />\n            )}\n          />\n          {errors.name && (\n            <FormText color=\"danger\">{t(errors.name.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"email\">\n            {t(\"Email\")} <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            name=\"email\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: t(\"You need to specify a valid email address\")\n              },\n              pattern: {\n                value: /^\\S+@\\S+$/i,\n                message: t(\"Not valid email adreess.\")\n              }\n            }}\n            render={({ field }) => (\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"john.doe@example.com\"\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color=\"muted\">\n            {t(\"You can use letters, numbers & periods\")}\n          </FormText>\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"username\">\n            {t(\"Username\")}\n            <span className=\"text-danger\">*</span>\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: true,\n              minLength: {\n                value: 4,\n                message: t(\"minimum number of character is 4\")\n              },\n              maxLength: {\n                value: 15,\n                message: t(\"maximum number of character is 15\")\n              },\n              pattern: {\n                value:\n                  /^[a-zA-Z0-9]+([a-zA-Z0-9](_|-| )[a-zA-Z0-9])*[a-zA-Z0-9]+$/,\n                message: t(\n                  \"You can use letters and numbers without white space\"\n                )\n              }\n            }}\n            id=\"username\"\n            name=\"username\"\n            render={({ field }) => (\n              <Input\n                {...field}\n                id=\"username\"\n                placeholder=\"john.doe.007\"\n                invalid={errors.username && true}\n              />\n            )}\n          />\n          {errors.username && (\n            <FormText color=\"danger\">{t(errors.username.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <div className=\"d-flex justify-content-between\">\n            <Label className=\"form-label\" for=\"login-password\">\n              {t(\"Password\")} <span className=\"text-danger\">*</span>\n            </Label>\n          </div>\n          <Controller\n            defaultValue=\"\"\n            id=\"password\"\n            name=\"password\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: t(\"Password is required\")\n              },\n              minLength: {\n                value: 8,\n                message: t(\"Password must have at least 8 characters\")\n              }\n            }}\n            render={({ field }) => (\n              <InputPasswordToggle\n                className=\"input-group-merge\"\n                invalid={errors.password && true}\n                {...field}\n              />\n            )}\n          />\n          {errors.password && (\n            <FormText color=\"danger\">{t(errors.password.message)}</FormText>\n          )}\n        </div>\n\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"phone\">\n            {t(\"Mobile Phone Number\")}\n          </Label>\n          <Controller\n            defaultValue=\"\"\n            control={control}\n            rules={{\n              required: false,\n              pattern: {\n                value: /^[0-9+-]+$/,\n                message: \"This is not a valid mobile phone, try again!\"\n              },\n              minLength: {\n                value: 6,\n                message: \"This number is too short.\"\n              },\n              maxLength: {\n                value: 14,\n                message: \"...And now it's too long.\"\n              }\n            }}\n            id=\"phone\"\n            name=\"phone\"\n            render={({ field }) => (\n              <Input {...field} id=\"phone\" placeholder=\"+62 813 940 10XX X\" />\n            )}\n          />\n          {errors.phone && (\n            <FormText color=\"danger\">{t(errors.phone.message)}</FormText>\n          )}\n        </div>\n        <div className=\"mb-1\">\n          <Label className=\"form-label\" for=\"id_unit\">\n            {t(\"Unit\")}\n          </Label>\n          <Select\n            id=\"id_unit\"\n            isClearable={false}\n            theme={selectThemeColors}\n            closeMenuOnSelect={false}\n            // defaultValue={null}\n            onChange={(data) => {\n              setIdUnit(data)\n            }}\n            defaultValue={\n              storeUnit.data.map((item) => ({\n                value: item.id,\n                label: item.name\n              }))[0]\n            }\n            isMulti\n            options={storeUnit.data.map((item) => ({\n              value: item.id,\n              label: item.name\n            }))}\n            className=\"react-select\"\n            classNamePrefix=\"select\"\n          />\n        </div>\n        <div className=\"mb-1\">\n          <Label for=\"role-select\">{t(\"Role\")}</Label>\n          <Select\n            id=\"id_role\"\n            isClearable={false}\n            options={storeRole.data.map((item) => ({\n              value: item.id,\n              label: item.name\n            }))}\n            defaultValue={{\n              label: \"editor\",\n              vaue: 3\n            }}\n            classNamePrefix=\"select\"\n            className={classnames(\"react-select\", {\n              \"is-invalid\": idRole === null\n            })}\n            theme={selectThemeColors}\n            onChange={(data) => {\n              // console.log(data.value)\n              setIdRole(data.value)\n            }}\n          />\n        </div>\n\n        <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n          {t(\"Submit\")}\n        </Button>\n        <Button type=\"reset\" color=\"secondary\" outline onClick={toggleSidebar}>\n          {t(\"Cancel\")}\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n"],"sourceRoot":""}