{"version":3,"sources":["views/apps/app/store/index.js","views/apps/unit_app/store/index.js","views/apps/unit_app/modal/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","storeApp","apps_app","storeUnit","units","useState","colors","useContext","ThemeColors","setLoadingText","idApp","setIdApp","unitOptions","setUnitOptions","unitOptionsSelected","setUnitOptionsSelected","useForm","control","setError","handleSubmit","errors","handleReset","useEffect","getDataListApp","filter","el","id_app","x","id_unit","isOpen","toggle","className","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","domain","render","invalid","theme","selectThemeColors","onChange","options","classnames","classNamePrefix","isClearable","closeMenuOnSelect","e","log","description","outline","onClick"],"mappings":"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","file":"static/js/7.e9a09a70.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"App\" ////\nexport const storeName = \"apps_app\" ////\nexport const endpointName = \"api/app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = false ////\nexport const getApiAfterPost = false ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Name\", //// Title Of Column\n  //   fieldName: \"name\" //// name of field from api\n  // },\n  // {\n  //   columnName: \"Code\",\n  //   fieldName: \"code\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      } else {\n        dispatch(pushCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      console.error(error)\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      } else {\n        dispatch(putCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const pushCurrentdata = createAsyncThunk(\n  `${endpointName}/pushCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putCurrentdata = createAsyncThunk(\n  `${endpointName}/putCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateCurrentdata = createAsyncThunk(\n  `${endpointName}/updateCurrentdata`,\n  async (putData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return putData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\n        // console.log(action.payload.data)\n        // console.log(state.data)\n        state.data.unshift(action.payload.data)\n      })\n\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload.data[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\n        )\n        // console.log(state.data[objIndex])\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"is_uploading\"] = null\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex] = action.payload.data\n        }\n      })\n\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\n        )\n        // console.log(objIndex)\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\n        }\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Unit Domain\" ////\nexport const storeName = \"apps_unit_app\" ////\nexport const endpointName = \"api/unit_app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Domain\", //// Title Of Column\n  //   fieldName: \"domain\" //// name of field from api\n  // }\n  // {\n  //   columnName: \"App Name\",\n  //   fieldName: \"attributes.app_name_alias\"\n  //   // fieldName2: \"app_name_alias\"\n  // },\n  // {\n  //   columnName: \"App\",\n  //   fieldName: \"app_name\"\n  // },\n  // {\n  //   columnName: \"Unit Name\",\n  //   fieldName: \"unit_name\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.selectedData = action.payload\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n        // console.log(state.selectedData)\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable multiline-ternary */\nimport { Fragment, useContext, useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById\n} from \"../store\"\nimport { getDataList as getDataListApp } from \"../../app/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport classnames from \"classnames\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const storeApp = useSelector((state) => state.apps_app)\n  const storeUnit = useSelector((state) => state.units)\n  const [selectedData, setSelectedData] = useState(store.selectedData)\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [idApp, setIdApp] = useState(null)\n  const [unitOptions, setUnitOptions] = useState([])\n  const [unitOptionsSelected, setUnitOptionsSelected] = useState({})\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(store.selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = (data) => {\n    data[\"id_unit\"] = unitOptionsSelected.value\n    data[\"id_app\"] = idApp.value\n    if (countChanges(data)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = (data) => {\n    if (\n      Object.values(data).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      // console.log(unitOptionsSelected)\n      data[\"id_unit\"] = unitOptionsSelected\n      data[\"id_app\"] = idApp\n      delete data[\"description\"]\n      // console.log(data)\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(data)).then((res) => {\n        //\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      for (const key in data) {\n        if (data[key] !== null && data[key]?.length === 0) {\n          setError(key, {\n            type: \"manual\"\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const handleChangeUnit = (e) => {\n    console.log(e)\n    setUnitOptionsSelected(e.value)\n    // setUnitOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\n  }\n\n  useEffect(() => {\n    if (storeApp.data.length === 0 || !storeApp.isLoading) {\n      dispatch(getDataListApp({}))\n    }\n\n    setIdApp(\n      storeApp.dataDropdown.filter(\n        (el) => el.value === store.selectedData?.id_app\n      )\n    )\n    const unitOptions = storeUnit.dataDropdown.filter((x) => x.value !== \"\")\n    setUnitOptions(unitOptions)\n    setUnitOptionsSelected(\n      unitOptions.filter((el) => el.value === store.selectedData?.id_unit)\n    )\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\n            </h2>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"domain\">\n                  {t(\"Domain Address\")}\n                  <span className=\"text-danger\">*</span>\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.domain ?? \"\"}\n                  control={control}\n                  id=\"domain\"\n                  name=\"domain\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.domain\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      id=\"domain\"\n                      invalid={errors.domain && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"id_app\">\n                  {t(\"App\")}\n                </Label>\n                <Select\n                  id=\"id_app\"\n                  theme={selectThemeColors}\n                  defaultValue={storeApp.dataDropdown.filter(\n                    (el) => el.value === selectedData?.id_app\n                  )}\n                  onChange={(data) => {\n                    setIdApp(data.value)\n                  }}\n                  options={storeApp.dataDropdown}\n                  className={classnames(\"react-select\", {\n                    \"is-invalid\": idApp === null\n                  })}\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"id_unit\">\n                  {t(\"Unit\")}\n                </Label>\n                <Select\n                  id=\"id_unit\"\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  closeMenuOnSelect={true}\n                  defaultValue={storeUnit.dataDropdown.filter(\n                    (el) => el.value === selectedData?.id_unit\n                  )}\n                  onChange={(data) => {\n                    handleChangeUnit(data)\n                  }}\n                  options={unitOptions}\n                  className=\"react-select\"\n                  classNamePrefix=\"select\"\n                />\n              </Col>\n\n              <Col md={12} xs={12}>\n                <Label className=\"form-label\" for=\"description\">\n                  {t(\"Description\")}\n                </Label>\n                <Controller\n                  defaultValue={store.selectedData?.description ?? \"\"}\n                  control={control}\n                  id=\"description\"\n                  name=\"description\"\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      className={\n                        errors.domain\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      type=\"textarea\"\n                      id=\"description\"\n                      invalid={errors.description && true}\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n"],"sourceRoot":""}