{"version":3,"sources":["views/apps/roles-permissions/store/role.js"],"names":["getData","createAsyncThunk","params","a","useJwt","ssoAxiosInterceptor","get","response","data","getSummaryData","Object","keys","forEach","key","addRole","role","dispatch","getState","post","roles","updateRole","id","name","deleteRole","delete","rolesSlice","createSlice","initialState","crudTitle","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","selected","reducers","selectRole","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions"],"mappings":"keAIaA,EAAUC,YAAiB,eAAD,uCAAiB,WAAOC,GAAP,eAAAC,EAAA,sEAC/BC,IAAOC,oBAAoBC,IAAI,YAAa,CACjEJ,WAFoD,cAChDK,EADgD,yBAI/C,CACLC,KAAMD,EAASC,KAAKA,OALgC,2CAAjB,uDAS1BC,EAAiBR,YAC5B,sBAD4C,uCAE5C,WAAOC,GAAP,eAAAC,EAAA,6DACEO,OAAOC,KAAKT,GAAQU,SAAQ,SAACC,GACP,OAAhBX,EAAOW,IAAiC,KAAhBX,EAAOW,WAC1BX,EAAOW,MAHpB,SAMyBT,IAAOC,oBAAoBC,IAAI,oBAAqB,CACzEJ,WAPJ,cAMQK,EANR,yBASS,CACLL,SACAM,KAAMD,EAASC,KAAKA,OAXxB,2CAF4C,uDAkBjCM,EAAUb,YACrB,gBADqC,uCAErC,WAAOc,EAAP,oBAAAZ,EAAA,6DAAea,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAAzB,SACQb,IAAOC,oBAAoBa,KAAK,YAAa,CAAEH,SADvD,uBAEQC,EAAShB,EAAQiB,IAAWE,MAAMjB,SAF1C,gCAGSa,GAHT,2CAFqC,yDAS1BK,EAAanB,YACxB,mBADwC,uCAExC,qCAAAE,EAAA,6DAASkB,EAAT,EAASA,GAAIC,EAAb,EAAaA,KAAUN,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,SAAjC,SACQb,IAAOC,oBAAoBa,KAAK,0BAA2B,CAC/DG,KACAC,SAHJ,uBAKQN,EAAShB,EAAQiB,IAAWE,MAAMjB,SAL1C,gCAMS,CAAEmB,KAAIC,SANf,2CAFwC,yDAY7BC,EAAatB,YACxB,mBADwC,uCAExC,WAAOoB,EAAP,oBAAAlB,EAAA,6DAAaa,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,SAAvB,SACQb,IAAOC,oBAAoBmB,OAAO,qBAAsB,CAAEH,OADlE,uBAEQL,EAAShB,EAAQiB,IAAWE,MAAMjB,SAF1C,gCAGSmB,GAHT,2CAFwC,yDAS7BI,EAAaC,YAAY,CACpCJ,KAAM,QACNK,aAAc,CACZC,UAAW,QAEXC,cANgB,EAOhBC,kBAAkB,EAClBC,aAAc,EACdC,YAAa,GAGbC,OAZgB,EAahBC,WAAW,EACXC,MAAO,EACP3B,KAAM,GAEN4B,SAAU,MAEZC,SAAU,CACRC,WAAY,SAACC,EAAOC,GACK,OAAnBA,EAAOC,QACTF,EAAMH,SAAW,KAEjBG,EAAMH,SAAWI,EAAOC,UAI9BC,cAAe,SAACC,GACdA,EAEGC,QAAQ5C,EAAQ6C,SAAS,SAACN,GACzBA,EAAMN,OAAS,UACfM,EAAML,WAAY,KAEnBU,QAAQ5C,EAAQ8C,WAAW,SAACP,EAAOC,GAClCD,EAAMN,OAAS,YACfM,EAAML,WAAY,EAClBK,EAAM/B,KAAOgC,EAAOC,QAAQjC,QAE7BoC,QAAQ5C,EAAQ+C,UAAU,SAACR,EAAOC,GACjCD,EAAMN,OAAS,SACfM,EAAML,WAAY,EAClBK,EAAMJ,MAAQK,EAAOL,MAAMa,WAI5BJ,QAAQnC,EAAeoC,SAAS,SAACN,GAChCA,EAAMV,cAAgB,UACtBU,EAAMT,kBAAmB,KAE1Bc,QAAQnC,EAAeqC,WAAW,SAACP,EAAOC,GAEzCD,EAAMV,cAAgB,YACtBU,EAAMT,kBAAmB,EACzBS,EAAMP,YAAcQ,EAAOC,QAAQjC,QAEpCoC,QAAQnC,EAAesC,UAAU,SAACR,EAAOC,GACxCD,EAAMV,cAAgB,SACtBU,EAAMT,kBAAmB,EACzBS,EAAMR,aAAeS,EAAOL,MAAMa,cAK3BV,EAAeb,EAAWwB,QAA1BX,WAEAb,YAAf","file":"static/js/79.2c882124.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\n\nexport const getData = createAsyncThunk(\"role/getData\", async (params) => {\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role\", {\n    params\n  })\n  return {\n    data: response.data.data\n  }\n})\n\nexport const getSummaryData = createAsyncThunk(\n  \"role/getSummaryData\",\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role/summary\", {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const addRole = createAsyncThunk(\n  \"roles/addRole\",\n  async (role, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.post(\"/api/role\", { role })\n    await dispatch(getData(getState().roles.params))\n    return role\n  }\n)\n\nexport const updateRole = createAsyncThunk(\n  \"roles/updateRole\",\n  async ({ id, name }, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.post(\"/apps/roles/update-role\", {\n      id,\n      name\n    })\n    await dispatch(getData(getState().roles.params))\n    return { id, name }\n  }\n)\n\nexport const deleteRole = createAsyncThunk(\n  \"roles/deleteRole\",\n  async (id, { dispatch, getState }) => {\n    await useJwt.ssoAxiosInterceptor.delete(\"/apps/roles/delete\", { id })\n    await dispatch(getData(getState().roles.params))\n    return id\n  }\n)\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\nexport const rolesSlice = createSlice({\n  name: \"roles\",\n  initialState: {\n    crudTitle: \"Roles\",\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n\n    selected: null\n  },\n  reducers: {\n    selectRole: (state, action) => {\n      if (action.payload === null) {\n        state.selected = null\n      } else {\n        state.selected = action.payload\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      ///ALL\n      .addCase(getData.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        state.status = \"succeeded\"\n        state.isLoading = false\n        state.data = action.payload.data\n      })\n      .addCase(getData.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.message\n      })\n\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n  }\n})\n\nexport const { selectRole } = rolesSlice.actions\n\nexport default rolesSlice.reducer\n"],"sourceRoot":""}