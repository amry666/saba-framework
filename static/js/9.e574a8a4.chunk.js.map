{"version":3,"sources":["views/apps/permission/store/index.js","views/apps/app/store/index.js","views/apps/endpoint/store/index.js","views/apps/endpoint/modal/index.js","views/apps/endpoint/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","title","pushCurrentdata","console","putCurrentdata","newData","updateCurrentdata","unshift","objIndex","current","findIndex","obj","parseInt","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","isTreeLayout","columnName","minWidth","fieldLabel","type","required","datafromStore","setDataList","notReload","ModalAddEdit","show","setShow","formState","setFormState","currentData","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","allStore","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","Loader","errors","className","handleReset","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","i","path_name","replaceAll","MyComponent","lazy","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","x","lookupMode_isM2MDefValFromGrid","defaultValue","onChange","e","target","isOpen","toggle","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","fallback","textAlign","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","filtersCustomAdd","searchString","ability","AbilityContext","dynamicFilterComponents","setDynamicFilterComponents","dynamicFilterDatas","invoices","getUserData","xl","htmlFor","width","can","sessionStorage","getItem","List","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","filtersCustom","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","countSelectedCopy","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","s","columns","column","sortField","center","sortable","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","app_logo","img","height","imgHeight","imgWidth","initials","content","app_name","tableColumns","useMemo","sx","bgcolor","dark","light","animation","removeDefaultValue","dataTree","parse","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","currentTarget","par_name"],"mappings":"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","file":"static/js/9.e574a8a4.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Permission\" ////\nexport const storeName = \"apps_permission\" ////\nexport const endpointName = \"api/permission\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = []\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"Role\",\n    fieldName: \"id_role\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const extraCrud = [\n  {\n    crudName: \"permission_menu\",\n    crudLabel: \"Permission to Menu\"\n  },\n  {\n    crudName: \"permission_endpoint\",\n    crudLabel: \"Permission to Endpoint\"\n    // crudDescription: \"Permission to Endpoint\"\n  }\n]\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: item.title,\n            post: false,\n            put: false,\n            delete: false,\n            get: false\n          }))\n          // state.selectedData = {\n          //   value: action.payload.data[0].id,\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\n          // }\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\n// import axios from \"axios\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"App\" ////\nexport const storeName = \"apps_app\" ////\nexport const endpointName = \"api/app\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = false ////\nexport const getApiAfterPost = false ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  // {\n  //   columnName: \"Name\", //// Title Of Column\n  //   fieldName: \"name\" //// name of field from api\n  // },\n  // {\n  //   columnName: \"Code\",\n  //   fieldName: \"code\"\n  // }\n  // {\n  //   columnName: \"Created Date\",\n  //   fieldName: \"created_date\",\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\n  // }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      } else {\n        dispatch(pushCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      console.error(error)\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    const id = getState()[storeName].selectedData.id\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut) {\n        dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      } else {\n        dispatch(putCurrentdata(response.data))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const pushCurrentdata = createAsyncThunk(\n  `${endpointName}/pushCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putCurrentdata = createAsyncThunk(\n  `${endpointName}/putCurrentdata`,\n  async (newData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return newData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const updateCurrentdata = createAsyncThunk(\n  `${endpointName}/updateCurrentdata`,\n  async (putData, { rejectWithValue }) => {\n    try {\n      // dispatch(resetData({}))\n      return putData\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    dynamicColumns,\n    pageTitle,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.status = \"succeeded\"\n        state.isLoading = false\n        if (action.payload.data.length > 0) {\n          state.data = action.payload.data\n          state.dataDropdown = action.payload.data.map((item) => ({\n            value: item.id,\n            label: `${item.name}`\n          }))\n          // state.selectedData = action.payload.data[0]\n        }\n        state.params = action.payload.params\n        state.total = action.payload.total\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\n        // console.log(action.payload.data)\n        // console.log(state.data)\n        state.data.unshift(action.payload.data)\n      })\n\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload.data[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\n        )\n        // console.log(state.data[objIndex])\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"is_uploading\"] = null\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex] = action.payload.data\n        }\n      })\n\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\n        // console.log(action)\n        // console.log(action.payload[\"id\"])\n        // console.log(current(state).data)\n        const objIndex = current(state).data.findIndex(\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\n        )\n        // console.log(objIndex)\n        if (objIndex !== -1) {\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\n        }\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { resetData } from \"../../../my-info/store/my_activities\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\n\nconst axios = useJwt.ssoAxiosInterceptor\nexport const pageTitle = \"Endpoint\" ////\nexport const storeName = \"apps_endpoint\" ////\nexport const endpointName = \"api/endpoint\" ////\n\nexport const serverSideGrid = true ////\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\nexport const getApiAfterPut = true ////\nexport const getApiAfterPost = true ////\nexport const getApiAfterDelete = true ////\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\nexport const deleteSelection = false\nexport const disabledAction = []\nexport const isManyToManyGrid = true\nexport const storeToRefreshAfterAll = []\nexport const isTreeLayout = false\n\n///////DYNAMIC COLUMNS FOR TABLE\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\nexport const dynamicColumns = [\n  {\n    columnName: \"Url\",\n    fieldName: \"url_path\",\n    minWidth: \"350px\"\n  }\n  // {\n  //   columnName: \"App\",\n  //   fieldName: \"app_name\",\n  //   minWidth: \"120px\"\n  // }\n]\n\n///////DYNAMIC FILTERS FOR TABLE\nexport const dynamicColumnsFilter = [\n  {\n    filterLabel: \"App\",\n    fieldName: \"id_app\"\n  }\n]\n\n///////DYNAMIC FORM FOR MODAL\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\nexport const dynamicForm = [\n  {\n    fieldName: \"url_path\",\n    fieldLabel: \"Url\",\n    type: \"text\",\n    required: true\n  },\n  {\n    fieldName: \"id_app\",\n    fieldLabel: \"App\",\n    type: \"dropdown\",\n    required: true,\n    datafromStore: \"app\"\n  }\n]\n\nexport const extraCrud = []\n\nexport const getSummaryData = createAsyncThunk(\n  `${endpointName}/getSummaryData`,\n  async (params) => {\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}/summary`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data\n    }\n  }\n)\n\nexport const getDataList = createAsyncThunk(\n  `${endpointName}/getDataList`,\n  async (params) => {\n    // console.log(params)\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null || params[key] === \"\") {\n        delete params[key]\n      }\n    })\n    const response = await axios.get(`/${endpointName}`, {\n      params\n    })\n    return {\n      params,\n      data: response.data.data,\n      total: response.data.total\n    }\n  }\n)\n\nexport const setDataList = createAsyncThunk(\n  `${endpointName}/setDataList`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nexport const getDataById = createAsyncThunk(\n  `${endpointName}/getDataById`,\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`/${endpointName}/${id}`)\n      return response.data.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const resetSelectedData = createAsyncThunk(\n  `${endpointName}/resetSelectedData`,\n  async ({ rejectWithValue }) => {\n    return rejectWithValue({})\n  }\n)\n\nexport const postData = createAsyncThunk(\n  `${endpointName}/postData`,\n  async (user, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.post(`/${endpointName}`, user)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPost) {\n        dispatch(getDataList(getState()[storeName].params))\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const putData = createAsyncThunk(\n  `${endpointName}/putData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    // Object.keys(data).forEach((key) => {\n    //   if (data[key] === null || data[key] === \"\") {\n    //     delete data[key]\n    //   }\n    // })\n    const id = data.id ?? getState()[storeName].selectedData.id\n    const notReload = data[\"notReload\"]\n    if (notReload) delete data[\"notReload\"]\n    try {\n      const response = await axios.put(`/${endpointName}/${id}`, data)\n      dispatch(resetSelectedData({}))\n      if (getApiAfterPut && !notReload) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteData = createAsyncThunk(\n  `${endpointName}/deleteData`,\n  async (id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}/${id}`)\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const deleteSelectedRowData = createAsyncThunk(\n  `${endpointName}/deleteSelectedRowData`,\n  async (data, { dispatch, getState, rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/${endpointName}`, { data })\n      if (getApiAfterDelete) {\n        await dispatch(getDataList(getState()[storeName].params))\n        if (getApiSummaryData) {\n          dispatch(getSummaryData({}))\n        }\n      }\n      dispatch(resetData({}))\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data)\n    }\n  }\n)\n\nexport const setDataById = createAsyncThunk(\n  `${endpointName}/setDataById`,\n  async (rowData, { rejectWithValue }) => {\n    return rejectWithValue(rowData)\n  }\n)\n\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\n\nexport const StoreSlice = createSlice({\n  name: storeName,\n  initialState: {\n    pageTitle,\n    dynamicColumns,\n    // SUMMARY\n    statusSummary: fetchStatus,\n    isLoadingSummary: false,\n    errorSummary: \"\" | null,\n    dataSummary: [],\n\n    // ALL\n    status: fetchStatus,\n    isLoading: false,\n    error: \"\" | null,\n    data: [],\n    total: 1,\n\n    params: {},\n    selectedData: null,\n    dataDropdown: [],\n\n    // DETAIL\n    statusDetail: fetchStatus,\n    isLoadingDetail: false,\n    errorDetail: \"\" | null,\n\n    // ADD&EDIT\n    statusAddEdit: fetchStatus,\n    isLoadingAddEdit: false,\n    errorAddEdit: \"\" | null,\n\n    // ADD&EDIT\n    statusDelete: fetchStatus,\n    isLoadingDelete: false,\n    errorDelete: \"\" | null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      ///SUMMARY\n      .addCase(getSummaryData.pending, (state) => {\n        state.statusSummary = \"loading\"\n        state.isLoadingSummary = true\n      })\n      .addCase(getSummaryData.fulfilled, (state, action) => {\n        // console.log(action.payload)\n        state.statusSummary = \"succeeded\"\n        state.isLoadingSummary = false\n        state.dataSummary = action.payload.data\n      })\n      .addCase(getSummaryData.rejected, (state, action) => {\n        state.statusSummary = \"failed\"\n        state.isLoadingSummary = false\n        state.errorSummary = action.error.message\n      })\n\n      ///ALL\n      .addCase(getDataList.pending, (state) => {\n        state.status = \"loading\"\n        state.isLoading = true\n      })\n      .addCase(getDataList.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.total\n        state.dataDropdown = action.payload.data.map((item) => ({\n          value: item.id,\n          label: item.title\n        }))\n        state.status = \"succeeded\"\n        state.isLoading = false\n      })\n      .addCase(getDataList.rejected, (state, action) => {\n        state.status = \"failed\"\n        state.isLoading = false\n        state.error = action.error.payload?.message\n      })\n\n      ///EDIT\n      .addCase(putData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(putData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(putData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///ADD\n      .addCase(postData.pending, (state) => {\n        state.statusAddEdit = \"loading\"\n        state.isLoadingAddEdit = true\n      })\n      .addCase(postData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusAddEdit = \"succeeded\"\n        state.isLoadingAddEdit = false\n      })\n      .addCase(postData.rejected, (state, action) => {\n        state.statusAddEdit = \"failed\"\n        state.isLoadingAddEdit = false\n        state.errorAddEdit = action.payload?.message\n      })\n\n      ///DELETE\n      .addCase(deleteData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DELETE-SELECTED-ROW\n      .addCase(deleteSelectedRowData.pending, (state) => {\n        state.statusDelete = \"loading\"\n        state.isLoadingDelete = true\n      })\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\n        // console.log(action.payload)\n        state.statusDelete = \"succeeded\"\n        state.isLoadingDelete = false\n      })\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\n        state.statusDelete = \"failed\"\n        state.isLoadingDelete = false\n        state.errorDelete = action.payload?.message\n      })\n\n      ///DETAIL\n      .addCase(getDataById.pending, (state) => {\n        state.statusDetail = \"loading\"\n        state.isLoadingDetail = true\n      })\n      .addCase(getDataById.fulfilled, (state, action) => {\n        state.statusDetail = \"succeeded\"\n        state.isLoadingDetail = false\n        state.selectedData = action.payload\n      })\n      .addCase(getDataById.rejected, (state, action) => {\n        state.statusDetail = \"failed\"\n        state.isLoadingDetail = false\n        state.selectedData = null\n        state.errorDetail = action.payload?.message\n      })\n\n      ///OTHERS\n      .addCase(resetSelectedData.rejected, (state) => {\n        state.selectedData = null\n      })\n      .addCase(setDataList.rejected, (state, action) => {\n        state.data = action.payload\n      })\n      .addCase(setDataById.rejected, (state, action) => {\n        state.selectedData = action.payload\n      })\n  }\n})\n\nexport default StoreSlice.reducer\n","/* eslint-disable brace-style */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport toast from \"react-hot-toast\"\nimport Cleave from \"cleave.js/react\"\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardText\n} from \"reactstrap\"\nimport { useTranslation } from \"react-i18next\"\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport \"moment/locale/id\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport { selectThemeColors, sortedObject } from \"@utils\"\nimport Select from \"react-select\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  storeName,\n  pageTitle,\n  postData,\n  putData,\n  resetSelectedData,\n  getDataById,\n  dynamicForm\n} from \"../store\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\n\nconst ModalAddEdit = ({\n  show,\n  setShow,\n  detailPage,\n  formState,\n  setFormState,\n  currentData = null\n}) => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const { colors } = useContext(ThemeColors)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const allStore = useSelector((state) => state)\n  const [dynamicComponents, setDynamicComponents] = useState({})\n  const [formDatas, setFormDatas] = useState({})\n  const [formDatasError, setFormDatasError] = useState({})\n\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({})\n\n  const Loader = () => {\n    return (\n      <Fragment>\n        <Spinner />\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\n      </Fragment>\n    )\n  }\n\n  const countChanges = (data) => {\n    if (formState === \"edit\") {\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\n      delete storeData[\"id\"]\n      for (let key in storeData) {\n        if (!(key in data)) delete storeData[key]\n      }\n      // console.log(JSON.stringify(sortedObject(storeData)))\n      // console.log(JSON.stringify(sortedObject(data)))\n      return (\n        JSON.stringify(sortedObject(storeData)) !==\n        JSON.stringify(sortedObject(data))\n      )\n    } else {\n      return true\n    }\n  }\n\n  const updateDataToApi = () => {\n    if (countChanges(formDatas)) {\n      if (\n        Object.values(data).every((field) => {\n          return field !== null && field !== \"\"\n        })\n      ) {\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\n        dispatch(putData(data)).then((res) => {\n          // console.log(res)\n          if (res.meta.requestStatus === \"fulfilled\") {\n            setShow(!show)\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            })\n            if (detailPage) {\n              dispatch(getDataById(id))\n            }\n          } else if (res.meta.requestStatus === \"rejected\") {\n            toast.error(res.payload.message, {\n              style: {\n                padding: \"16px\",\n                color: colors.danger.main,\n                border: `1px solid ${colors.danger.main}`\n              },\n              iconTheme: {\n                primary: colors.danger.main\n              }\n            })\n          }\n        })\n      } else {\n        for (const key in data) {\n          if (data[key]?.length === 0) {\n            setError(key, {\n              type: \"manual\"\n            })\n          }\n        }\n      }\n    } else {\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\n    }\n  }\n\n  const postDataToApi = () => {\n    if (\n      Object.values(formDatas).every((field) => {\n        return field !== null && field !== \"\"\n      })\n    ) {\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\n      dispatch(postData(formDatas)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setShow(!show)\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n          if (detailPage) {\n            dispatch(getDataById(id))\n          }\n        } else if (res.meta.requestStatus === \"rejected\") {\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    } else {\n      // console.log(\"ERORR\")\n      // console.log(formDatas)\n      let errorFields = Object.assign({}, formDatasError)\n      for (let key in formDatas) {\n        // console.log(key, formDatas[key])\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\n          errorFields[key] = true\n        }\n      }\n      // console.log(errorFields)\n      setFormDatasError(errorFields)\n    }\n  }\n\n  const handleReset = () => {\n    dispatch(resetSelectedData())\n  }\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    // console.log(value, fieldName, isMulti)\n    if (isMulti) {\n      if (formDatas[fieldName]) {\n        const index = formDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          formDatas[fieldName].splice(index, 1)\n        } else {\n          formDatas[fieldName].push(value)\n        }\n      } else {\n        formDatas[fieldName] = [value]\n      }\n    } else {\n      formDatas[fieldName] = value\n    }\n    // formDatasError[fieldName] = false\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\n    //   return el.type === \"dropdown\" || el.type === \"table\"\n    // })\n\n    const dynamicFormRelation = dynamicForm\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      formDatas[fieldName] = null\n      formDatasError[fieldName] = false\n\n      ////////////INPUT - DROPDOWN\n      if (\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\n        dynamicFormRelation[i][\"type\"] === \"table\"\n      ) {\n        const MyComponent = lazy(() => import(`../../${path_name}`))\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <MyComponent\n              key={`dynInput_${fieldName}`}\n              lookupMode={true}\n              lookupMode_fieldName={fieldName}\n              lookupMode_dropdown={\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\n              }\n              lookupMode_isMulti={\n                dynamicFormRelation[i].isMultiSelection ?? false\n              }\n              lookupMode_onChange={handleChangeInputs}\n              lookupMode_defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              lookupMode_isM2MDefValFromGrid={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\n              }\n            />\n          </Fragment>\n        )\n      }\n\n      ////////////INPUT - TEXT\n      else {\n        componentsImport[`${path_name}_comp`] = (\n          <Fragment>\n            <Label className=\"form-label\" for={fieldName}>\n              {t(fieldLabel ?? \"\")}\n            </Label>\n            <Input\n              key={`dynInput_${fieldName}`}\n              defaultValue={\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\n                  ? allStore[storeName].data.map((x) => x[fieldName])\n                  : allStore[storeName]?.selectedData\n                  ? allStore[storeName].selectedData[fieldName]\n                  : \"\"\n              }\n              onChange={(e) =>\n                handleChangeInputs(\n                  e.target.value,\n                  fieldName,\n                  dynamicFormRelation[i].isMultiSelection ?? false\n                )\n              }\n              // className={\n              //   !formDatasError[fieldName]\n              //     ? \"form-control is-invalid\"\n              //     : \"form-control\"\n              // }\n              id={`dynInput_${fieldName}`}\n            />\n          </Fragment>\n        )\n      }\n    }\n\n    setDynamicComponents(componentsImport)\n  }, [])\n\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => {\n        handleReset()\n        setShow(!show)\n      }}\n      className=\"modal-dialog-centered modal-lg\"\n    >\n      <UILoader\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\n        loader={<Loader />}\n      >\n        <ModalHeader\n          className=\"bg-transparent\"\n          toggle={() => {\n            handleReset()\n            setShow(!show)\n          }}\n        ></ModalHeader>\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\n          <div className=\"text-center mb-2\">\n            <h2 className=\"mb-1\">\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\n            </h2>\n            <p className=\"mb-1\">\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\n            </p>\n          </div>\n          <Form\n            onSubmit={\n              formState === \"edit\"\n                ? handleSubmit(updateDataToApi)\n                : handleSubmit(postDataToApi)\n            }\n          >\n            <Row className=\"gy-1 pt-75\">\n              {dynamicForm.map((item, index) => {\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\n                  if (item.type === \"table\") {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"dynamicForm_input\"\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  } else {\n                    return (\n                      <Col key={path_name} md={12} xs={12}>\n                        <Suspense fallback={<div>Loading...</div>}>\n                          <div\n                            className={\n                              !formDatasError[item.fieldName]\n                                ? \"\"\n                                : \"dynamicForm_input_invalid\"\n                            }\n                          >\n                            {dynamicComponents[`${path_name}_comp`]}\n                            {item?.isM2MDefValFromGrid &&\n                              formDatas[item.fieldName] && (\n                                <div\n                                  style={{ textAlign: \"right\" }}\n                                  className=\"text-primary\"\n                                >\n                                  {formDatas[item.fieldName]?.length}{\" \"}\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\n                                </div>\n                              )}\n                          </div>\n                        </Suspense>\n                      </Col>\n                    )\n                  }\n                } else {\n                  return (\n                    <Col key={path_name} md={12} xs={12}>\n                      <div\n                        className={\n                          !formDatasError[item.fieldName]\n                            ? \"\"\n                            : \"dynamicForm_input_invalid\"\n                        }\n                      >\n                        {dynamicComponents[`${path_name}_comp`]}\n                      </div>\n                    </Col>\n                  )\n                }\n              })}\n\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\n                  {t(\"Submit\")}\n                </Button>\n                <Button\n                  type=\"reset\"\n                  color=\"secondary\"\n                  outline\n                  onClick={() => {\n                    handleReset()\n                    setFormState(\"add\")\n                    setShow(false)\n                  }}\n                >\n                  {t(\"Cancel\")}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </ModalBody>\n      </UILoader>\n    </Modal>\n  )\n}\n\nexport default ModalAddEdit\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\n/* eslint-disable multiline-ternary */\nimport {\n  Fragment,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n  forwardRef,\n  lazy,\n  Suspense\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport ModalAddEdit from \"./modal\"\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\nimport {\n  storeName,\n  pageTitle,\n  serverSideGrid,\n  detailFromGrid,\n  getApiAfterPut,\n  getApiAfterPost,\n  getApiAfterDelete,\n  getSummarysData,\n  getAlwaysGrid,\n  getDataList,\n  getDataById,\n  setDataById,\n  deleteData,\n  deleteSelectedRowData,\n  disabledAction,\n  dynamicColumnsFilter,\n  setDataList\n} from \"./store\"\n\nimport { getDataList as getDataListApp } from \"../app/store\"\nimport { getInvoice } from \"../../invoices/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactPaginate from \"react-paginate\"\nimport DataTable from \"react-data-table-component\"\nimport debounce from \"lodash.debounce\"\nimport {\n  ChevronDown,\n  Share,\n  Printer,\n  FileText,\n  File,\n  Grid\n} from \"react-feather\"\n\nimport { getUserData } from \"@utils\"\n\nimport UILoader from \"@components/ui-loader\"\nimport Spinner from \"@components/spinner/Loading-spinner\"\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\nimport toast from \"react-hot-toast\"\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  CardText\n} from \"reactstrap\"\n\nimport \"@styles/react/libs/react-select/_react-select.scss\"\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { Skeleton } from \"@mui/material\"\nimport Moment from \"moment\"\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\n\nimport { getDataList as getDataListPermission } from \"../permission/store\"\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\nimport Avatar from \"@components/avatar\"\n\nconst MySwal = withReactContent(Swal)\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className=\"form-check\">\n    <Input type=\"checkbox\" ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({\n  store,\n  toggleSidebar,\n  handlePerPage,\n  rowsPerPage,\n  handleFilter,\n  searchTerm,\n  selectedRow,\n  handleDeleteSelected,\n  handleFiltersChange,\n  filtersCustomAdd,\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const dispatch = useDispatch()\n  const allStore = useSelector((state) => state)\n  const [dynamicFilterComponents, setDynamicFilterComponents] = useState({})\n  const [dynamicFilterDatas, setDynamicFilterDatas] = useState({})\n  const storeInvoice = useSelector((state) => state.invoices)\n  const userData = getUserData()\n\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\n    fieldName = `filter_${fieldName}`\n    if (isMulti) {\n      if (dynamicFilterDatas[fieldName]) {\n        const index = dynamicFilterDatas[fieldName].indexOf(value)\n        if (index !== -1) {\n          dynamicFilterDatas[fieldName].splice(index, 1)\n        } else {\n          dynamicFilterDatas[fieldName].push(value)\n        }\n      } else {\n        dynamicFilterDatas[fieldName] = [value]\n      }\n    } else {\n      dynamicFilterDatas[fieldName] = value\n    }\n    return handleFiltersChange(dynamicFilterDatas[fieldName], fieldName)\n  }\n\n  useEffect(() => {\n    // DYNAMIC IMPORT COMPONENTS\n    let componentsImport = {}\n    for (let i = 0; i < dynamicColumnsFilter.length; i++) {\n      const fieldName = dynamicColumnsFilter[i][\"fieldName\"]\n      const path_name = dynamicColumnsFilter[i][\"fieldName\"].replaceAll(\n        \"id_\",\n        \"\"\n      )\n\n      dynamicFilterDatas[`filter_${fieldName}`] = null\n      const MyComponent = lazy(() => import(`../${path_name}`))\n      componentsImport[`${path_name}_comp`] = (\n        <MyComponent\n          lookupMode={true}\n          lookupMode_fieldName={fieldName}\n          lookupMode_dropdown={true}\n          lookupMode_isMulti={dynamicColumnsFilter[i].isMultiSelection ?? false}\n          lookupMode_onChange={handleChangeInputs}\n          lookupMode_defaultValue={\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid\n              ? allStore[storeName].data.map((x) => x[fieldName])\n              : allStore[storeName]?.selectedData\n              ? allStore[storeName].selectedData[fieldName]\n              : \"\"\n          }\n          lookupMode_isM2MDefValFromGrid={\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid ?? false\n          }\n        />\n      )\n    }\n\n    setDynamicFilterComponents(componentsImport)\n  }, [dispatch, dynamicFilterDatas])\n\n  return (\n    <div\n      className={`invoice-list-table-header w-100 ms-50 mb-75 ${\n        !lookupMode ? \"mt-2 me-1\" : \"\"\n      }`}\n    >\n      <Row>\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\n          {!lookupMode && (\n            <div className=\"d-flex align-items-center w-100\">\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\n              <Input\n                className=\"mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{ width: \"5rem\" }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n              </Input>\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\n            </div>\n          )}\n        </Col>\n        <Col\n          xl=\"8\"\n          className={`d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column p-0 mt-xl-0 mt-1 ${\n            !lookupMode ? \"pe-xl-1\" : \"\"\n          }`}\n        >\n          {selectedRow?.length > 0 &&\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\n          !lookupMode ? (\n            <div\n              className={`d-flex align-items-center mb-sm-0 mb-1 ${\n                !lookupMode ? \"me-1\" : \"\"\n              }`}\n            >\n              <Button\n                className=\"delete-users\"\n                color=\"danger\"\n                onClick={handleDeleteSelected}\n              >\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\n              </Button>\n            </div>\n          ) : null}\n          <div className={`d-flex align-items-center mb-sm-0 mb-1 me-1`}>\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              {t(\"Search\")}:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n\n          {dynamicColumnsFilter.map((item, index) => {\n            const path_name = item.fieldName.replaceAll(\"id_\", \"\")\n            return (\n              <div\n                key={path_name}\n                className={`mt-50 width-300 mt-sm-0 mt-1 ${\n                  !lookupMode ? \"me-1\" : \"\"\n                }`}\n              >\n                <Suspense fallback={<div>Loading...</div>}>\n                  {dynamicFilterComponents[`${path_name}_comp`]}\n                </Suspense>\n              </div>\n\n              // <Col key={path_name} md={12} xs={12}>\n              //   <Label className=\"form-label\" for={item.fieldName}>\n              //     {t(item.fieldLabel ?? \"\")}\n              //   </Label>\n              //   <Suspense fallback={<div>Loading...</div>}>\n              //     <div\n              //       className={\n              //         !formDatasError[item.fieldName]\n              //           ? \"dynamicForm_input\"\n              //           : \"dynamicForm_input dynamicForm_input_invalid\"\n              //       }\n              //     >\n              //       {dynamicComponents[`${path_name}_comp`]}\n              //       {item?.isM2MDefValFromGrid &&\n              //         formDatas[item.fieldName] && (\n              //           <div\n              //             style={{ textAlign: \"right\" }}\n              //             className=\"text-primary\"\n              //           >\n              //             {formDatas[item.fieldName]?.length}{\" \"}\n              //             {t(item.fieldLabel)} {t(\"Selected\")}\n              //           </div>\n              //         )}\n              //     </div>\n              //   </Suspense>\n              // </Col>\n            )\n          })}\n\n          {/* {!filtersCustomAdd[\"filter_id_permission\"] ? (\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\n              <Input\n                type=\"select\"\n                name=\"select\"\n                // value={role}\n                onChange={(e) =>\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\n                }\n              >\n                <option value=\"\">\n                  {t(\"Select\")} {t(\"Permission\")}\n                </option>\n                {allStore[\"apps_permission\"].data.map((item, index) => (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                ))}\n              </Input>\n            </div>\n          ) : null} */}\n          <div className=\"d-flex align-items-center table-header-actions\">\n            {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\n            !lookupMode ? (\n              <Button\n                className=\"add-new-user\"\n                color=\"primary\"\n                onClick={toggleSidebar}\n                // onClick={handleAdd}\n              >\n                {t(\"Add New\")} {t(pageTitle)}\n              </Button>\n            ) : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst List = ({\n  filtersCustomAdd,\n  searchString,\n  lookupMode,\n  lookupMode_fieldName,\n  lookupMode_defaultValue,\n  lookupMode_onChange,\n  lookupMode_isMulti,\n  lookupMode_isM2MDefValFromGrid\n}) => {\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state[storeName])\n  const storeApp = useSelector((state) => state.apps_app)\n  const { t } = useTranslation()\n  const ability = useContext(AbilityContext)\n\n  const { colors } = useContext(ThemeColors)\n\n  const [sort_dir, setSortDir] = useState(\"desc\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sort, setSort] = useState(\"id\")\n  const [rowsPerPage, setRowsPerPage] = useState(lookupMode ? 5 : 10)\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const [filtersCustom, setFiltersCustom] = useState(filtersCustomAdd ?? {})\n\n  const [toggleCleared, setToggleCleared] = useState(false)\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\n  const [showModal, setShowModal] = useState(false)\n  const [formState, setFormState] = useState(null)\n\n  const handleEdit = (rowData) => {\n    setFormState(\"edit\")\n    if (!detailFromGrid) {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(getDataById(rowData.id)).then((res) => {\n        if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    } else {\n      setLoadingText(\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\n      )\n      setLoading(true)\n      dispatch(setDataById(rowData)).then(() => {\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\n          dispatch(getDataListApp({})).then((res) => {\n            setLoading(false)\n            setShowModal(true)\n          })\n        } else {\n          setLoading(false)\n          setShowModal(true)\n        }\n      })\n    }\n  }\n\n  const handleCloseModal = () => {\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    revivalBack()\n  }\n\n  const toggleSidebar = () => {\n    // console.log(\"here\")\n    setFormState(\"add\")\n    setSidebarOpen(!sidebarOpen)\n    setShowModal(!showModal)\n    neutralizeBack(handleCloseModal)\n  }\n\n  const handleDelete = async (id) => {\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\n      setLoading(true)\n      dispatch(deleteData(id)).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setLoading(false)\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\n            style: {\n              padding: \"16px\",\n              color: colors.success.main,\n              border: `1px solid ${colors.success.main}`\n            },\n            iconTheme: {\n              primary: colors.success.main\n            }\n          })\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  const handleDeleteSelected = async () => {\n    const countSelectedCopy = selectedRows.length\n    const result = await MySwal.fire({\n      title: `${t(\"Are you sure?\")}`,\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\n        \"selected data. Deleted data cannot be recovered\"\n      )}!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\n        pageTitle\n      )}!`,\n      cancelButtonText: `${t(\"Cancel\")}`,\n      customClass: {\n        confirmButton: \"btn btn-primary\",\n        cancelButton: \"btn btn-outline-danger ms-1\"\n      },\n      buttonsStyling: false\n    })\n    if (result.value) {\n      setLoadingText(\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\n      )\n      setLoading(true)\n      const values = selectedRows.map((a) => a.id)\n      // console.log(values)\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\n        // console.log(res)\n        if (res.meta.requestStatus === \"fulfilled\") {\n          setSelectedRows([])\n          setToggleCleared(!toggleCleared)\n          setLoading(false)\n          toast.success(\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\n            {\n              style: {\n                padding: \"16px\",\n                color: colors.success.main,\n                border: `1px solid ${colors.success.main}`\n              },\n              iconTheme: {\n                primary: colors.success.main\n              }\n            }\n          )\n        } else if (res.meta.requestStatus === \"rejected\") {\n          setLoading(false)\n          toast.error(res.payload.message, {\n            style: {\n              padding: \"16px\",\n              color: colors.danger.main,\n              border: `1px solid ${colors.danger.main}`\n            },\n            iconTheme: {\n              primary: colors.danger.main\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /////PAGINATION SERVERSIDE\n  const handlePagination = (page) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: rowsPerPage,\n        page: page.selected + 1,\n        ...filtersCustom\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const handlePerPage = (e) => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        length: value,\n        page: currentPage,\n        ...filtersCustom\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  const handleDebounceFn = (inputValue) => {\n    dispatch(\n      getDataList({\n        sort_dir,\n        search: inputValue,\n        sort,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\n\n  const handleFilter = (event) => {\n    setSearchTerm(event)\n    debounceFn(event)\n  }\n\n  const handleChangeLookupMode = (\n    e,\n    id,\n    lookupMode_fieldName,\n    lookupMode_isMulti\n  ) => {\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\n  }\n\n  const handleFiltersChange = (value, par_name) => {\n    filtersCustom[par_name] = value\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSortDir(sortDirection)\n    setSort(column.sortField)\n    dispatch(\n      getDataList({\n        sort_dir,\n        sort,\n        search: searchTerm,\n        page: currentPage,\n        length: rowsPerPage,\n        ...filtersCustom\n      })\n    )\n  }\n\n  const handleRowSelected = useCallback((state) => {\n    setSelectedRows(state.selectedRows)\n    if (lookupMode && lookupMode_isMulti) {\n      lookupMode_onChange(\n        state.selectedRows.map((s) => s.id),\n        lookupMode_fieldName,\n        lookupMode_isMulti\n      )\n    }\n  }, [])\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        containerClassName={\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\n        }\n      />\n    )\n  }\n\n  const renderCell = (row, column) => {\n    const field = row[column.fieldName]\n    const dataFormat = column.dataFormat\n    if (dataFormat) {\n      if (dataFormat.includes(\":\")) {\n        const columnTypeFormat = dataFormat.split(\":\")\n        const columnType = columnTypeFormat[0]\n        const columnFormat = columnTypeFormat[1]\n        let columnFormated = row[column.fieldName]\n        if (columnType === \"date\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        if (columnType === \"datetime\") {\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\n          if (columnFormat) {\n            columnFormated = Moment(field).format(columnFormat)\n          }\n        }\n        return columnFormated\n      }\n    }\n    return row[column.fieldName]\n  }\n\n  const columns = [\n    ...store.dynamicColumns.map((column) => ({\n      name: column.columnName,\n      sortField: column.fieldName,\n      center: false,\n      sortable: true,\n      minWidth: column.minWidth,\n      selector: (row) => row[column.fieldName],\n      cell: (row) => renderCell(row, column)\n    })),\n    {\n      name: t(\"App\"),\n      center: false,\n      sortable: false,\n      selector: (row) => row?.app_logo,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {row?.app_logo ? (\n            <Avatar\n              className=\"me-1\"\n              img={row?.app_logo}\n              width=\"32\"\n              height=\"32\"\n              imgHeight=\"25\"\n              imgWidth=\"30\"\n              color={\"light-primary\"}\n            />\n          ) : (\n            <Avatar\n              initials\n              className=\"me-1\"\n              // color={row.avatarColor}\n              content={row?.app_name ?? \"\"}\n            />\n          )}\n\n          <div className=\"d-flex flex-column\">\n            <span className=\"fw-bolder\">{row.app_name}</span>\n          </div>\n        </div>\n      )\n    },\n    // {\n    //   name: t(\"App Name\"),\n    //   sortField: \"attributes\",\n    //   center: false,\n    //   sortable: true,\n    //   selector: (row) => row.attributes,\n    //   cell: (row) => row.attributes\n    // },\n    !lookupMode && {\n      name: t(\"Actions\"),\n      center: true,\n      width: \"140px\",\n      cell: (row) => (\n        <GlobalActionsTable\n          disabledAction={disabledAction}\n          row={row}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          storeName={storeName}\n        />\n      )\n      // (\n      //   <Input\n      //     disabled={row.hidden}\n      //     defaultChecked={row.checked}\n      //     onChange={(e) =>\n      //       handleChangeLookupMode(\n      //         e,\n      //         row.id,\n      //         lookupMode_fieldName,\n      //         lookupMode_isMulti\n      //       )\n      //     }\n      //     type=\"checkbox\"\n      //     id={`checkbox-${row.id}`}\n      //   />\n      // )\n    }\n  ]\n\n  const tableColumns = useMemo(\n    () =>\n      store.isLoading\n        ? columns.map((column) => ({\n            name: t(column.name),\n            ...column,\n            sortable: false,\n            cell: (row) =>\n              column.name === \"Actions\" ? (\n                <Fragment>\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    className=\"ms-2 me-1\"\n                    width={30}\n                    height={40}\n                  />\n                  <Skeleton\n                    sx={{ bgcolor: colors.dark.light }}\n                    animation=\"wave\"\n                    width={30}\n                    height={40}\n                  />\n                </Fragment>\n              ) : (\n                <Skeleton\n                  sx={{ bgcolor: colors.dark.light }}\n                  animation=\"wave\"\n                  width=\"100%\"\n                  height={40}\n                />\n              )\n          }))\n        : columns.map((column) => ({\n            name: t(column.name),\n            ...column\n          })),\n    [store.isLoading, columns]\n  )\n\n  const dataToRender = () => {\n    const filters = {\n      search: searchTerm\n    }\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    if (!store.isLoading) {\n      if (store.data.length > 0) {\n        return store.data\n      } else if (store.data.length === 0 && isFiltered) {\n        return []\n      } else {\n        // console.log(store.allData)\n        // return store.allData.slice(0, rowsPerPage)\n      }\n    } else {\n      return Array(10).fill({})\n    }\n  }\n\n  const removeDefaultValue = (data, dataTree) => {\n    // console.log(dataTree)\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\n    // mainArray.forEach(function iter(a) {\n    //   if (data.includes(a.id)) {\n    //     a[\"checked\"] = true\n    //     a[\"hidden\"] = true\n    //   }\n    //   // console.log(a.id, !data.includes(a.id))\n\n    //   // eslint-disable-next-line no-unused-expressions\n    //   Array.isArray(a.children) && a.children.forEach(iter)\n    // })\n    // dispatch(setDataList(mainArray))\n  }\n\n  useEffect(() => {\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\n      dispatch(\n        getDataList({\n          sort_dir,\n          sort,\n          search: searchTerm,\n          page: currentPage,\n          length: rowsPerPage,\n          ...filtersCustom\n        })\n      ).then((x) => {\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\n        }\n      })\n    }\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\n      removeDefaultValue(lookupMode_defaultValue, store.data)\n    }\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\n\n  return (\n    <Fragment>\n      <UILoader blocking={loading} loader={<Loader />}>\n        <Card className=\"overflow-hidden\">\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\n            <DataTable\n              noHeader\n              subHeader\n              sortServer\n              responsive\n              pagination\n              paginationServer\n              paginationTotalRows={store.total}\n              paginationComponent={CustomPagination}\n              selectableRows\n              onSelectedRowsChange={handleRowSelected}\n              selectableRowsHighlight\n              // onRowClicked={handleRowSelected}\n              clearSelectedRows={toggleCleared}\n              selectableRowsComponent={BootstrapCheckbox}\n              noDataComponent={<NoDataDisplay />}\n              // fixedHeader\n              // fixedHeaderScrollHeight=\"600px\"\n              style={{ \"min-height\": \"400px\" }}\n              highlightOnHover\n              pointerOnHover\n              columns={tableColumns}\n              onSort={handleSort}\n              sortIcon={<ChevronDown />}\n              className=\"react-dataTable\"\n              data={dataToRender()}\n              subHeaderComponent={\n                <CustomHeader\n                  store={store}\n                  searchTerm={searchTerm}\n                  rowsPerPage={rowsPerPage}\n                  handleFilter={handleFilter}\n                  handlePerPage={handlePerPage}\n                  toggleSidebar={toggleSidebar}\n                  selectedRow={selectedRows}\n                  handleDeleteSelected={handleDeleteSelected}\n                  handleFiltersChange={handleFiltersChange}\n                  filtersCustomAdd={filtersCustomAdd}\n                  lookupMode={lookupMode}\n                />\n              }\n            />\n          </div>\n        </Card>\n\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n      </UILoader>\n\n      {showModal && (\n        <ModalAddEdit\n          formState={formState}\n          show={showModal}\n          setShow={toggleSidebar}\n          detailPage={false}\n          setFormState={setFormState}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default List\n"],"sourceRoot":""}